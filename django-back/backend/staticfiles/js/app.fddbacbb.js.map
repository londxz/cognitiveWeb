{"version":3,"file":"js/app.fddbacbb.js","mappings":"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","sources":["webpack://my-vue-app/./src/App.vue","webpack://my-vue-app/./src/App.vue?7ccd","webpack://my-vue-app/./src/store/index.js","webpack://my-vue-app/./src/components/Auth/Login.vue","webpack://my-vue-app/./src/components/Auth/Login.vue?3a8f","webpack://my-vue-app/./src/components/Auth/Register.vue","webpack://my-vue-app/./src/components/Auth/Register.vue?ce7e","webpack://my-vue-app/./src/components/Results.vue","webpack://my-vue-app/./src/components/Results.vue?b96a","webpack://my-vue-app/./src/components/Tests/App1.vue","webpack://my-vue-app/./src/components/Tests/Test1/ThisTimer.vue","webpack://my-vue-app/./src/components/Tests/Test1/ThisTimer.vue?9d37","webpack://my-vue-app/./src/components/Tests/Test1/AttentionTest.vue","webpack://my-vue-app/./src/components/Tests/Test1/AttentionTest.vue?995e","webpack://my-vue-app/./src/components/Tests/Test1/ReactionTest.vue","webpack://my-vue-app/./src/components/Tests/Test1/ReactionTest.vue?ed6c","webpack://my-vue-app/./src/components/Tests/Test1/MemoryTest.vue","webpack://my-vue-app/./src/components/Tests/Test1/MemoryTest.vue?0c04","webpack://my-vue-app/./src/components/Tests/Test1/TextSelectionTest.vue","webpack://my-vue-app/./src/components/Tests/Test1/TextSelectionTest.vue?fa59","webpack://my-vue-app/./src/components/Tests/Test1/SumDigitsTest.vue","webpack://my-vue-app/./src/components/Tests/Test1/SumDigitsTest.vue?2335","webpack://my-vue-app/./src/components/Tests/Test2/SecondTest.vue","webpack://my-vue-app/./src/components/Tests/Test2/SecondTest.vue?dad4","webpack://my-vue-app/./src/components/Tests/Test2/ThirdTest.vue","webpack://my-vue-app/./src/components/Tests/Test2/ThirdTest.vue?0873","webpack://my-vue-app/./src/components/Tests/Test2/FourthTest.vue","webpack://my-vue-app/./src/components/Tests/Test2/FourthTest.vue?2561","webpack://my-vue-app/./src/components/Tests/Test2/FifthTest.vue","webpack://my-vue-app/./src/components/Tests/Test2/FifthTest.vue?7a39","webpack://my-vue-app/./src/components/Tests/Test3/SovietLogicTest.vue","webpack://my-vue-app/./src/components/Tests/Test3/SovietLogicTest.vue?1442","webpack://my-vue-app/./src/components/Tests/Test3/SpatialThinkingTest.vue","webpack://my-vue-app/./src/components/Tests/Test3/SpatialThinkingTest.vue?3ef0","webpack://my-vue-app/./src/components/Tests/Test3/ReactionTimeTest.vue","webpack://my-vue-app/./src/components/Tests/Test3/ReactionTimeTest.vue?049e","webpack://my-vue-app/./src/components/Tests/Test3/NBackGame.vue","webpack://my-vue-app/./src/components/Tests/Test3/NBackGame.vue?81ec","webpack://my-vue-app/./src/components/Tests/Test3/TimePerception.vue","webpack://my-vue-app/./src/components/Tests/Test3/TimePerception.vue?ae75","webpack://my-vue-app/./src/components/Tests/Test4/ColorTest.vue","webpack://my-vue-app/./src/components/Tests/Test4/ColorTest.vue?f6e5","webpack://my-vue-app/./src/components/Tests/Test4/PuzzleGame.vue","webpack://my-vue-app/./src/components/Tests/Test4/PuzzleGame.vue?f50a","webpack://my-vue-app/./src/components/Tests/App1.vue?c58b","webpack://my-vue-app/./src/components/TestsList.vue","webpack://my-vue-app/./src/components/TestsList.vue?f968","webpack://my-vue-app/./src/router/index.js","webpack://my-vue-app/./src/main.js","webpack://my-vue-app/webpack/bootstrap","webpack://my-vue-app/webpack/runtime/chunk loaded","webpack://my-vue-app/webpack/runtime/compat get default export","webpack://my-vue-app/webpack/runtime/define property getters","webpack://my-vue-app/webpack/runtime/global","webpack://my-vue-app/webpack/runtime/hasOwnProperty shorthand","webpack://my-vue-app/webpack/runtime/make namespace object","webpack://my-vue-app/webpack/runtime/jsonp chunk loading","webpack://my-vue-app/webpack/startup"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- Мобильная навигация (гамбургер меню) -->\r\n    <nav v-if=\"$route.path !== '/login' && $route.path !== '/register'\" class=\"main-navigation\">\r\n      <div class=\"nav-container\">\r\n        <div class=\"logo\">\r\n          <h1>Когнитивные тесты</h1>\r\n        </div>\r\n        \r\n        <!-- Кнопка бургер-меню для мобильных устройств -->\r\n        <button class=\"menu-toggle\" @click=\"mobileMenuOpen = !mobileMenuOpen\">\r\n          <span class=\"menu-icon\"></span>\r\n        </button>\r\n        \r\n        <!-- Навигационные ссылки - скрываются на мобильных, выводятся с помощью меню -->\r\n        <div class=\"nav-links\" :class=\"{ 'show-mobile-menu': mobileMenuOpen }\">\r\n          <router-link to=\"/\" exact @click=\"mobileMenuOpen = false\">Главная</router-link>\r\n          <router-link to=\"/tests\" @click=\"mobileMenuOpen = false\">Мои тесты</router-link>\r\n          <router-link to=\"/results\" @click=\"mobileMenuOpen = false\">Результаты</router-link>\r\n          <button @click=\"logout\" v-if=\"isAuthenticated\" class=\"logout-btn\">Выйти</button>\r\n        </div>\r\n        \r\n        <div class=\"auth-links\" v-if=\"!isAuthenticated\">\r\n          <router-link to=\"/login\" class=\"auth-btn\">Войти</router-link>\r\n          <router-link to=\"/register\" class=\"auth-btn register\">Зарегистрироваться</router-link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    <main :class=\"{ 'test-active': isTestActive }\">\r\n      <router-view />\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      mobileMenuOpen: false\r\n    };\r\n  },\r\n  computed: {\r\n    isAuthenticated() {\r\n      return this.$store.state.token !== null;\r\n    },\r\n    isTestActive() {\r\n      // Проверяем, находимся ли мы на странице с активным тестом\r\n      return this.$route.path === '/tests' && \r\n             this.$route.query.active === 'true';\r\n    }\r\n  },\r\n  methods: {\r\n    logout() {\r\n      this.$store.commit('logout');\r\n      this.mobileMenuOpen = false;\r\n      this.$router.push('/login');\r\n    },\r\n  },\r\n  watch: {\r\n    // Закрываем мобильное меню при изменении маршрута\r\n    '$route'() {\r\n      this.mobileMenuOpen = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n:root {\r\n  --primary-color: #3b4ce2;\r\n  --primary-hover: #2538df;\r\n  --secondary-color: #42b983;\r\n  --text-color: #2c3e50;\r\n  --background-color: #f8f9fa;\r\n  --card-background: #ffffff;\r\n  --border-color: #e0e0e0;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: 'Roboto', 'Avenir', Helvetica, Arial, sans-serif;\r\n  background-color: var(--background-color);\r\n  color: var(--text-color);\r\n  line-height: 1.6;\r\n}\r\n\r\n#app {\r\n  text-align: center;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\nmain {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  padding-top: 4.5rem; /* Добавляем отступ для фиксированного меню */\r\n}\r\n\r\n/* Когда тест активен, делаем главное меню меньше */\r\nmain.test-active {\r\n  padding-top: 0;\r\n}\r\n\r\n.main-navigation {\r\n  background-color: white;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n  padding: 0.75rem 0;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 100;\r\n}\r\n\r\n.nav-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 1rem;\r\n}\r\n\r\n.logo h1 {\r\n  font-size: 1.25rem;\r\n  color: var(--primary-color);\r\n  margin: 0;\r\n  font-weight: 600;\r\n  letter-spacing: -0.01em;\r\n  white-space: nowrap;\r\n}\r\n\r\n.nav-links {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.nav-links a {\r\n  text-decoration: none;\r\n  color: var(--text-color);\r\n  font-weight: 500;\r\n  padding: 0.625rem 0.875rem;\r\n  border-radius: 6px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.nav-links a:hover {\r\n  color: var(--primary-color);\r\n  background-color: rgba(59, 76, 226, 0.08);\r\n}\r\n\r\n.nav-links a.router-link-exact-active,\r\n.nav-links a.router-link-active {\r\n  color: var(--primary-color);\r\n  font-weight: 600;\r\n  background-color: rgba(59, 76, 226, 0.08);\r\n  border-bottom: none;\r\n}\r\n\r\n.auth-links {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.auth-btn {\r\n  text-decoration: none;\r\n  padding: 0.625rem 1.125rem;\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.auth-btn:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.auth-btn.register {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.auth-btn.register:hover {\r\n  background-color: var(--primary-hover);\r\n}\r\n\r\n.logout-btn {\r\n  background: none;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 6px;\r\n  padding: 0.625rem 1.125rem;\r\n  color: var(--text-color);\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.logout-btn:hover {\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  border-color: #ccc;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* Кнопка для мобильного меню */\r\n.menu-toggle {\r\n  display: none;\r\n  background: transparent;\r\n  border: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  z-index: 101;\r\n}\r\n\r\n.menu-icon,\r\n.menu-icon:before,\r\n.menu-icon:after {\r\n  content: '';\r\n  display: block;\r\n  width: 100%;\r\n  height: 3px;\r\n  background-color: var(--primary-color);\r\n  position: absolute;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.menu-icon {\r\n  top: 14px;\r\n}\r\n\r\n.menu-icon:before {\r\n  top: -8px;\r\n}\r\n\r\n.menu-icon:after {\r\n  top: 8px;\r\n}\r\n\r\n/* Общие стили для всех компонентов */\r\nh1, h2, h3, h4, h5, h6 {\r\n  margin-bottom: 1rem;\r\n  color: var(--text-color);\r\n  word-wrap: break-word;\r\n  overflow-wrap: break-word;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n}\r\n\r\n/* Общие стили для предотвращения выхода текста за границы */\r\n.card-title, .test-title, .test-category, .result-title, .category-name {\r\n  white-space: normal;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  word-wrap: break-word;\r\n  overflow-wrap: break-word;\r\n  max-width: 100%;\r\n}\r\n\r\n/* Адаптивность */\r\n@media (max-width: 768px) {\r\n  .nav-container {\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .menu-toggle {\r\n    display: block;\r\n  }\r\n  \r\n  .nav-links {\r\n    position: fixed;\r\n    top: 0;\r\n    right: -100%;\r\n    width: 70%;\r\n    height: 100vh;\r\n    background-color: white;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    padding: 4rem 1.5rem 2rem;\r\n    z-index: 100;\r\n    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);\r\n    transition: right 0.3s ease;\r\n  }\r\n  \r\n  .nav-links.show-mobile-menu {\r\n    right: 0;\r\n  }\r\n  \r\n  .nav-links a {\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border-radius: 0;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .nav-links .logout-btn {\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n  }\r\n  \r\n  .auth-links {\r\n    display: none;\r\n  }\r\n  \r\n  main {\r\n    padding: 1rem;\r\n    padding-top: 4rem;\r\n  }\r\n  \r\n  .logo h1 {\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  /* Дополнительные стили для мобильной версии */\r\n  .card-title, .test-title, .test-category, .result-title, .category-name {\r\n    font-size: 1.1rem;\r\n    line-height: 1.3;\r\n  }\r\n  \r\n  /* Стиль для активного мобильного меню - анимация бургера в крестик */\r\n  .show-mobile-menu + .menu-toggle .menu-icon {\r\n    background-color: transparent;\r\n  }\r\n  \r\n  .show-mobile-menu + .menu-toggle .menu-icon:before {\r\n    transform: rotate(45deg);\r\n    top: 0;\r\n  }\r\n  \r\n  .show-mobile-menu + .menu-toggle .menu-icon:after {\r\n    transform: rotate(-45deg);\r\n    top: 0;\r\n  }\r\n}\r\n</style>","import { render } from \"./App.vue?vue&type=template&id=1705128b\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=1705128b&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    token: localStorage.getItem('token') || null,\r\n    testResults: JSON.parse(localStorage.getItem('testResults')) || [],\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token;\r\n      localStorage.setItem('token', token);\r\n    },\r\n    logout(state) {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.testResults = [];\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('testResults');\r\n      axios.defaults.headers.common['Authorization'] = '';\r\n    },\r\n    async addTestResult(state, result) {\r\n      // Проверяем, есть ли уже результат для этого теста\r\n      const existingIndex = state.testResults.findIndex(\r\n        r => r.test.test_name === result.test.test_name && r.try_number === result.try_number\r\n      );\r\n      \r\n      if (existingIndex >= 0) {\r\n        // Обновляем существующий результат\r\n        state.testResults[existingIndex] = result;\r\n      } else {\r\n        // Добавляем метку времени, если её нет\r\n        if (!result.complete_time) {\r\n          result.complete_time = new Date().toISOString();\r\n        }\r\n        // Добавляем новый результат\r\n        state.testResults.push(result);\r\n      }\r\n      \r\n      // Сохраняем в localStorage\r\n      localStorage.setItem('testResults', JSON.stringify(state.testResults));\r\n    if (!state.token) return;\r\n\r\n      try {\r\n        const response = await axios.post('https://georgiy.pythonanywhere.com/api/add-result/', result, {\r\n          headers: {\r\n            Authorization: `Token ${state.token}`,\r\n          },\r\n        });\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Failed to add result:', error);\r\n        throw error;\r\n      }\r\n      },\r\n  },\r\n  actions: {\r\n    async register({ commit }, userData) {\r\n      try {\r\n        console.log('Отправляемые данные:', userData);\r\n        \r\n        const response = await axios.post('https://georgiy.pythonanywhere.com/api/register/', userData);\r\n        console.log('Ответ сервера:', response.data);\r\n        \r\n        if (response.data.token) {\r\n          commit('setToken', response.data.token);\r\n        }\r\n        \r\n        if (response.data.user) {\r\n          commit('setUser', response.data.user);\r\n        }\r\n        \r\n        return response;\r\n      } catch (error) {\r\n        console.error('Детали ошибки:', error.response ? error.response.data : error);\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    async login({ commit }, credentials) {\r\n      try {\r\n        console.log('Данные для входа:', credentials);\r\n        \r\n        const response = await axios.post('https://georgiy.pythonanywhere.com/api/login/', {\r\n          username: credentials.username,\r\n          password: credentials.password\r\n        });\r\n        \r\n        console.log('Ответ сервера при входе:', response.data);\r\n        \r\n        const token = response.data.token || response.data.access || response.data.key;\r\n        \r\n        if (token) {\r\n          commit('setToken', token);\r\n          axios.defaults.headers.common['Authorization'] = `Token ${token}`;\r\n          await this.dispatch('fetchUser');\r\n        } else {\r\n          console.error('Токен не получен в ответе:', response.data);\r\n          throw new Error('Не удалось получить токен авторизации');\r\n        }\r\n        \r\n        return response;\r\n      } catch (error) {\r\n        console.error('Ошибка входа:', error);\r\n        \r\n        // Вывод деталей ошибки для отладки\r\n        if (error.response && error.response.data) {\r\n          console.error('Детали ошибки:', error.response.data);\r\n        }\r\n        \r\n        throw error;\r\n      }\r\n    },\r\n\r\n    async fetchUser({ commit, state }) {\r\n      console.log(state);\r\n      if (!state.token) return;\r\n\r\n      try {\r\n        const response = await axios.get('https://georgiy.pythonanywhere.com/api/user/', {\r\n          headers: {\r\n            Authorization: `Token ${state.token}`,\r\n          },\r\n        });\r\n        console.log(response);\r\n        commit('setUser', response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch user data:', error);\r\n      }\r\n    },\r\n  },\r\n});","<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"login-card\">\r\n      <h1>Вход в систему</h1>\r\n      <form @submit.prevent=\"login\" class=\"login-form\">\r\n        <div class=\"nice-form-group\">\r\n          <label for=\"username\">Имя пользователя</label>\r\n          <input \r\n            id=\"username\"\r\n            v-model=\"username\" \r\n            type=\"text\" \r\n            placeholder=\"Введите имя пользователя\" \r\n            required\r\n            autocomplete=\"username\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"nice-form-group\">\r\n          <label for=\"password\">Пароль</label>\r\n          <div class=\"password-field\">\r\n            <input \r\n              id=\"password\"\r\n              v-model=\"password\" \r\n              :type=\"showPassword ? 'text' : 'password'\" \r\n              placeholder=\"Введите ваш пароль\" \r\n              required\r\n              autocomplete=\"current-password\"\r\n            >\r\n            <button \r\n              type=\"button\" \r\n              class=\"toggle-password\" \r\n              @click=\"showPassword = !showPassword\"\r\n            >\r\n              {{ showPassword ? 'Скрыть' : 'Показать' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"remember-forgot\">\r\n          <label class=\"remember-me\">\r\n            <input type=\"checkbox\" v-model=\"rememberMe\">\r\n            <span>Запомнить меня</span>\r\n          </label>\r\n          <a href=\"#\" class=\"forgot-password\">Забыли пароль?</a>\r\n        </div>\r\n        \r\n        <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n        \r\n        <button type=\"submit\" class=\"login-btn\" :disabled=\"isLoggingIn\">\r\n          <span v-if=\"isLoggingIn\">Вход...</span>\r\n          <span v-else>Войти</span>\r\n        </button>\r\n      </form>\r\n      \r\n      <div class=\"login-footer\">\r\n        <p>Нет аккаунта? <router-link to=\"/register\">Зарегистрируйтесь</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginPage',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      rememberMe: false,\r\n      showPassword: false,\r\n      isLoggingIn: false,\r\n      error: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    // Проверяем, есть ли сохраненное имя пользователя\r\n    const rememberedUsername = localStorage.getItem('rememberedUsername');\r\n    if (rememberedUsername) {\r\n      this.username = rememberedUsername;\r\n      this.rememberMe = true;\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      if (!this.username || !this.password) {\r\n        this.error = 'Введите имя пользователя и пароль';\r\n        return;\r\n      }\r\n      \r\n      this.isLoggingIn = true;\r\n      this.error = '';\r\n      \r\n      try {\r\n        // Отправляем данные для входа в формате, ожидаемом бэкендом\r\n        const loginData = {\r\n          username: this.username,\r\n          password: this.password,\r\n        };\r\n\r\n        console.log('Отправляем для входа:', loginData);\r\n        \r\n        // Вызываем действие входа из хранилища Vuex\r\n        await this.$store.dispatch('login', loginData);\r\n        \r\n        // Сохраняем имя пользователя, если выбрана опция \"Запомнить меня\"\r\n        if (this.rememberMe) {\r\n          localStorage.setItem('rememberedUsername', this.username);\r\n        } else {\r\n          localStorage.removeItem('rememberedUsername');\r\n        }\r\n        \r\n        // Перенаправляем на главную страницу\r\n        this.$router.push('/');\r\n      } catch (error) {\r\n        console.error('Ошибка входа:', error);\r\n        \r\n        // Более детальное отображение ошибки\r\n        if (error.response) {\r\n          // Если есть ответ от сервера\r\n          if (error.response.data && error.response.data.detail) {\r\n            this.error = error.response.data.detail;\r\n          } else if (error.response.data && typeof error.response.data === 'object') {\r\n            // Если ответ содержит объект с ошибками\r\n            const errorMessages = Object.entries(error.response.data)\r\n              .map(([key, value]) => `${key}: ${value}`)\r\n              .join(', ');\r\n            this.error = errorMessages;\r\n          } else {\r\n            this.error = `Ошибка: ${error.response.status}`;\r\n          }\r\n        } else if (error.request) {\r\n          // Если запрос был отправлен, но не получен ответ\r\n          this.error = 'Сервер не отвечает. Проверьте соединение.';\r\n        } else {\r\n          // Если возникла ошибка при настройке запроса\r\n          this.error = 'Ошибка при отправке запроса.';\r\n        }\r\n      } finally {\r\n        this.isLoggingIn = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\");\r\n\r\n.auth-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: calc(100vh - 10rem);\r\n  padding: 2rem;\r\n}\r\n\r\n.login-card {\r\n  background-color: #fff;\r\n  border-radius: 0.625rem;\r\n  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.1);\r\n  padding: 2.5rem;\r\n  width: 100%;\r\n  max-width: 28rem;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.login-card:hover {\r\n  transform: translateY(-0.25rem);\r\n  box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15);\r\n}\r\n\r\nh1 {\r\n  color: #3b4ce2;\r\n  text-align: center;\r\n  font-size: 1.75rem;\r\n  margin-bottom: 1.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.login-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.25rem;\r\n}\r\n\r\n.nice-form-group {\r\n  position: relative;\r\n}\r\n\r\n.nice-form-group label {\r\n  display: block;\r\n  margin-bottom: 0.375rem;\r\n  font-size: 0.875rem;\r\n  color: #4b5563;\r\n  font-weight: 500;\r\n}\r\n\r\n.nice-form-group input {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.375rem;\r\n  font-size: 0.875rem;\r\n  transition: border-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.nice-form-group input:focus {\r\n  outline: none;\r\n  border-color: #3b4ce2;\r\n  box-shadow: 0 0 0 2px rgba(59, 76, 226, 0.1);\r\n}\r\n\r\n.password-field {\r\n  position: relative;\r\n}\r\n\r\n.toggle-password {\r\n  position: absolute;\r\n  right: 0.75rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  color: #6b7280;\r\n  font-size: 0.75rem;\r\n  cursor: pointer;\r\n  padding: 0.25rem 0.5rem;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.toggle-password:hover {\r\n  color: #3b4ce2;\r\n}\r\n\r\n.remember-forgot {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.remember-me {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.remember-me input {\r\n  width: 1rem;\r\n  height: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.forgot-password {\r\n  color: #3b4ce2;\r\n  text-decoration: none;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.forgot-password:hover {\r\n  color: #2538df;\r\n  text-decoration: underline;\r\n}\r\n\r\n.login-btn {\r\n  background: #3b4ce2;\r\n  color: white;\r\n  padding: 0.875rem;\r\n  border: none;\r\n  border-radius: 0.375rem;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.login-btn:hover {\r\n  background: #2538df;\r\n}\r\n\r\n.login-btn:disabled {\r\n  background: #a0a0a0;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.login-footer {\r\n  text-align: center;\r\n  margin-top: 1.5rem;\r\n  font-size: 0.875rem;\r\n  color: #6b7280;\r\n}\r\n\r\n.login-footer a {\r\n  color: #3b4ce2;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.login-footer a:hover {\r\n  color: #2538df;\r\n  text-decoration: underline;\r\n}\r\n\r\n.error-message {\r\n  background-color: #fee2e2;\r\n  color: #dc2626;\r\n  padding: 0.75rem;\r\n  border-radius: 0.375rem;\r\n  font-size: 0.875rem;\r\n  text-align: center;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .auth-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .login-card {\r\n    padding: 1.5rem;\r\n  }\r\n  \r\n  .remember-forgot {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 0.75rem;\r\n  }\r\n}\r\n</style>","import { render } from \"./Login.vue?vue&type=template&id=636d5b14&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=636d5b14&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-636d5b14\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"auth-container\">\r\n    <h1>Регистрация</h1>\r\n    <form @submit.prevent=\"handleSubmit\" class=\"registration-form\">\r\n      <!-- Основная информация -->\r\n      <div class=\"form-section\">\r\n        <h3>Учетные данные</h3>\r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"username\">Имя пользователя</label>\r\n            <input id=\"username\" v-model=\"user.username\" placeholder=\"Имя пользователя\" required>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n      <!-- Личная информация -->\r\n      <div class=\"form-section\">\r\n        <h3>Личная информация</h3>\r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"age\">Возраст</label>\r\n            <input id=\"age\" v-model=\"user.age\" type=\"number\" min=\"1\" max=\"120\" placeholder=\"Возраст\">\r\n          </div>\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"residence\">Место проживания</label>\r\n            <input id=\"residence\" v-model=\"user.residence\" placeholder=\"Город, страна\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Образование -->\r\n      <div class=\"form-section\">\r\n        <h3>Образование и специальность</h3>\r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"education\">Образование</label>\r\n            <select id=\"education\" v-model=\"user.education\">\r\n              <option value=\"\">Выберите уровень образования</option>\r\n              <option value=\"secondary\">Среднее</option>\r\n              <option value=\"higher\">Высшее</option>\r\n              <option value=\"postgraduate\">Послевузовское</option>\r\n              <option value=\"other\">Другое</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"specialty\">Специальность</label>\r\n            <input id=\"specialty\" v-model=\"user.specialty\" placeholder=\"Специальность\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Физические параметры -->\r\n      <div class=\"form-section\">\r\n        <h3>Физические параметры</h3>\r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"height\">Рост (см)</label>\r\n            <input id=\"height\" v-model=\"user.height\" type=\"number\" min=\"50\" max=\"250\" placeholder=\"Рост\">\r\n          </div>\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"weight\">Вес (кг)</label>\r\n            <input id=\"weight\" v-model=\"user.weight\" type=\"number\" min=\"20\" max=\"300\" placeholder=\"Вес\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"dominant_hand\">Доминирующая рука</label>\r\n            <select id=\"dominant_hand\" v-model=\"user.dominant_hand\">\r\n              <option value=\"\">Выберите руку</option>\r\n              <option value=\"right\">Правая</option>\r\n              <option value=\"left\">Левая</option>\r\n              <option value=\"both\">Обе</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Здоровье и привычки -->\r\n      <div class=\"form-section\">\r\n        <h3>Здоровье и привычки</h3>\r\n        <div class=\"checkbox-grid\">\r\n          <div class=\"nice-form-group checkbox-group\">\r\n            <label>\r\n              <input v-model=\"user.smoking\" type=\"checkbox\">\r\n              <span>Курение</span>\r\n            </label>\r\n          </div>\r\n          <div class=\"nice-form-group checkbox-group\">\r\n            <label>\r\n              <input v-model=\"user.alcohol\" type=\"checkbox\">\r\n              <span>Употребление алкоголя</span>\r\n            </label>\r\n          </div>\r\n          <div class=\"nice-form-group checkbox-group\">\r\n            <label>\r\n              <input v-model=\"user.sport\" type=\"checkbox\">\r\n              <span>Занимаюсь спортом</span>\r\n            </label>\r\n          </div>\r\n          <div class=\"nice-form-group checkbox-group\">\r\n            <label>\r\n              <input v-model=\"user.insomnia\" type=\"checkbox\">\r\n              <span>Страдаю бессонницей</span>\r\n            </label>\r\n          </div>\r\n          <div class=\"nice-form-group checkbox-group\">\r\n            <label>\r\n              <input v-model=\"user.gamer\" type=\"checkbox\">\r\n              <span>Играю в компьютерные игры</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"diseases\">Заболевания</label>\r\n            <textarea id=\"diseases\" v-model=\"user.diseases\" placeholder=\"Укажите ваши заболевания (если есть)\" rows=\"2\"></textarea>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"current_mood\">Текущее настроение</label>\r\n            <select id=\"current_mood\" v-model=\"user.current_mood\">\r\n              <option value=\"\">Выберите настроение</option>\r\n              <option value=\"excellent\">Отличное</option>\r\n              <option value=\"good\">Хорошее</option>\r\n              <option value=\"normal\">Нормальное</option>\r\n              <option value=\"bad\">Плохое</option>\r\n              <option value=\"terrible\">Ужасное</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Пароль и подтверждение -->\r\n      <div class=\"form-section\">\r\n        <h3>Безопасность</h3>\r\n        <div class=\"form-row\">\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"password\">Пароль</label>\r\n            <input id=\"password\" v-model=\"user.password\" type=\"password\" placeholder=\"Пароль\" required>\r\n          </div>\r\n          <div class=\"nice-form-group\">\r\n            <label for=\"password_confirm\">Подтверждение пароля</label>\r\n            <input id=\"password_confirm\" v-model=\"passwordConfirm\" type=\"password\" placeholder=\"Подтвердите пароль\" required>\r\n            <span class=\"error-message\" v-if=\"passwordError\">{{ passwordError }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <button type=\"submit\" class=\"submit-btn\" :disabled=\"!isFormValid\">Зарегистрироваться</button>\r\n    </form>\r\n    <p class=\"login-link\">Уже есть аккаунт? <router-link to=\"/login\">Войдите</router-link></p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        age: null,\r\n        education: '',\r\n        specialty: '',\r\n        residence: '',\r\n        height: null,\r\n        weight: null,\r\n        dominant_hand: '',\r\n        diseases: '',\r\n        smoking: false,\r\n        alcohol: false,\r\n        sport: false,\r\n        insomnia: false,\r\n        current_mood: '',\r\n        gamer: false,\r\n        password: '',\r\n      },\r\n      passwordConfirm: '',\r\n    };\r\n  },\r\n  computed: {\r\n    passwordError() {\r\n      if (this.passwordConfirm && this.user.password !== this.passwordConfirm) {\r\n        return 'Пароли не совпадают';\r\n      }\r\n      return '';\r\n    },\r\n    isFormValid() {\r\n      return !this.passwordError && this.user.username && this.user.password;\r\n    }\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      if (!this.isFormValid) return;\r\n      \r\n      try {\r\n        // Для отладки: добавьте email, даже если его нет в форме\r\n        const userData = {\r\n          ...this.user,\r\n          email: `${this.user.username}@example.com`, // Временно добавляем email для отладки\r\n          // Преобразуем числовые поля в числа\r\n          age: this.user.age ? parseInt(this.user.age) : null,\r\n          height: this.user.height ? parseInt(this.user.height) : null,\r\n          weight: this.user.weight ? parseInt(this.user.weight) : null,\r\n          password2: this.passwordConfirm\r\n        };\r\n\r\n        // Отправляем данные на сервер\r\n        await this.$store.dispatch('register', userData);\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error('Ошибка регистрации:', error);\r\n        // Выводим более подробную информацию об ошибке, если она есть\r\n        if (error.response && error.response.data) {\r\n          console.error('Детали ошибки:', error.response.data);\r\n          alert('Ошибка регистрации: ' + JSON.stringify(error.response.data));\r\n        } else {\r\n          alert('Ошибка регистрации. Проверьте данные и повторите попытку.');\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\");\r\n\r\n.auth-container {\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  background: #fff;\r\n  border-radius: 0.625rem;\r\n  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #3b4ce2;\r\n  margin-bottom: 1.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\nh3 {\r\n  color: #2c3e50;\r\n  margin-bottom: 1rem;\r\n  font-weight: 500;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 0.5rem;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 1.5rem;\r\n  padding: 1.25rem;\r\n  background-color: #f9f9fa;\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.nice-form-group {\r\n  flex: 1;\r\n  min-width: 250px;\r\n}\r\n\r\n.nice-form-group label {\r\n  display: block;\r\n  margin-bottom: 0.375rem;\r\n  font-size: 0.875rem;\r\n  color: #4b5563;\r\n  font-weight: 500;\r\n}\r\n\r\n.nice-form-group input,\r\n.nice-form-group select,\r\n.nice-form-group textarea {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.375rem;\r\n  font-size: 0.875rem;\r\n  transition: border-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.nice-form-group input:focus,\r\n.nice-form-group select:focus,\r\n.nice-form-group textarea:focus {\r\n  outline: none;\r\n  border-color: #3b4ce2;\r\n  box-shadow: 0 0 0 2px rgba(59, 76, 226, 0.1);\r\n}\r\n\r\n.nice-form-group textarea {\r\n  min-height: 5rem;\r\n  resize: vertical;\r\n}\r\n\r\n.checkbox-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.checkbox-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.checkbox-group label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.625rem;\r\n  cursor: pointer;\r\n  width: auto;\r\n}\r\n\r\n.checkbox-group input {\r\n  width: 1.125rem;\r\n  height: 1.125rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.submit-btn {\r\n  background: #3b4ce2;\r\n  color: white;\r\n  padding: 0.875rem;\r\n  border: none;\r\n  border-radius: 0.375rem;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background: #2538df;\r\n}\r\n\r\n.submit-btn:disabled {\r\n  background: #a0a0a0;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.login-link {\r\n  text-align: center;\r\n  margin-top: 1.25rem;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.login-link a {\r\n  color: #3b4ce2;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n}\r\n\r\n.login-link a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.error-message {\r\n  color: #dc2626;\r\n  font-size: 0.75rem;\r\n  margin-top: 0.25rem;\r\n  display: block;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .auth-container {\r\n    margin: 1rem;\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .form-row {\r\n    flex-direction: column;\r\n    gap: 0.625rem;\r\n  }\r\n  \r\n  .nice-form-group {\r\n    min-width: 100%;\r\n  }\r\n  \r\n  .form-section {\r\n    padding: 0.875rem;\r\n  }\r\n  \r\n  .checkbox-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>","import { render } from \"./Register.vue?vue&type=template&id=8ac99b06&scoped=true\"\nimport script from \"./Register.vue?vue&type=script&lang=js\"\nexport * from \"./Register.vue?vue&type=script&lang=js\"\n\nimport \"./Register.vue?vue&type=style&index=0&id=8ac99b06&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8ac99b06\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"results-container\">\r\n    <h1 class=\"results-title\">Ваши результаты тестирования</h1>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Загрузка результатов...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error-container\">\r\n      <div class=\"error-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n          <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line>\r\n        </svg>\r\n      </div>\r\n      <h2>Не удалось загрузить результаты</h2>\r\n      <p>{{ error }}</p>\r\n      <button @click=\"fetchResults\" class=\"retry-btn\">Повторить попытку</button>\r\n    </div>\r\n    \r\n    <div v-else-if=\"results.length === 0\" class=\"empty-container\">\r\n      <div class=\"empty-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\r\n        </svg>\r\n      </div>\r\n      <h2>У вас пока нет результатов</h2>\r\n      <p>Пройдите когнитивные тесты, чтобы увидеть ваши результаты здесь</p>\r\n      <router-link to=\"/tests\" class=\"start-tests-btn\">Начать тестирование</router-link>\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <div class=\"filter-section\">\r\n        <div class=\"search-box\">\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"searchQuery\" \r\n            placeholder=\"Поиск по названию теста\"\r\n            class=\"search-input\"\r\n          >\r\n        </div>\r\n        <div class=\"filter-buttons\">\r\n          <button \r\n            v-for=\"period in filterPeriods\" \r\n            :key=\"period.value\"\r\n            :class=\"['filter-btn', { active: currentPeriod === period.value }]\"\r\n            @click=\"setFilterPeriod(period.value)\"\r\n          >\r\n            {{ period.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"stats-cards\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-card-icon tests-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <polyline points=\"9 11 12 14 22 4\"></polyline>\r\n              <path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>\r\n            </svg>\r\n          </div>\r\n          <div class=\"stat-card-content\">\r\n            <h3>Всего тестов</h3>\r\n            <p>{{ uniqueTestsCount }}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-card-icon accuracy-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"></path>\r\n            </svg>\r\n          </div>\r\n          <div class=\"stat-card-content\">\r\n            <h3>Средняя точность</h3>\r\n            <p>{{ averageAccuracy }}%</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-card-icon date-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n              <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\r\n              <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\r\n              <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\r\n            </svg>\r\n          </div>\r\n          <div class=\"stat-card-content\">\r\n            <h3>Последний тест</h3>\r\n            <p>{{ lastTestDate }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"results-list\">\r\n        <div v-for=\"(result, index) in paginatedResults\" :key=\"index\" class=\"result-card\">\r\n          <div class=\"result-header\">\r\n            <h3>{{ result.test.test_name }}</h3>\r\n            <span class=\"result-date\">{{ formatDate(result.complete_time) }}</span>\r\n          </div>\r\n          \r\n          <div class=\"result-details\">\r\n            <div class=\"progress-container\">\r\n              <div class=\"progress-bar\">\r\n                <div \r\n                  class=\"progress-fill\" \r\n                  :style=\"{ width: `${result.accuracy}%` }\"\r\n                  :class=\"getAccuracyClass(result.accuracy)\"\r\n                ></div>\r\n              </div>\r\n              <div class=\"progress-labels\">\r\n                <span>Точность</span>\r\n                <span>{{ result.accuracy }}%</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"result-stats\">\r\n              <div class=\"stat\">\r\n                <span class=\"stat-label\">Правильных ответов</span>\r\n                <span class=\"stat-value\">{{ result.number_correct_answers }} из {{ result.number_all_answers }}</span>\r\n              </div>\r\n              <div class=\"stat\">\r\n                <span class=\"stat-label\">Попытка</span>\r\n                <span class=\"stat-value\">#{{ result.try_number || 1 }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-if=\"totalPages > 1\" class=\"pagination\">\r\n        <button \r\n          class=\"pagination-btn\" \r\n          :disabled=\"currentPage === 1\"\r\n          @click=\"currentPage--\"\r\n        >\r\n          &laquo;\r\n        </button>\r\n        \r\n        <button \r\n          v-for=\"page in displayedPages\" \r\n          :key=\"page\"\r\n          :class=\"['pagination-btn', { active: currentPage === page }]\"\r\n          @click=\"currentPage = page\"\r\n        >\r\n          {{ page }}\r\n        </button>\r\n        \r\n        <button \r\n          class=\"pagination-btn\" \r\n          :disabled=\"currentPage === totalPages\"\r\n          @click=\"currentPage++\"\r\n        >\r\n          &raquo;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ResultsPage',\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      error: null,\r\n      searchQuery: '',\r\n      currentPeriod: 'all',\r\n      currentPage: 1,\r\n      itemsPerPage: 5,\r\n      filterPeriods: [\r\n        { label: 'Все', value: 'all' },\r\n        { label: 'За неделю', value: 'week' },\r\n        { label: 'За месяц', value: 'month' },\r\n        { label: 'За год', value: 'year' },\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    // Получаем результаты тестов из хранилища Vuex\r\n    results() {\r\n      // Возвращаем результаты из хранилища\r\n      return this.$store.state.testResults || [];\r\n    },\r\n    \r\n    filteredResults() {\r\n      let filtered = [...this.results];\r\n      \r\n      // Фильтрация по поисковому запросу\r\n      if (this.searchQuery) {\r\n        const query = this.searchQuery.toLowerCase();\r\n        filtered = filtered.filter(result => \r\n          result.test.test_name.toLowerCase().includes(query)\r\n        );\r\n      }\r\n      \r\n      // Фильтрация по периоду\r\n      if (this.currentPeriod !== 'all') {\r\n        const now = new Date();\r\n        let startDate = new Date();\r\n        \r\n        switch (this.currentPeriod) {\r\n          case 'week':\r\n            startDate.setDate(now.getDate() - 7);\r\n            break;\r\n          case 'month':\r\n            startDate.setMonth(now.getMonth() - 1);\r\n            break;\r\n          case 'year':\r\n            startDate.setFullYear(now.getFullYear() - 1);\r\n            break;\r\n        }\r\n        \r\n        filtered = filtered.filter(result => \r\n          new Date(result.complete_time) >= startDate\r\n        );\r\n      }\r\n      \r\n      // Сортировка по дате (от новых к старым)\r\n      return filtered.sort((a, b) => \r\n        new Date(b.complete_time) - new Date(a.complete_time)\r\n      );\r\n    },\r\n    paginatedResults() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredResults.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredResults.length / this.itemsPerPage);\r\n    },\r\n    displayedPages() {\r\n      const pages = [];\r\n      const maxVisiblePages = 5;\r\n      \r\n      if (this.totalPages <= maxVisiblePages) {\r\n        // Если всего страниц меньше или равно максимально видимым\r\n        for (let i = 1; i <= this.totalPages; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else {\r\n        // Если страниц больше максимально видимых\r\n        let startPage = Math.max(1, this.currentPage - Math.floor(maxVisiblePages / 2));\r\n        let endPage = startPage + maxVisiblePages - 1;\r\n        \r\n        if (endPage > this.totalPages) {\r\n          endPage = this.totalPages;\r\n          startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n        }\r\n        \r\n        for (let i = startPage; i <= endPage; i++) {\r\n          pages.push(i);\r\n        }\r\n      }\r\n      \r\n      return pages;\r\n    },\r\n    averageAccuracy() {\r\n      if (this.filteredResults.length === 0) return 0;\r\n      \r\n      const sum = this.filteredResults.reduce((total, result) => total + result.accuracy, 0);\r\n      return (sum / this.filteredResults.length).toFixed(1);\r\n    },\r\n    lastTestDate() {\r\n      if (this.filteredResults.length === 0) return 'Нет данных';\r\n      \r\n      return this.formatDate(this.filteredResults[0].complete_time);\r\n    },\r\n    // Добавляем вычисляемое свойство для подсчета уникальных тестов\r\n    uniqueTestsCount() {\r\n      // Получаем все уникальные названия тестов\r\n      const uniqueTestNames = new Set(this.filteredResults.map(result => result.test.test_name));\r\n      // Возвращаем количество уникальных тестов\r\n      return uniqueTestNames.size;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchResults() {\r\n      this.loading = true;\r\n      this.error = null;\r\n      \r\n      try {\r\n        // Имитируем запрос к API\r\n        setTimeout(() => {\r\n          // Проверяем, есть ли данные в хранилище\r\n          if (this.$store.state.testResults.length === 0) {\r\n            this.error = 'Нет доступных результатов. Пройдите несколько тестов, чтобы увидеть статистику.';\r\n          }\r\n          this.loading = false;\r\n        }, 500);\r\n      } catch (error) {\r\n        console.error('Ошибка при получении результатов:', error);\r\n        this.error = 'Не удалось загрузить результаты. Пожалуйста, попробуйте позже.';\r\n        this.loading = false;\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      try {\r\n        const date = new Date(dateString);\r\n        return new Intl.DateTimeFormat('ru-RU', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return \"Некорректная дата\";\r\n      }\r\n    },\r\n    setFilterPeriod(period) {\r\n      this.currentPeriod = period;\r\n      this.currentPage = 1; // Сбрасываем пагинацию\r\n    },\r\n    getAccuracyClass(accuracy) {\r\n      if (accuracy >= 80) return 'high';\r\n      if (accuracy >= 50) return 'medium';\r\n      return 'low';\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchResults();\r\n  },\r\n  watch: {\r\n    searchQuery() {\r\n      this.currentPage = 1; // Сбрасываем страницу при изменении поискового запроса\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');\r\n\r\n.results-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n\r\n.results-title {\r\n  font-size: 2rem;\r\n  color: #111827; /* Это черный цвет, как в App1.vue */\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n  font-weight: 600;\r\n}\r\n\r\n/* Загрузка и ошибки */\r\n.loading-container,\r\n.error-container,\r\n.empty-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 3rem;\r\n  background-color: white;\r\n  border-radius: 0.75rem;\r\n  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.1);\r\n  animation: fadeIn 0.5s ease-in-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(1rem); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.spinner {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border: 0.25rem solid #f3f3f3;\r\n  border-top: 0.25rem solid #3b4ce2;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.error-icon {\r\n  color: #ef4444;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.empty-icon {\r\n  color: #9ca3af;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.error-container h2,\r\n.empty-container h2 {\r\n  font-size: 1.5rem;\r\n  color: #1f2937;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.error-container p,\r\n.empty-container p,\r\n.loading-container p {\r\n  font-size: 1.125rem;\r\n  color: #6b7280;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.retry-btn,\r\n.start-tests-btn {\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 0.5rem;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n}\r\n\r\n.retry-btn:hover,\r\n.start-tests-btn:hover {\r\n  background-color: #2538df;\r\n}\r\n\r\n/* Фильтры и поиск */\r\n.filter-section {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 0.75rem;\r\n  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  min-width: 15rem;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 0.75rem 1rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.5rem;\r\n  font-size: 0.9375rem;\r\n  transition: border-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  border-color: #3b4ce2;\r\n  box-shadow: 0 0 0 2px rgba(59, 76, 226, 0.1);\r\n}\r\n\r\n.filter-buttons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.filter-btn {\r\n  padding: 0.625rem 1rem;\r\n  background-color: #f3f4f6;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.5rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  color: #4b5563;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.filter-btn:hover {\r\n  background-color: #e5e7eb;\r\n  border-color: #9ca3af;\r\n}\r\n\r\n.filter-btn.active {\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border-color: #3b4ce2;\r\n}\r\n\r\n/* Статистические карточки */\r\n.stats-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(18rem, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.stat-card {\r\n  background-color: white;\r\n  border-radius: 0.75rem;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-0.25rem);\r\n}\r\n\r\n.stat-card-icon {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-radius: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 1rem;\r\n  color: white;\r\n}\r\n\r\n.tests-icon {\r\n  background-color: #3b82f6;\r\n}\r\n\r\n.accuracy-icon {\r\n  background-color: #10b981;\r\n}\r\n\r\n.date-icon {\r\n  background-color: #f59e0b;\r\n}\r\n\r\n.stat-card-content h3 {\r\n  font-size: 1rem;\r\n  color: #6b7280;\r\n  margin-bottom: 0.375rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.stat-card-content p {\r\n  font-size: 1.5rem;\r\n  color: #1f2937;\r\n  font-weight: 600;\r\n}\r\n\r\n/* Список результатов */\r\n.results-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.result-card {\r\n  background-color: white;\r\n  border-radius: 0.75rem;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.05);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.result-card:hover {\r\n  transform: translateY(-0.25rem);\r\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.result-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.result-header h3 {\r\n  font-size: 1.25rem;\r\n  color: #1f2937;\r\n  font-weight: 600;\r\n}\r\n\r\n.result-date {\r\n  font-size: 0.875rem;\r\n  color: #6b7280;\r\n}\r\n\r\n.result-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.progress-container {\r\n  width: 100%;\r\n}\r\n\r\n.progress-bar {\r\n  height: 0.75rem;\r\n  background-color: #e5e7eb;\r\n  border-radius: 0.375rem;\r\n  overflow: hidden;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  border-radius: 0.375rem;\r\n  transition: width 0.5s ease;\r\n}\r\n\r\n.progress-fill.high {\r\n  background-color: #10b981;\r\n}\r\n\r\n.progress-fill.medium {\r\n  background-color: #f59e0b;\r\n}\r\n\r\n.progress-fill.low {\r\n  background-color: #ef4444;\r\n}\r\n\r\n.progress-labels {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 0.875rem;\r\n  color: #6b7280;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n}\r\n\r\n.stat {\r\n  flex: 1;\r\n  min-width: 10rem;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 0.875rem;\r\n  color: #6b7280;\r\n  display: block;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.125rem;\r\n  color: #1f2937;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Пагинация */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n  margin-top: 2rem;\r\n}\r\n\r\n.pagination-btn {\r\n  padding: 0.5rem 0.75rem;\r\n  background-color: #f3f4f6;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.375rem;\r\n  font-size: 0.875rem;\r\n  color: #4b5563;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.pagination-btn:hover:not(:disabled) {\r\n  background-color: #e5e7eb;\r\n  border-color: #9ca3af;\r\n}\r\n\r\n.pagination-btn.active {\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border-color: #3b4ce2;\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Адаптивность */\r\n@media (max-width: 768px) {\r\n  .results-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .results-title {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .filter-section {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .search-box {\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .filter-buttons {\r\n    justify-content: center;\r\n  }\r\n  \r\n  .result-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .result-stats {\r\n    flex-direction: column;\r\n    gap: 0.75rem;\r\n  }\r\n  \r\n  .stat {\r\n    min-width: auto;\r\n  }\r\n}\r\n</style>","import { render } from \"./Results.vue?vue&type=template&id=a9820110&scoped=true\"\nimport script from \"./Results.vue?vue&type=script&lang=js\"\nexport * from \"./Results.vue?vue&type=script&lang=js\"\n\nimport \"./Results.vue?vue&type=style&index=0&id=a9820110&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a9820110\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"tests-container\">\r\n    <h1 class=\"tests-main-title\">Когнитивные тесты</h1>\r\n\r\n    <!-- Категории тестов (главная страница) -->\r\n    <div v-if=\"!currentCategory && !currentTest\" class=\"category-grid\">\r\n      <div\r\n        v-for=\"(category, key) in categories\"\r\n        :key=\"key\"\r\n        class=\"category-card\"\r\n        @click=\"selectCategory(key)\"\r\n      >\r\n        <div class=\"category-icon\" :class=\"`icon-${key}`\">\r\n          <i class=\"icon\" v-html=\"categoryIcons[key]\"></i>\r\n        </div>\r\n        <div class=\"category-content\">\r\n          <h3 class=\"category-title\">{{ category.title }}</h3>\r\n          <p class=\"category-description\">{{ category.description }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Список тестов в категории -->\r\n    <div v-else-if=\"currentCategory && !currentTest\" class=\"category-detail\">\r\n      <div class=\"category-header\">\r\n        <button @click=\"backToCategories\" class=\"back-button\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\r\n            <polyline points=\"12 19 5 12 12 5\"></polyline>\r\n          </svg>\r\n          Назад\r\n        </button>\r\n        <div class=\"category-title-container\">\r\n          <div class=\"category-icon-small\" :class=\"`icon-${currentCategory}`\">\r\n            <i class=\"icon\" v-html=\"categoryIcons[currentCategory]\"></i>\r\n          </div>\r\n          <h2 class=\"category-title-large\">{{ categories[currentCategory].title }}</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <p class=\"category-detail-description\">{{ categories[currentCategory].description }}</p>\r\n\r\n      <div class=\"tests-list\">\r\n        <div\r\n          v-for=\"test in getCategoryTests(currentCategory)\"\r\n          :key=\"test.key\"\r\n          class=\"test-card\"\r\n          @click=\"selectTest(test.key)\"\r\n        >\r\n          <h3 class=\"test-title\">{{ test.name }}</h3>\r\n          <p class=\"test-description\">{{ test.description }}</p>\r\n          <div class=\"test-card-footer\">\r\n            <span class=\"difficulty\" :class=\"`difficulty-${test.difficulty}`\">\r\n              {{ getDifficultyLabel(test.difficulty) }}\r\n            </span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"arrow-icon\">\r\n              <path d=\"M5 12h14\"></path>\r\n              <path d=\"M12 5l7 7-7 7\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Контейнер активного теста -->\r\n    <div v-else-if=\"currentTest\" class=\"test-active-container\">\r\n      <div class=\"test-header\">\r\n        <button @click=\"backToCategory\" class=\"back-button\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\r\n            <polyline points=\"12 19 5 12 12 5\"></polyline>\r\n          </svg>\r\n          Назад\r\n        </button>\r\n        <h2 class=\"test-active-title\">{{ getTestName(currentTest) }}</h2>\r\n        <Timer ref=\"timer\" class=\"test-timer\" />\r\n      </div>\r\n      \r\n      <div class=\"test-content\">\r\n        <component\r\n          :is=\"currentTest\"\r\n          @test-complete=\"onTestComplete\"\r\n          @test-start=\"onTestStart\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Timer from './Test1/ThisTimer.vue';\r\nimport AttentionTest from './Test1/AttentionTest.vue';\r\nimport ReactionTest from './Test1/ReactionTest.vue';\r\nimport MemoryTest from './Test1/MemoryTest.vue';\r\nimport TextSelectionTest from './Test1/TextSelectionTest.vue';\r\nimport SumDigitsTest from './Test1/SumDigitsTest.vue';\r\nimport SecondTest from './Test2/SecondTest.vue';\r\nimport ThirdTest from './Test2/ThirdTest.vue';\r\nimport FourthTest from './Test2/FourthTest.vue';\r\nimport FifthTest from './Test2/FifthTest.vue';\r\nimport SovietLogicTest from \"../Tests/Test3/SovietLogicTest.vue\";\r\nimport SpatialSkillTest from \"../Tests/Test3/SpatialThinkingTest.vue\";\r\nimport QuickResponseTest from \"../Tests/Test3/ReactionTimeTest.vue\";\r\nimport NBackMemory from \"../Tests/Test3/NBackGame.vue\";\r\nimport TimeEvaluator from \"../Tests/Test3/TimePerception.vue\";\r\nimport ColorTest from \"./Test4/ColorTest.vue\";\r\nimport PuzzleGame from \"./Test4/PuzzleGame.vue\";\r\n\r\nexport default {\r\n  name: 'TestsApp',\r\n  components: {\r\n    Timer,\r\n    AttentionTest,\r\n    ReactionTest,\r\n    MemoryTest,\r\n    TextSelectionTest,\r\n    SumDigitsTest,\r\n    SecondTest,\r\n    ThirdTest,\r\n    FourthTest,\r\n    FifthTest,\r\n    SovietLogicTest,\r\n    SpatialSkillTest,\r\n    QuickResponseTest,\r\n    NBackMemory,\r\n    TimeEvaluator,\r\n    ColorTest,\r\n    PuzzleGame\r\n  },\r\n  data() {\r\n    return {\r\n      currentCategory: null,\r\n      currentTest: null,\r\n      categories: {\r\n        math: {\r\n          title: 'Математические тесты',\r\n          description: 'Оценка способностей к счету и математическим вычислениям'\r\n        },\r\n        attention: {\r\n          title: 'Тесты на внимание',\r\n          description: 'Оценка концентрации внимания и способности к фокусировке'\r\n        },\r\n        reaction: {\r\n          title: 'Тесты на реакцию',\r\n          description: 'Измерение скорости реакции и времени отклика'\r\n        },\r\n        memory: {\r\n          title: 'Тесты на память',\r\n          description: 'Проверка кратковременной и рабочей памяти'\r\n        },\r\n        verbal: {\r\n          title: 'Вербальные тесты',\r\n          description: 'Оценка вербального интеллекта и языковых способностей'\r\n        },\r\n        spatial: {\r\n          title: 'Тесты на пространственное мышление',\r\n          description: 'Оценка способности к визуализации и манипуляции объектами в пространстве'\r\n        },\r\n        logic: {\r\n          title: 'Тесты на логику',\r\n          description: 'Проверка логического мышления и способности к решению задач'\r\n        },\r\n        time: {\r\n          title: 'Тесты на восприятие времени',\r\n          description: 'Оценка чувства времени и временной ориентации'\r\n        },\r\n        perception: {\r\n          title: 'Тесты на восприятие',\r\n          description: 'Проверка восприятия цветов, форм и других визуальных характеристик'\r\n        }\r\n      },\r\n      allTests: [\r\n        {\r\n          key: 'SumDigitsTest',\r\n          name: 'Устный счет',\r\n          category: 'math',\r\n          description: 'Проверка навыков быстрого сложения цифр и расчетов в уме',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'AttentionTest',\r\n          name: 'Внимание',\r\n          category: 'attention',\r\n          description: 'Оценка способности различать цвета слов и их значения',\r\n          difficulty: 'easy'\r\n        },\r\n        {\r\n          key: 'ReactionTest',\r\n          name: 'Реакция',\r\n          category: 'reaction',\r\n          description: 'Измерение скорости нажатия кнопки при изменении стимула',\r\n          difficulty: 'easy'\r\n        },\r\n        {\r\n          key: 'MemoryTest',\r\n          name: 'Память',\r\n          category: 'memory',\r\n          description: 'Оценка кратковременной памяти и запоминания деталей',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'TextSelectionTest',\r\n          name: 'Выбор текста',\r\n          category: 'verbal',\r\n          description: 'Поиск осмысленных слов в наборе букв',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'SecondTest',\r\n          name: 'Внимание 2',\r\n          category: 'attention',\r\n          description: 'Проверка внимательности при сравнении строк',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'ThirdTest',\r\n          name: 'Концентрация',\r\n          category: 'attention',\r\n          description: 'Оценка способности к длительной концентрации внимания',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'FourthTest',\r\n          name: 'Память 2',\r\n          category: 'memory',\r\n          description: 'Проверка запоминания чисел на короткий период времени',\r\n          difficulty: 'hard'\r\n        },\r\n        {\r\n          key: 'FifthTest',\r\n          name: 'Тест Струпа',\r\n          category: 'attention',\r\n          description: 'Классический тест на когнитивную гибкость и внимание',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'SovietLogicTest',\r\n          name: 'Логические загадки',\r\n          category: 'logic',\r\n          description: 'Решение задач на логическое мышление',\r\n          difficulty: 'hard'\r\n        },\r\n        {\r\n          key: 'SpatialSkillTest',\r\n          name: 'Пространственное мышление 2',\r\n          category: 'spatial',\r\n          description: 'Продвинутый тест на пространственные навыки',\r\n          difficulty: 'hard'\r\n        },\r\n        {\r\n          key: 'QuickResponseTest',\r\n          name: 'Реакция 2',\r\n          category: 'reaction',\r\n          description: 'Улучшенный тест на время реакции',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'NBackMemory',\r\n          name: 'N-назад',\r\n          category: 'memory',\r\n          description: 'Тренировка рабочей памяти методом N-назад',\r\n          difficulty: 'hard'\r\n        },\r\n        {\r\n          key: 'TimeEvaluator',\r\n          name: 'Оценка времени',\r\n          category: 'time',\r\n          description: 'Проверка точности восприятия временных интервалов',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'ColorTest',\r\n          name: 'Различие цветов',\r\n          category: 'perception',\r\n          description: 'Оценка способности различать тонкие оттенки цветов',\r\n          difficulty: 'medium'\r\n        },\r\n        {\r\n          key: 'PuzzleGame',\r\n          name: 'Сборка пазлов',\r\n          category: 'spatial',\r\n          description: 'Сборка изображения из отдельных фрагментов',\r\n          difficulty: 'medium'\r\n        }\r\n      ],\r\n      // SVG иконки для каждой категории\r\n      categoryIcons: {\r\n        'math': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M4 7l4-2.5 4 2.5 4-2.5 4 2.5\"></path><path d=\"M4 12l4-2.5 4 2.5 4-2.5 4 2.5\"></path><path d=\"M4 17l4-2.5 4 2.5 4-2.5 4 2.5\"></path></svg>',\r\n        'attention': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\r\n        'reaction': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M13 2L3 14h9l-1 8 10-16h-9l1-4z\"></path></svg>',\r\n        'memory': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\"></rect><path d=\"M8 2v4\"></path><path d=\"M16 2v4\"></path><circle cx=\"12\" cy=\"11\" r=\"3\"></circle><path d=\"M12 14v4\"></path></svg>',\r\n        'verbal': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line><line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line><polyline points=\"10 9 9 9 8 9\"></polyline></svg>',\r\n        'spatial': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path></svg>',\r\n        'logic': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M13 6h3a2 2 0 0 1 2 2v7\"></path><path d=\"M11 18H8a2 2 0 0 1-2-2V9\"></path></svg>',\r\n        'time': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline></svg>',\r\n        'perception': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"4\" r=\"2\"></circle><circle cx=\"5\" cy=\"12\" r=\"2\"></circle><circle cx=\"19\" cy=\"12\" r=\"2\"></circle><circle cx=\"8\" cy=\"20\" r=\"2\"></circle><circle cx=\"16\" cy=\"20\" r=\"2\"></circle><path d=\"M12 6v4\"></path><path d=\"M7 12h10\"></path><path d=\"M9 18l-1-3\"></path><path d=\"M15 18l1-3\"></path></svg>'\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    selectCategory(categoryKey) {\r\n      this.currentCategory = categoryKey;\r\n    },\r\n    \r\n    selectTest(testKey) {\r\n      this.currentTest = testKey;\r\n    },\r\n    \r\n    backToCategories() {\r\n      this.currentCategory = null;\r\n    },\r\n    \r\n    backToCategory() {\r\n      this.currentTest = null;\r\n    },\r\n    \r\n    getCategoryTests(categoryKey) {\r\n      return this.allTests.filter(test => test.category === categoryKey);\r\n    },\r\n    \r\n    getTestName(testKey) {\r\n      const test = this.allTests.find(t => t.key === testKey);\r\n      return test ? test.name : testKey;\r\n    },\r\n    \r\n    getDifficultyLabel(difficulty) {\r\n      switch(difficulty) {\r\n        case 'easy': return 'Легкий';\r\n        case 'medium': return 'Средний';\r\n        case 'hard': return 'Сложный';\r\n        default: return 'Средний';\r\n      }\r\n    },\r\n    \r\n    onTestStart() {\r\n      if (this.$refs.timer) {\r\n        this.$refs.timer.resetTimer();\r\n        this.$refs.timer.startTimer();\r\n      }\r\n    },\r\n    \r\n    onTestComplete(score, total_test = 10) {\r\n      if (this.$refs.timer) {\r\n        this.$refs.timer.stopTimer();\r\n        const totalTime = this.$refs.timer.timeElapsed;\r\n        \r\n        // Сохраняем результат теста\r\n        this.saveTestResult(score, total_test, totalTime);\r\n        \r\n        // Показываем результат\r\n        this.showTestResult(score, total_test, totalTime);\r\n      }\r\n    },\r\n    \r\n    saveTestResult(score, total, time) {\r\n      try {\r\n        const test = this.allTests.find(t => t.key === this.currentTest);\r\n        const testName = test ? test.name : this.currentTest;\r\n        const seconds = Math.floor(time / 1000);\r\n        const percentage = Math.round((score / total) * 100);\r\n        \r\n        // Определяем номер попытки\r\n        let tryNumber = 1;\r\n        \r\n        // Получаем текущие результаты для этого теста\r\n        const existingResults = this.$store.state.testResults.filter(\r\n          result => result.test.test_name === testName\r\n        );\r\n        \r\n        // Если есть предыдущие попытки, увеличиваем номер\r\n        if (existingResults.length > 0) {\r\n          // Находим максимальный номер попытки\r\n          const maxTryNumber = Math.max(...existingResults.map(r => r.try_number || 1));\r\n          tryNumber = maxTryNumber + 1;\r\n        }\r\n        \r\n        // Создаем объект с результатами\r\n        const testResult = {\r\n          test: {\r\n            test_id: this.allTests.findIndex(t => t.key === this.currentTest) + 1,\r\n            test_name: testName\r\n          },\r\n          try_number: tryNumber,\r\n          number_all_answers: total,\r\n          number_correct_answers: score,\r\n          accuracy: percentage,\r\n          completion_time_seconds: seconds,\r\n          complete_time: new Date().toISOString()\r\n        };\r\n        \r\n        // Сохраняем результат в хранилище Vuex\r\n        this.$store.commit('addTestResult', testResult);\r\n        \r\n        console.log('Сохранение результатов теста:', testResult);\r\n      } catch (error) {\r\n        console.error('Ошибка при сохранении результатов:', error);\r\n      }\r\n    },\r\n    \r\n    showTestResult(score, total, time) {\r\n      const test = this.allTests.find(t => t.key === this.currentTest);\r\n      const testName = test ? test.name : this.currentTest;\r\n      const seconds = Math.floor(time / 1000);\r\n      const percentage = Math.round((score / total) * 100);\r\n      \r\n      let resultMessage = '';\r\n      if (percentage >= 90) {\r\n        resultMessage = 'Отличный результат!';\r\n      } else if (percentage >= 70) {\r\n        resultMessage = 'Хороший результат!';\r\n      } else if (percentage >= 50) {\r\n        resultMessage = 'Неплохой результат.';\r\n      } else {\r\n        resultMessage = 'Есть куда расти.';\r\n      }\r\n      \r\n      alert(`${resultMessage}\\nВы завершили тест \"${testName}\" за ${seconds} секунд.\\nВаш результат: ${score} из ${total} (${percentage}%).`);\r\n      \r\n      this.backToCategory();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\");\r\n\r\n.tests-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  font-family: 'Inter', sans-serif;\r\n  color: #1f2937;\r\n}\r\n\r\n.tests-main-title {\r\n  font-size: 2.25rem;\r\n  color: #111827;\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  font-weight: 700;\r\n}\r\n\r\n/* Стили для сетки категорий */\r\n.category-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.category-card {\r\n  display: flex;\r\n  background-color: #fff;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  border: 1px solid #f3f4f6;\r\n}\r\n\r\n.category-card:hover {\r\n  transform: translateY(-4px);\r\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.category-icon {\r\n  width: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.category-content {\r\n  padding: 1.5rem;\r\n  flex-grow: 1;\r\n}\r\n\r\n.category-title {\r\n  font-size: 1.125rem;\r\n  font-weight: 600;\r\n  margin-bottom: 0.5rem;\r\n  color: #111827;\r\n}\r\n\r\n.category-description {\r\n  font-size: 0.875rem;\r\n  color: #6b7280;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили для детальной страницы категории */\r\n.category-detail {\r\n  background-color: #fff;\r\n  border-radius: 1rem;\r\n  padding: 2rem;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.back-button {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  color: #4b5563;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.5rem;\r\n  transition: all 0.2s ease;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: #f3f4f6;\r\n  color: #111827;\r\n}\r\n\r\n.category-title-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.category-icon-small {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 0.75rem;\r\n  color: white;\r\n}\r\n\r\n.category-title-large {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #111827;\r\n  margin: 0;\r\n}\r\n\r\n.category-detail-description {\r\n  font-size: 1rem;\r\n  color: #6b7280;\r\n  margin-bottom: 2rem;\r\n  line-height: 1.6;\r\n}\r\n\r\n.tests-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.test-card {\r\n  background-color: #f9fafb;\r\n  border-radius: 0.75rem;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  border: 1px solid #f3f4f6;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.test-card:hover {\r\n  background-color: #f3f4f6;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.07);\r\n}\r\n\r\n.test-title {\r\n  font-size: 1.125rem;\r\n  font-weight: 600;\r\n  color: #111827;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.test-description {\r\n  font-size: 0.875rem;\r\n  color: #6b7280;\r\n  margin-bottom: 1.5rem;\r\n  line-height: 1.5;\r\n  flex-grow: 1;\r\n}\r\n\r\n.test-card-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: auto;\r\n}\r\n\r\n.difficulty {\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.difficulty-easy {\r\n  background-color: #d1fae5;\r\n  color: #065f46;\r\n}\r\n\r\n.difficulty-medium {\r\n  background-color: #e0f2fe;\r\n  color: #0369a1;\r\n}\r\n\r\n.difficulty-hard {\r\n  background-color: #fef3c7;\r\n  color: #92400e;\r\n}\r\n\r\n.arrow-icon {\r\n  color: #9ca3af;\r\n}\r\n\r\n/* Стили для активного теста */\r\n.test-active-container {\r\n  background-color: #fff;\r\n  border-radius: 1rem;\r\n  padding: 2rem;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n.test-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.test-active-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #111827;\r\n  margin: 0 auto 0 0;\r\n  padding-left: 1rem;\r\n}\r\n\r\n.test-content {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.test-timer {\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  color: #4b5563;\r\n  background-color: #f3f4f6;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n/* Цвета для категорий */\r\n.icon-math {\r\n  background-color: #6366f1; /* Индиго */\r\n}\r\n\r\n.icon-attention {\r\n  background-color: #8b5cf6; /* Пурпурный */\r\n}\r\n\r\n.icon-reaction {\r\n  background-color: #ec4899; /* Розовый */\r\n}\r\n\r\n.icon-memory {\r\n  background-color: #14b8a6; /* Сине-зеленый */\r\n}\r\n\r\n.icon-verbal {\r\n  background-color: #f59e0b; /* Янтарный */\r\n}\r\n\r\n.icon-spatial {\r\n  background-color: #4f46e5; /* Темно-индиго */\r\n}\r\n\r\n.icon-logic {\r\n  background-color: #0ea5e9; /* Голубой */\r\n}\r\n\r\n.icon-time {\r\n  background-color: #64748b; /* Серый */\r\n}\r\n\r\n.icon-perception {\r\n  background-color: #d946ef; /* Фуксия */\r\n}\r\n\r\n/* Адаптивный дизайн */\r\n@media (max-width: 768px) {\r\n  .tests-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .tests-main-title {\r\n    font-size: 1.75rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .category-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .category-card {\r\n    flex-direction: row;\r\n  }\r\n  \r\n  .category-icon {\r\n    width: 60px;\r\n  }\r\n  \r\n  .category-title {\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .category-description {\r\n    font-size: 0.75rem;\r\n  }\r\n  \r\n  .tests-list {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .category-title-large {\r\n    font-size: 1.25rem;\r\n  }\r\n  \r\n  .test-active-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .test-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .test-active-title {\r\n    padding-left: 0;\r\n    margin: 1rem 0;\r\n  }\r\n}\r\n</style>","<template>\r\n    <div class=\"timer\">\r\n      Время прохождения теста: {{ formattedTime }}\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'ThisTimer', // Измените имя компонента здесь\r\n    data() {\r\n      return {\r\n        timeElapsed: 0,\r\n        timer: null,\r\n      };\r\n    },\r\n    computed: {\r\n      formattedTime() {\r\n        const seconds = Math.floor((this.timeElapsed / 1000) % 60);\r\n        const minutes = Math.floor(this.timeElapsed / 60000);\r\n        return `${minutes} мин ${seconds} сек`;\r\n      },\r\n    },\r\n    methods: {\r\n      startTimer() {\r\n        this.resetTimer();\r\n        this.timer = setInterval(() => {\r\n          this.timeElapsed += 100;\r\n        }, 100);\r\n      },\r\n      stopTimer() {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      },\r\n      resetTimer() {\r\n        this.stopTimer();\r\n        this.timeElapsed = 0;\r\n      },\r\n    },\r\n    beforeUnmount() {\r\n      this.stopTimer();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .timer {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 20px 0;\r\n    text-align: center;\r\n  }\r\n  </style>","import { render } from \"./ThisTimer.vue?vue&type=template&id=a6819fb4\"\nimport script from \"./ThisTimer.vue?vue&type=script&lang=js\"\nexport * from \"./ThisTimer.vue?vue&type=script&lang=js\"\n\nimport \"./ThisTimer.vue?vue&type=style&index=0&id=a6819fb4&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"attention-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на внимательность</h2>\r\n        <p>В этом тесте вы увидите слова, написанные разными цветами. Ваша задача - выбрать вариант, который правильно описывает цвета слов на экране, а не их значения.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else-if=\"currentTask <= totalTasks && !testCompleted\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: progress + '%' }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Задание {{ currentTask }}/{{ totalTasks }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <div class=\"words-container\">\r\n          <span\r\n          v-for=\"(word, index) in taskWords\"\r\n          :key=\"index\"\r\n          :style=\"{ color: word.color }\"\r\n          class=\"word\"\r\n        >\r\n        {{ word.text }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n        \r\n        <h3 class=\"question-text\">Выберите вариант, который правильно описывает ЦВЕТА слов (не их значения):</h3>\r\n        \r\n        <div class=\"options\">\r\n          <button\r\n            v-for=\"(option, index) in options\"\r\n            :key=\"index\"\r\n            @click=\"checkAnswer(option)\"\r\n            class=\"option-button\"\r\n          >\r\n            {{ formatOption(option) }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с результатами -->\r\n    <div v-if=\"testCompleted\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': score >= totalTasks * 0.7 }\">\r\n          <svg v-if=\"score >= totalTasks * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ score }}</span>\r\n            <span class=\"score-total\">/{{ totalTasks }}</span>\r\n          </div>\r\n          <p class=\"score-label\">правильных ответов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"score >= totalTasks * 0.9\">Отличный результат! У вас феноменальная внимательность.</p>\r\n          <p v-else-if=\"score >= totalTasks * 0.7\">Хороший результат! Ваша внимательность выше среднего.</p>\r\n          <p v-else-if=\"score >= totalTasks * 0.5\">Неплохой результат. Есть потенциал для улучшения.</p>\r\n          <p v-else>Внимательность можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      currentTask: 1,\r\n      totalTasks: 10,\r\n      words: ['Красный', 'Синий','Зеленый','Желтый','Белый'],\r\n      colors: ['red', 'blue', 'green', 'yellow', 'white'],\r\n      taskWords: [],\r\n      correctAnswer: [],\r\n      options: [],\r\n      score: 0,\r\n      testCompleted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    progress() {\r\n      return (this.currentTask / this.totalTasks) * 100;\r\n    },\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.currentTask = 1;\r\n      this.score = 0;\r\n      this.testCompleted = false;\r\n      this.$emit('test-start');\r\n      this.generateTask();\r\n    },\r\n    generateTask() {\r\n      const wordsCount = Math.min(this.currentTask, 10); // Ограничиваем до 10 слов\r\n      const words = [];\r\n      const answer = [];\r\n      for (let i = 0; i < wordsCount; i++) {\r\n        const randomColorText = this.words[Math.floor(Math.random() * this.words.length)];\r\n        const randomColorIndex = Math.floor(Math.random() * this.colors.length);\r\n        const randomColor = this.colors[randomColorIndex];\r\n        words.push({ text: randomColorText, color: randomColor });\r\n        answer.push(this.words[randomColorIndex]);\r\n      }\r\n      this.taskWords = words;\r\n      this.correctAnswer = answer;\r\n\r\n      // Генерируем варианты ответов с небольшими отличиями\r\n      this.generateOptions(answer, wordsCount);\r\n    },\r\n    generateOptions(correctAnswer, wordsCount) {\r\n      const options = [correctAnswer]; // Добавляем правильный ответ\r\n\r\n      // Создаём ещё 2 варианта ответов с малыми отличиями от правильного\r\n      while (options.length < 3) {\r\n        // Клонируем правильный ответ\r\n        const variant = [...correctAnswer];\r\n        \r\n        // Изменяем 1-2 случайные позиции\r\n        const changeCount = 1 + Math.floor(Math.random() * 2); // 1 или 2 изменения\r\n        const positionsToChange = new Set();\r\n        \r\n        // Выбираем случайные позиции для изменения\r\n        while (positionsToChange.size < changeCount && positionsToChange.size < wordsCount) {\r\n          const pos = Math.floor(Math.random() * wordsCount);\r\n          positionsToChange.add(pos);\r\n        }\r\n        \r\n        // Меняем выбранные позиции\r\n        for (const pos of positionsToChange) {\r\n          let newColor;\r\n          // Выбираем цвет, отличный от правильного\r\n          do {\r\n            const randomIndex = Math.floor(Math.random() * this.words.length);\r\n            newColor = this.words[randomIndex];\r\n          } while (newColor === correctAnswer[pos]);\r\n          \r\n          variant[pos] = newColor;\r\n        }\r\n        \r\n        // Проверяем, что такого варианта ещё нет\r\n        const isDuplicate = options.some(opt => \r\n          JSON.stringify(opt) === JSON.stringify(variant)\r\n        );\r\n        \r\n        if (!isDuplicate) {\r\n          options.push(variant);\r\n        }\r\n      }\r\n\r\n      // Перемешиваем варианты\r\n      this.options = options.sort(() => Math.random() - 0.5);\r\n    },\r\n    formatOption(option) {\r\n      // Форматируем длинные варианты ответов для лучшего отображения\r\n      if (option.length > 6) {\r\n        // Разделяем на две строки, если вариантов много\r\n        const firstHalf = option.slice(0, Math.ceil(option.length/2)).join(', ');\r\n        const secondHalf = option.slice(Math.ceil(option.length/2)).join(', ');\r\n        return firstHalf + ',\\n' + secondHalf;\r\n      }\r\n      return option.join(', ');\r\n    },\r\n    checkAnswer(selectedOption) {\r\n      if (JSON.stringify(selectedOption) === JSON.stringify(this.correctAnswer)) {\r\n        this.score++;\r\n      }\r\n      if (this.currentTask < this.totalTasks) {\r\n        this.currentTask++;\r\n        this.generateTask();\r\n      } else {\r\n        this.testCompleted = true;\r\n        this.$emit('test-complete', this.score);\r\n      }\r\n    },\r\n    restartTest() {\r\n      this.startTest();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.attention-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #3b4ce2;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #3b4ce2;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.words-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr); /* Два столбца */\r\n  gap: 10px; /* Промежуток между словами */\r\n  margin: 20px 0;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.word {\r\n  font-size: 18px; /* Размер шрифта для обычных устройств */\r\n  padding: 8px 12px;\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  border-radius: 8px;\r\n  display: flex;\r\n  justify-content: center; /* Центрирование текста */\r\n  align-items: center; /* Центрирование текста по вертикали */\r\n}\r\n\r\n\r\n.words {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin: 0 auto;\r\n  max-width: 90%;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin: 1.5rem 0;\r\n  text-align: center;\r\n}\r\n\r\n.options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin: 20px 0;\r\n  width: 100%;\r\n}\r\n\r\n.option-button {\r\n  min-height: 60px;\r\n  width: 90%;\r\n  max-width: 400px;\r\n  padding: 12px 15px;\r\n  background-color: #f3f4f6;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  line-height: 1.4;\r\n  white-space: pre-wrap;\r\n  transition: all 0.2s;\r\n  color: #1f2937;\r\n}\r\n\r\n.option-button:hover {\r\n  background-color: #e5e7eb;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #2d3ebd;\r\n}\r\n\r\n.action-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .words-container {\r\n    grid-template-columns: repeat(2, 1fr); /* Два столбца на мобильных устройствах */\r\n    gap: 8px; /* Уменьшенный промежуток */\r\n  }\r\n  .word {\r\n    font-size: 16px; /* Уменьшенный размер шрифта */\r\n    padding: 6px 10px; /* Уменьшенные отступы */\r\n  }\r\n\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .option-button {\r\n    min-height: 50px;\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>","import { render } from \"./AttentionTest.vue?vue&type=template&id=9c39ce2a\"\nimport script from \"./AttentionTest.vue?vue&type=script&lang=js\"\nexport * from \"./AttentionTest.vue?vue&type=script&lang=js\"\n\nimport \"./AttentionTest.vue?vue&type=style&index=0&id=9c39ce2a&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"reaction-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n          <path d=\"M13 2L3 14h9l-1 8 10-16h-9l1-4z\"></path>\r\n        </svg>\r\n      </div>\r\n        <h2>Тест на реакцию</h2>\r\n        <p>Проверьте скорость своей реакции! Вам предстоит выполнить 5 попыток. Нажмите на круг, как только он станет зелёным. Действуйте быстро, но не торопитесь - если нажмёте слишком рано, попытка не засчитается.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else-if=\"!testCompleted\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentAttempt / totalAttempts) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Попытка {{ currentAttempt }}/{{ totalAttempts }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <div \r\n          class=\"circle-container\"\r\n          @click=\"handleClick\"\r\n        >\r\n          <div\r\n            :class=\"['reaction-circle', isGreen ? 'green' : isWaiting ? 'red' : 'neutral']\"\r\n          >\r\n            <p v-if=\"!isGreen && !isWaiting\">Нажмите, чтобы начать</p>\r\n            <p v-if=\"!isGreen && isWaiting\">Ждите зеленый...</p>\r\n            <p v-if=\"isGreen\">Нажмите!</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-if=\"lastReactionTime !== null\" class=\"feedback-message\">\r\n          <p class=\"last-time\">Ваше время реакции: <strong>{{ lastReactionTime }} мс</strong></p>\r\n        </div>\r\n        \r\n        <div v-if=\"tooSoonMessage\" class=\"error-message\">\r\n          <p>Слишком рано! Дождитесь, пока круг станет зеленым.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с результатами -->\r\n    <div v-if=\"testCompleted\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': averageReactionTime < 300 }\">\r\n          <svg v-if=\"averageReactionTime < 300\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M13 2L3 14h9l-1 8 10-16h-9l1-4z\"></path>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ averageReactionTime }}</span>\r\n            <span class=\"score-label-small\">мс</span>\r\n          </div>\r\n          <p class=\"score-label\">среднее время реакции</p>\r\n        </div>\r\n        \r\n        <div class=\"result-stats\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Лучшее время:</span>\r\n            <span class=\"stat-value\">{{ bestReactionTime }} мс</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"averageReactionTime < 200\">Невероятно быстрая реакция! Это уровень профессиональных спортсменов.</p>\r\n          <p v-else-if=\"averageReactionTime < 250\">Отличная реакция! Вы быстрее большинства людей.</p>\r\n          <p v-else-if=\"averageReactionTime < 300\">Хорошая реакция, выше среднего.</p>\r\n          <p v-else-if=\"averageReactionTime < 350\">Ваша реакция на уровне среднего человека.</p>\r\n          <p v-else>Ваша реакция немного ниже среднего. Регулярные тренировки помогут её улучшить!</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      isGreen: false,\r\n      isWaiting: false,\r\n      currentAttempt: 1,\r\n      totalAttempts: 5,\r\n      reactionTimes: [],\r\n      lastReactionTime: null,\r\n      tooSoonMessage: false,\r\n      timeoutId: null,\r\n      startTime: 0,\r\n      testCompleted: false\r\n    };\r\n  },\r\n  computed: {\r\n    averageReactionTime() {\r\n      if (this.reactionTimes.length === 0) return 0;\r\n      const sum = this.reactionTimes.reduce((a, b) => a + b, 0);\r\n      return Math.round(sum / this.reactionTimes.length);\r\n    },\r\n    bestReactionTime() {\r\n      if (this.reactionTimes.length === 0) return 0;\r\n      return Math.min(...this.reactionTimes);\r\n    }\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.testCompleted = false;\r\n      this.currentAttempt = 1;\r\n      this.reactionTimes = [];\r\n      this.lastReactionTime = null;\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    startNextAttempt() {\r\n      this.isGreen = false;\r\n      this.isWaiting = true;\r\n      this.tooSoonMessage = false;\r\n      this.lastReactionTime = null;\r\n\r\n      // Случайная задержка от 2 до 5 секунд\r\n      const randomDelay = Math.floor(Math.random() * 3000) + 2000;\r\n      \r\n      this.timeoutId = setTimeout(() => {\r\n        this.isGreen = true;\r\n        this.isWaiting = false;\r\n        this.startTime = performance.now();\r\n      }, randomDelay);\r\n    },\r\n    \r\n    handleClick() {\r\n      if (!this.testStarted) {\r\n        return;\r\n      }\r\n      \r\n      if (!this.isWaiting && !this.isGreen) {\r\n        // Начинаем попытку\r\n        this.startNextAttempt();\r\n      } else if (this.isWaiting) {\r\n        // Слишком рано нажали\r\n        clearTimeout(this.timeoutId);\r\n        this.isWaiting = false;\r\n        this.tooSoonMessage = true;\r\n        \r\n        // Автоматически начинаем новую попытку через 2 секунды\r\n        setTimeout(() => {\r\n          this.tooSoonMessage = false;\r\n          this.startNextAttempt();\r\n        }, 2000);\r\n      } else if (this.isGreen) {\r\n        // Правильно нажали на зеленый\r\n        const reactionTime = Math.round(performance.now() - this.startTime);\r\n        this.reactionTimes.push(reactionTime);\r\n        this.lastReactionTime = reactionTime;\r\n        this.isGreen = false;\r\n\r\n        // Если не последняя попытка\r\n        if (this.currentAttempt < this.totalAttempts) {\r\n          this.currentAttempt++;\r\n          \r\n          // Автоматически начинаем следующую попытку через 2 секунды\r\n          setTimeout(() => {\r\n            this.startNextAttempt();\r\n          }, 2000);\r\n        } else {\r\n          // Тест завершен\r\n          this.testCompleted = true;\r\n          this.$emit('test-complete', this.reactionTimes.length > 0 ? Math.floor(1000 / this.averageReactionTime * 5) : 0);\r\n        }\r\n      }\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    }\r\n  },\r\n  \r\n  beforeUnmount() {\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.reaction-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #3b4ce2;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана с тестом */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #3b4ce2;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.circle-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 1.5rem 0;\r\n  width: 100%;\r\n}\r\n\r\n.reaction-circle {\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  color: white;\r\n  font-weight: 600;\r\n  transition: background-color 0.1s;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  padding: 1rem;\r\n}\r\n\r\n.reaction-circle.neutral {\r\n  background-color: #9ca3af;\r\n}\r\n\r\n.reaction-circle.red {\r\n  background-color: #ef4444;\r\n}\r\n\r\n.reaction-circle.green {\r\n  background-color: #10b981;\r\n}\r\n\r\n.reaction-circle:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.reaction-circle:active {\r\n  transform: scale(0.98);\r\n}\r\n\r\n.feedback-message {\r\n  margin-top: 1rem;\r\n  color: #4b5563;\r\n  font-size: 18px;\r\n  text-align: center;\r\n}\r\n\r\n.last-time {\r\n  background-color: #f3f4f6;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 8px;\r\n  display: inline-block;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 1rem;\r\n  background-color: #fee2e2;\r\n  color: #ef4444;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  width: 80%;\r\n  max-width: 400px;\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.score-label-small {\r\n  font-size: 16px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  bottom: 30px;\r\n  right: 25px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #2d3ebd;\r\n}\r\n\r\n.action-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 28px;\r\n  }\r\n  \r\n  .score-label-small {\r\n    font-size: 14px;\r\n    bottom: 30px;\r\n    right: 20px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .reaction-circle {\r\n    width: 150px;\r\n    height: 150px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .feedback-message {\r\n    font-size: 16px;\r\n  }\r\n}\r\n</style>","import { render } from \"./ReactionTest.vue?vue&type=template&id=d5bbea56\"\nimport script from \"./ReactionTest.vue?vue&type=script&lang=js\"\nexport * from \"./ReactionTest.vue?vue&type=script&lang=js\"\n\nimport \"./ReactionTest.vue?vue&type=style&index=0&id=d5bbea56&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"memory-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\"></rect>\r\n            <path d=\"M8 2v4\"></path>\r\n            <path d=\"M16 2v4\"></path>\r\n            <circle cx=\"12\" cy=\"11\" r=\"3\"></circle>\r\n            <path d=\"M12 14v4\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на память</h2>\r\n        <p>Проверьте свою способность запоминать и вспоминать детали изображений и повседневные факты</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с вопросом -->\r\n    <div v-else-if=\"currentQuestion <= totalQuestions && !testCompleted\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentQuestion / totalQuestions) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Вопрос {{ currentQuestion }}/{{ totalQuestions }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <div class=\"image-frame\">\r\n          <img :src=\"currentImage\" alt=\"Тестовое изображение\" class=\"question-image\">\r\n        </div>\r\n        \r\n        <h3 class=\"question-text\">{{ currentQuestionText }}</h3>\r\n\r\n        <div class=\"answer-options\">\r\n          <button \r\n            v-for=\"(option, index) in currentOptions\" \r\n            :key=\"index\"\r\n            @click=\"checkAnswer(option)\" \r\n            class=\"option-button\"\r\n          >\r\n            {{ option }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран результатов -->\r\n    <div v-if=\"testCompleted\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': score >= totalQuestions * 0.7 }\">\r\n          <svg v-if=\"score >= totalQuestions * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M12 2v4M12 18v4M4.93 4.93l2.83 2.83M16.24 16.24l2.83 2.83M2 12h4M18 12h4M4.93 19.07l2.83-2.83M16.24 7.76l2.83-2.83\"></path>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ score }}</span>\r\n            <span class=\"score-total\">/{{ totalQuestions }}</span>\r\n          </div>\r\n          <p class=\"score-label\">правильных ответов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"score >= totalQuestions * 0.9\">Отличный результат! У вас феноменальная память.</p>\r\n          <p v-else-if=\"score >= totalQuestions * 0.7\">Хороший результат! Ваша память работает отлично.</p>\r\n          <p v-else-if=\"score >= totalQuestions * 0.5\">Неплохой результат. Есть потенциал для улучшения.</p>\r\n          <p v-else>Память можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      currentQuestion: 1,\r\n      totalQuestions: 10,\r\n      questions: [\r\n        {\r\n          text: \"Помните какое сегодня число?\",\r\n          options: [\"Да\", \"Нет\"],\r\n          answer: \"Да\",\r\n          image: \"https://trikky.ru/wp-content/blogs.dir/1/files/2024/05/11/i-23.jpeg\",\r\n        },\r\n        {\r\n          text: \"Просто посмотрите на эту картинку.\",\r\n          options: [\"Далее\"],\r\n          answer: \"Далее\",\r\n          image: \"https://image.jimcdn.com/app/cms/image/transf/none/path/s303186db9a6eac8a/backgroundarea/i24b4150e4347aa1f/version/1522171045/image.jpg\",\r\n        },\r\n        {\r\n          text: \"Какое число было обведено на первой картинке?\",\r\n          options: [\"3\", \"4\", \"5\"],\r\n          answer: \"4\",\r\n          image: \"https://pic.rutubelist.ru/video/21/62/216230a4acde4e677dc396832de6c50b.jpg\",\r\n        },\r\n        {\r\n          text: \"Помните что Вы вчера ели на завтрак?\",\r\n          options: [\"Да\", \"Нет\"],\r\n          answer: \"Да\",\r\n          image: \"https://i.pinimg.com/originals/a0/b9/03/a0b9032669a104ae3fb94fca5aace424.jpg\",\r\n        },\r\n        {\r\n          text: \"Помните сколько у Вас двоюродных братьев и сестер?\",\r\n          options: [\"Да\", \"Нет\"],\r\n          answer: \"Да\",\r\n          image: \"https://m.media-amazon.com/images/M/MV5BNTgzNGE1MTktNzAyZC00ZWYxLTljYTUtNDYxNDE1NGFiNzIzXkEyXkFqcGdeQXVyNDg4MjkzNDk@._V1_.jpg\",\r\n        },\r\n        {\r\n          text: \"Была ли ложка на картинке с вопросом про завтрак?\",\r\n          options: [\"Да\", \"Нет\"],\r\n          answer: \"Нет\",\r\n          image: \"https://pic.rutubelist.ru/video/21/62/216230a4acde4e677dc396832de6c50b.jpg\",\r\n        },\r\n        {\r\n          text: \"Помните день рождения своего отца?\",\r\n          options: [\"Да\", \"Нет\"],\r\n          answer: \"Да\",\r\n          image: \"https://sun9-40.userapi.com/impg/a2vuhBxQUt5-IGoI1i25rN9ZRgeQOcMvLJ0BhQ/7PHF_jv9A8g.jpg?size=1280x947&quality=95&sign=f87c039426a1802ea697ca8b12f41dbb&c_uniq_tag=amtE40_42hqpxK_noX4OfAJGb0z9L0gVAwBhcM\",\r\n        },\r\n        {\r\n          text: \"Какого цвета была куртка на девушке по центру из вопроса про братьев и сестер?\",\r\n          options: [\"Красная\", \"Зеленая\", \"Синяя\"],\r\n          answer: \"Синяя\",\r\n          image: \"https://pic.rutubelist.ru/video/21/62/216230a4acde4e677dc396832de6c50b.jpg\",\r\n        },\r\n        {\r\n          text: \"На картинке с отцом на небе были облака?\",\r\n          options: [\"Да, много\", \"Да, немного\", \"Нет\"],\r\n          answer: \"Да, много\",\r\n          image: \"https://pic.rutubelist.ru/video/21/62/216230a4acde4e677dc396832de6c50b.jpg\",\r\n        },\r\n        {\r\n          text: \"Сколько бабочек было на второй картинке?\",\r\n          options: [\"3\", \"4\", \"5\"],\r\n          answer: \"3\",\r\n          image: \"https://pic.rutubelist.ru/video/21/62/216230a4acde4e677dc396832de6c50b.jpg\",\r\n        },\r\n      ],\r\n      score: 0,\r\n      testCompleted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    currentQuestionText() {\r\n      return this.questions[this.currentQuestion - 1].text;\r\n    },\r\n    currentOptions() {\r\n      return this.questions[this.currentQuestion - 1].options;\r\n    },\r\n    currentImage() {\r\n      return this.questions[this.currentQuestion - 1].image;\r\n    },\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.$emit('test-start');\r\n    },\r\n    checkAnswer(selectedOption) {\r\n      const correctAnswer = this.questions[this.currentQuestion - 1].answer;\r\n      if (selectedOption === correctAnswer) {\r\n        this.score++;\r\n      }\r\n\r\n      if (this.currentQuestion < this.totalQuestions) {\r\n        this.currentQuestion++;\r\n      } else {\r\n        this.testCompleted = true;\r\n        this.$emit('test-complete', this.score, this.totalQuestions);\r\n      }\r\n    },\r\n    restartTest() {\r\n      this.currentQuestion = 1;\r\n      this.score = 0;\r\n      this.testCompleted = false;\r\n      this.$emit('test-start');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.memory-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #3b4ce2;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #3b4ce2;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.image-frame {\r\n  width: 100%;\r\n  max-width: 450px;\r\n  margin: 0 auto 1.5rem;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.question-image {\r\n  width: 100%;\r\n  height: auto;\r\n  display: block;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.answer-options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\n.option-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: white;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #374151;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  text-align: center;\r\n}\r\n\r\n.option-button:hover {\r\n  background-color: #f9fafb;\r\n  border-color: #3b4ce2;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.option-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #2d3ebd;\r\n}\r\n\r\n.action-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .option-button, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n}\r\n</style>","import { render } from \"./MemoryTest.vue?vue&type=template&id=ed9b2f98\"\nimport script from \"./MemoryTest.vue?vue&type=script&lang=js\"\nexport * from \"./MemoryTest.vue?vue&type=script&lang=js\"\n\nimport \"./MemoryTest.vue?vue&type=style&index=0&id=ed9b2f98&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"text-selection-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n            <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n            <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n            <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n            <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест: выделение слов</h2>\r\n        <p>Проверьте свою внимательность и способность находить осмысленные слова в буквенной последовательности.</p>\r\n        \r\n        <div class=\"instruction-box\">\r\n          <h3>Инструкция:</h3>\r\n          <ol>\r\n            <li>В тексте ниже скрыто <strong>{{ totalWords }}</strong> слов.</li>\r\n            <li><strong>Нажимайте на буквы</strong>, чтобы выделить их.</li>\r\n            <li>Найденные слова отобразятся в списке внизу.</li>\r\n            <li>Когда найдете все слова, нажмите \"Завершить тест\".</li>\r\n          </ol>\r\n          <div class=\"example-box\">\r\n            <p>Например, в тексте <strong>\"клодфир<span class=\"example-highlight\">кошка</span>довоапрягл\"</strong> вы можете найти слово <strong>\"кошка\"</strong>, нажав на все её буквы.</p>\r\n          </div>\r\n        </div>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else-if=\"!showResults\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(selectedWords.length / totalWords) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Найдено: {{ selectedWords.length }} из {{ totalWords }}\r\n      </div>\r\n\r\n      <div class=\"text-area\">\r\n        <span\r\n          v-for=\"(char, index) in textChars\"\r\n          :key=\"index\"\r\n          @click=\"selectChar(index)\"\r\n          :class=\"{ 'highlighted': isHighlighted(index) }\"\r\n          class=\"char\"\r\n        >\r\n          {{ char }}\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <h3 class=\"question-text\">Нажимайте на буквы в тексте ниже:</h3>\r\n        \r\n        <div class=\"found-words\">\r\n          <h4>Найденные слова ({{ selectedWords.length }}):</h4>\r\n          <div class=\"word-chips\">\r\n            <span \r\n              v-for=\"(word, index) in selectedWords\" \r\n              :key=\"index\"\r\n              class=\"word-chip\"\r\n            >\r\n              {{ word }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <button @click=\"finishTest\" class=\"action-button\">Завершить тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с результатами -->\r\n    <div v-if=\"showResults\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': selectedWords.length >= totalWords * 0.7 }\">\r\n          <svg v-if=\"selectedWords.length >= totalWords * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ selectedWords.length }}</span>\r\n            <span class=\"score-total\">/{{ totalWords }}</span>\r\n          </div>\r\n          <p class=\"score-label\">найденных слов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"selectedWords.length === totalWords\">Отличный результат! Вы нашли все слова.</p>\r\n          <p v-else-if=\"selectedWords.length >= totalWords * 0.7\">Хороший результат! Вы нашли большинство слов.</p>\r\n          <p v-else-if=\"selectedWords.length >= totalWords * 0.5\">Неплохой результат. Есть потенциал для улучшения.</p>\r\n          <p v-else>Внимательность можно тренировать! Попробуйте еще раз.</p>\r\n        </div>\r\n        \r\n        <div v-if=\"selectedWords.length < totalWords\" class=\"missed-words\">\r\n          <h4>Пропущенные слова:</h4>\r\n          <div class=\"word-chips\">\r\n            <span \r\n              v-for=\"word in missedWords\" \r\n              :key=\"word\"\r\n              class=\"word-chip missed\"\r\n            >\r\n              {{ word }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      text: \"\",\r\n      words: [\"белок\", \"стол\", \"замок\", \"капуста\", \"лимон\", \"книга\", \"дорога\", \"кошка\", \"кит\", \"лес\", \"зебра\",\r\n              \"палка\", \"очаг\", \"жук\", \"овраг\", \"дрова\", \"шапка\", \"норка\", \"солнце\", \"гриб\", \"парта\", \"ложка\", \"дверь\"],\r\n      selectedWords: [],\r\n      totalWords: 23,\r\n      showResults: false,\r\n      highlightedIndices: {},\r\n    };\r\n  },\r\n  computed: {\r\n    textChars() {\r\n      return this.text.split('');\r\n    },\r\n    missedWords() {\r\n      return this.words.filter(word => !this.selectedWords.includes(word));\r\n    }\r\n  },\r\n  created() {\r\n    this.generateTextWithWords();\r\n  },\r\n  methods: {\r\n    generateTextWithWords() {\r\n      const totalLength = 300;\r\n      const randomLetters = Array(totalLength).fill().map(() => this.getRandomLetter());\r\n      const wordPositions = [];\r\n      \r\n      for (const word of this.words) {\r\n        let positioned = false;\r\n        let attempts = 0;\r\n        \r\n        while (!positioned && attempts < 50) {\r\n          const startPos = Math.floor(Math.random() * (totalLength - word.length));\r\n          let canPlace = true;\r\n          \r\n          for (let i = 0; i < word.length; i++) {\r\n            if (wordPositions.includes(startPos + i)) {\r\n                canPlace = false;\r\n                break;\r\n            }\r\n          }\r\n          \r\n          if (canPlace) {\r\n            for (let i = 0; i < word.length; i++) {\r\n              randomLetters[startPos + i] = word.charAt(i);\r\n              wordPositions.push(startPos + i);\r\n            }\r\n            positioned = true;\r\n          }\r\n          attempts++;\r\n        }\r\n      }\r\n      this.text = randomLetters.join('');\r\n    },\r\n    \r\n    getRandomLetter() {\r\n      const letters = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя';\r\n      return letters.charAt(Math.floor(Math.random() * letters.length));\r\n    },\r\n\r\n    selectChar(index) {\r\n      this.highlightedIndices[index] = !this.highlightedIndices[index];\r\n      this.checkWordCompletion();\r\n    },\r\n    \r\n    checkWordCompletion() {\r\n      this.words.forEach(word => {\r\n        const startIndex = this.text.indexOf(word);\r\n        if (startIndex !== -1) {\r\n          const allSelected = [...word].every((char, index) => this.highlightedIndices[startIndex + index]);\r\n          if (allSelected && !this.selectedWords.includes(word)) {\r\n            this.selectedWords.push(word);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    finishTest() {\r\n      this.showResults = true;\r\n      this.$emit('test-complete', this.selectedWords.length, this.totalWords);\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    },\r\n    \r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.selectedWords = [];\r\n      this.showResults = false;\r\n      this.highlightedIndices = {};\r\n      this.$emit('test-start');\r\n    },\r\n\r\n    isHighlighted(index) {\r\n      return this.highlightedIndices[index];\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.text-selection-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #3b4ce2;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 1rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.instruction-box {\r\n  background-color: #f0f4ff;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  text-align: left;\r\n  border-left: 4px solid #3b4ce2;\r\n}\r\n\r\n.instruction-box h3 {\r\n  color: #3b4ce2;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 18px;\r\n}\r\n\r\n.instruction-box ol {\r\n  padding-left: 1.25rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.instruction-box li {\r\n  margin-bottom: 0.5rem;\r\n  color: #4b5563;\r\n}\r\n\r\n.example-box {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin-top: 1rem;\r\n  border: 1px dashed #cbd5e1;\r\n}\r\n\r\n.example-highlight {\r\n  background-color: #d1fae5;\r\n  padding: 0.125rem 0.25rem;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  color: #065f46;\r\n}\r\n\r\n/* Стили экрана с тестом */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #3b4ce2;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  margin: 1rem 0;\r\n  font-size: 16px;\r\n  color: #4b5563;\r\n}\r\n\r\n.text-area {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.char {\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n  font-size: 20px;\r\n}\r\n\r\n.highlighted {\r\n  background-color: #d1fae5;\r\n}\r\n\r\n.question-container {\r\n  padding: 1rem;\r\n}\r\n\r\n.found-words {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.word-chips {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.word-chip {\r\n  background-color: #e0f2fe;\r\n  border-radius: 12px;\r\n  padding: 0.5rem 1rem;\r\n  color: #0d9488;\r\n}\r\n\r\n.missed {\r\n  background-color: #fee2e2;\r\n  color: #b91c1c;\r\n}\r\n</style>","import { render } from \"./TextSelectionTest.vue?vue&type=template&id=46c420a2\"\nimport script from \"./TextSelectionTest.vue?vue&type=script&lang=js\"\nexport * from \"./TextSelectionTest.vue?vue&type=script&lang=js\"\n\nimport \"./TextSelectionTest.vue?vue&type=style&index=0&id=46c420a2&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"sum-digits-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M4 7l4-2.5 4 2.5 4-2.5 4 2.5\"></path>\r\n            <path d=\"M4 12l4-2.5 4 2.5 4-2.5 4 2.5\"></path>\r\n            <path d=\"M4 17l4-2.5 4 2.5 4-2.5 4 2.5\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на суммирование цифр</h2>\r\n        <p>Проверьте свою математическую скорость и точность. Вам нужно будет сложить отдельные цифры в каждом ряду и ввести результат.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Основной тест -->\r\n    <div v-else-if=\"!resultsVisible\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: '100%' }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Задание: сложите цифры в каждом ряду\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <div class=\"rows\">\r\n          <div v-for=\"(row, index) in rows\" :key=\"index\" class=\"row\">\r\n            <span class=\"number-row\">{{ formatRow(row) }}</span>\r\n            <input\r\n              type=\"number\"\r\n              v-model.number=\"userAnswers[index]\"\r\n              class=\"answer-input\"\r\n              placeholder=\"Ответ\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <button @click=\"submitAnswers\" class=\"action-button submit-button\">Готово</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран результатов -->\r\n    <div v-if=\"resultsVisible\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': correctAnswers >= 4 }\">\r\n          <svg v-if=\"correctAnswers >= 4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ correctAnswers }}</span>\r\n            <span class=\"score-total\">/{{ rows.length }}</span>\r\n          </div>\r\n          <p class=\"score-label\">правильных ответов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"correctAnswers === rows.length\">Отлично! Вы безупречно справились со всеми заданиями.</p>\r\n          <p v-else-if=\"correctAnswers >= rows.length * 0.7\">Хороший результат! Вы уверенно справляетесь с арифметическими вычислениями.</p>\r\n          <p v-else-if=\"correctAnswers >= rows.length * 0.5\">Неплохой результат. Продолжайте тренировать ваши навыки счета.</p>\r\n          <p v-else>Математические навыки можно улучшить регулярными тренировками. Попробуйте еще раз!</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      rows: [],\r\n      userAnswers: [],\r\n      correctAnswers: 0,\r\n      resultsVisible: false,\r\n      testStarted: false\r\n    };\r\n  },\r\n  methods: {\r\n    formatRow(row) {\r\n      // Добавляем пробелы между цифрами для лучшей читаемости\r\n      return row.split('').join(' ');\r\n    },\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.generateRows();\r\n      this.$emit('test-start');\r\n    },\r\n    generateRows() {\r\n      // Уменьшаем количество цифр в ряду до 6-8 и количество рядов до 5\r\n      this.rows = Array.from({ length: 5 }, () =>\r\n        Array.from({ length: 6 + Math.floor(Math.random() * 3) }, () => \r\n          Math.floor(Math.random() * 10)\r\n        ).join(\"\")\r\n      );\r\n      this.userAnswers = Array(this.rows.length).fill(null);\r\n    },\r\n    submitAnswers() {\r\n      this.correctAnswers = this.rows.reduce((count, row, index) => {\r\n        const correctSum = row\r\n          .split(\"\")\r\n          .reduce((sum, digit) => sum + parseInt(digit), 0);\r\n        return count + (this.userAnswers[index] === correctSum ? 1 : 0);\r\n      }, 0);\r\n      this.resultsVisible = true;\r\n      this.$emit('test-complete', this.correctAnswers, 5);\r\n    },\r\n    restartTest() {\r\n      this.generateRows();\r\n      this.resultsVisible = false;\r\n      this.correctAnswers = 0;\r\n      this.$emit('test-start');\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.sum-digits-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #3b4ce2;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #3b4ce2;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.rows {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.number-row {\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  letter-spacing: 0.2rem;\r\n  color: #1f2937;\r\n}\r\n\r\n.answer-input {\r\n  width: 80px;\r\n  padding: 0.75rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 8px;\r\n  font-size: 1.25rem;\r\n  text-align: center;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.answer-input:focus {\r\n  outline: none;\r\n  border-color: #3b4ce2;\r\n  box-shadow: 0 0 0 2px rgba(59, 76, 226, 0.2);\r\n}\r\n\r\n.submit-button {\r\n  margin-top: 1rem;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #2d3ebd;\r\n}\r\n\r\n.action-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .number-row {\r\n    font-size: 1.25rem;\r\n  }\r\n  \r\n  .answer-input {\r\n    width: 60px;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n  }\r\n}\r\n</style>","import { render } from \"./SumDigitsTest.vue?vue&type=template&id=8b764fb8\"\nimport script from \"./SumDigitsTest.vue?vue&type=script&lang=js\"\nexport * from \"./SumDigitsTest.vue?vue&type=script&lang=js\"\n\nimport \"./SumDigitsTest.vue?vue&type=style&index=0&id=8b764fb8&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"attention-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на сравнение строк</h2>\r\n        <p>Проверьте свою внимательность при сравнении строк текста. Вам нужно определить, одинаковые ли строки или они отличаются.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else-if=\"!isTestFinished\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentQuestion / totalQuestions) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Вопрос {{ currentQuestion + 1 }}/{{ totalQuestions }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <h3 class=\"question-text\">Сравните две строки и определите, одинаковые ли они.</h3>\r\n        \r\n        <div class=\"string-comparison\">\r\n          <div class=\"string-box\">\r\n            <div class=\"string-label\">Строка 1:</div>\r\n            <div class=\"string-content\">{{ currentPair.string1 }}</div>\r\n          </div>\r\n          \r\n          <div class=\"string-box\">\r\n            <div class=\"string-label\">Строка 2:</div>\r\n            <div class=\"string-content\">{{ currentPair.string2 }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"answer-options\">\r\n          <button @click=\"checkAnswer(true)\" class=\"option-button\">Одинаковые</button>\r\n          <button @click=\"checkAnswer(false)\" class=\"option-button\">Не одинаковые</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с результатами -->\r\n    <div v-if=\"isTestFinished\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': correctAnswers >= totalQuestions * 0.7 }\">\r\n          <svg v-if=\"correctAnswers >= totalQuestions * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ correctAnswers }}</span>\r\n            <span class=\"score-total\">/{{ totalQuestions }}</span>\r\n          </div>\r\n          <p class=\"score-label\">правильных ответов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"correctAnswers === totalQuestions\">Отличный результат! Вы очень внимательны к деталям.</p>\r\n          <p v-else-if=\"correctAnswers >= totalQuestions * 0.7\">Хороший результат! Ваша внимательность на высоком уровне.</p>\r\n          <p v-else-if=\"correctAnswers >= totalQuestions * 0.5\">Неплохой результат. Есть потенциал для улучшения внимательности.</p>\r\n          <p v-else>Внимательность можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      currentQuestion: 0,\r\n      correctAnswers: 0,\r\n      isTestFinished: false,\r\n      questions: [\r\n        { string1: \"ууйцууу\", string2: \"ууйцууу\" },\r\n        { string1: \"ооОооОооО\", string2: \"ооОооОоО\" },\r\n        { string1: \"вувовоувввв\", string2: \"вувовоуввв\" },\r\n        { string1: \"ГгГОрВвввыы\", string2: \"ГгГОрВвввыы\" },\r\n        { string1: \"zzZzZZZzzzZzZZz\", string2: \"zzZzZZZzzZzZZz\" },\r\n        { string1: \"Оваовоаува\", string2: \"Оваовоаува\" },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    currentPair() {\r\n      return this.questions[this.currentQuestion];\r\n    },\r\n    totalQuestions() {\r\n      return this.questions.length;\r\n    },\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.currentQuestion = 0;\r\n      this.correctAnswers = 0;\r\n      this.isTestFinished = false;\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    checkAnswer(isSame) {\r\n      const areEqual = this.currentPair.string1 === this.currentPair.string2;\r\n      if (isSame === areEqual) {\r\n        this.correctAnswers++;\r\n      }\r\n      \r\n      this.currentQuestion++;\r\n      if (this.currentQuestion >= this.totalQuestions) {\r\n        this.finishTest();\r\n      }\r\n    },\r\n    \r\n    finishTest() {\r\n      this.isTestFinished = true;\r\n      this.$emit('test-complete', this.correctAnswers, this.totalQuestions);\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.attention-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0ecfc;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #8b5cf6;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #8b5cf6;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #8b5cf6;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.string-comparison {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.string-box {\r\n  background-color: #f9f7ff;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #e2d9fc;\r\n}\r\n\r\n.string-label {\r\n  font-size: 14px;\r\n  color: #8b5cf6;\r\n  font-weight: 600;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.string-content {\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 20px;\r\n  color: #1f2937;\r\n  word-break: break-all;\r\n  line-height: 1.6;\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  padding: 0.75rem;\r\n  border: 1px solid #e5e7eb;\r\n}\r\n\r\n.answer-options {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.option-button {\r\n  padding: 0.75rem 1.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  min-width: 150px;\r\n}\r\n\r\n.option-button:first-child {\r\n  background-color: #ecfdf5;\r\n  color: #059669;\r\n  border-color: #a7f3d0;\r\n}\r\n\r\n.option-button:last-child {\r\n  background-color: #fef2f2;\r\n  color: #dc2626;\r\n  border-color: #fecaca;\r\n}\r\n\r\n.option-button:first-child:hover {\r\n  background-color: #d1fae5;\r\n}\r\n\r\n.option-button:last-child:hover {\r\n  background-color: #fee2e2;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0ecfc;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #8b5cf6;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9f7ff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #8b5cf6;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #7c3aed;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .answer-options {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n  \r\n  .option-button {\r\n    width: 100%;\r\n    min-width: auto;\r\n  }\r\n  \r\n  .string-content {\r\n    font-size: 16px;\r\n  }\r\n}\r\n</style>","import { render } from \"./SecondTest.vue?vue&type=template&id=0c121592&scoped=true\"\nimport script from \"./SecondTest.vue?vue&type=script&lang=js\"\nexport * from \"./SecondTest.vue?vue&type=script&lang=js\"\n\nimport \"./SecondTest.vue?vue&type=style&index=0&id=0c121592&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0c121592\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"concentration-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на концентрацию внимания</h2>\r\n        <p>Проверьте свою способность к длительной концентрации внимания. Вам будут показаны изображения, на которых нужно определить правильный ответ.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else-if=\"currentQuestion < questions.length\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentQuestion / questions.length) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Вопрос {{ currentQuestion + 1 }}/{{ questions.length }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <h3 class=\"question-text\">{{ currentQuestionData.question }}</h3>\r\n        \r\n        <div class=\"question-image-container\">\r\n          <img :src=\"currentQuestionData.image\" alt=\"Вопрос\" class=\"question-image\" />\r\n        </div>\r\n        \r\n        <div class=\"answer-options\">\r\n          <button \r\n            v-for=\"(answer, index) in currentQuestionData.answers\" \r\n            :key=\"index\"\r\n            @click=\"checkAnswer(answer)\" \r\n            class=\"option-button\"\r\n          >\r\n            {{ answer.text }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с результатами -->\r\n    <div v-else class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': score >= questions.length * 0.7 }\">\r\n          <svg v-if=\"score >= questions.length * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ score }}</span>\r\n            <span class=\"score-total\">/{{ questions.length }}</span>\r\n          </div>\r\n          <p class=\"score-label\">правильных ответов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"score === questions.length\">Отличный результат! Ваша концентрация внимания превосходна.</p>\r\n          <p v-else-if=\"score >= questions.length * 0.7\">Хороший результат! Ваша концентрация внимания на высоком уровне.</p>\r\n          <p v-else-if=\"score >= questions.length * 0.5\">Неплохой результат. Есть потенциал для улучшения концентрации.</p>\r\n          <p v-else>Концентрацию внимания можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      currentQuestion: 0,\r\n      score: 0,\r\n      questions: [\r\n        {\r\n          image: 'https://i.imgur.com/zZTSx7k.jpeg',\r\n          question: \"Укажите правильный ответ\",\r\n          answers: [\r\n            { text: '3', correct: false },\r\n            { text: '5', correct: true },\r\n            { text: '4', correct: false },\r\n            { text: '2', correct: false },\r\n          ],\r\n        },\r\n        {\r\n          image: 'https://i.imgur.com/Em451ow.jpeg',\r\n          question: \"Укажите правильный ответ\",\r\n          answers: [\r\n            { text: '3', correct: false },\r\n            { text: '4', correct: true },\r\n            { text: '5', correct: false },\r\n            { text: '6', correct: false },\r\n          ],\r\n        },\r\n        {\r\n          image: 'https://i.imgur.com/tkAbQey.jpeg',\r\n          question: \"Укажите правильный ответ\",\r\n          answers: [\r\n            { text: '3', correct: false },\r\n            { text: '1', correct: false },\r\n            { text: '2', correct: true },\r\n            { text: '4', correct: false },\r\n          ],\r\n        },\r\n        {\r\n          image: 'https://i.imgur.com/G2TnE7W.jpeg',\r\n          question: \"Укажите правильный ответ\",\r\n          answers: [\r\n            { text: '8', correct: false },\r\n            { text: '7', correct: true },\r\n            { text: '5', correct: false },\r\n            { text: '6', correct: false },\r\n          ],\r\n        },\r\n        {\r\n          image: 'https://i.imgur.com/sfYYtqK.jpeg',\r\n          question: \"Укажите правильный ответ\",\r\n          answers: [\r\n            { text: '4', correct: false },\r\n            { text: '2', correct: false },\r\n            { text: '1', correct: false },\r\n            { text: '3', correct: true },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    currentQuestionData() {\r\n      return this.questions[this.currentQuestion];\r\n    },\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.currentQuestion = 0;\r\n      this.score = 0;\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    checkAnswer(answer) {\r\n      if (answer.correct) {\r\n        this.score++;\r\n      }\r\n      this.nextQuestion();\r\n    },\r\n    \r\n    nextQuestion() {\r\n      this.currentQuestion++;\r\n      if (this.currentQuestion >= this.questions.length) {\r\n        this.$emit('test-complete', this.score, this.questions.length);\r\n      }\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.concentration-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0ecfc;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #8b5cf6;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #8b5cf6;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #8b5cf6;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.question-image-container {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin-bottom: 1.5rem;\r\n  background-color: #f9f7ff;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.question-image {\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 4px;\r\n  display: block;\r\n}\r\n\r\n.answer-options {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem;\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n\r\n.option-button {\r\n  padding: 0.875rem 1rem;\r\n  background-color: #f9f7ff;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #1f2937;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  text-align: center;\r\n}\r\n\r\n.option-button:hover {\r\n  background-color: #f0ecfc;\r\n  border-color: #8b5cf6;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0ecfc;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #8b5cf6;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9f7ff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #8b5cf6;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #7c3aed;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .answer-options {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>","import { render } from \"./ThirdTest.vue?vue&type=template&id=991faab8&scoped=true\"\nimport script from \"./ThirdTest.vue?vue&type=script&lang=js\"\nexport * from \"./ThirdTest.vue?vue&type=script&lang=js\"\n\nimport \"./ThirdTest.vue?vue&type=style&index=0&id=991faab8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-991faab8\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"memory-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n          <rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\"></rect>\r\n          <path d=\"M8 2v4\"></path>\r\n          <path d=\"M16 2v4\"></path>\r\n          <circle cx=\"12\" cy=\"11\" r=\"3\"></circle>\r\n          <path d=\"M12 14v4\"></path>\r\n        </svg>\r\n        </div>\r\n        <h2>Тест на запоминание чисел</h2>\r\n        <p>Проверьте свою кратковременную память. Запомните числа на экране, затем введите их по порядку.</p>\r\n        \r\n        <div class=\"instruction-box\">\r\n          <h3>Как проходить тест:</h3>\r\n          <ol>\r\n            <li>Вам будут показаны числа, которые нужно запомнить</li>\r\n            <li>Время на запоминание ограничено</li>\r\n            <li>Сложность будет постепенно повышаться</li>\r\n            <li>После исчезновения чисел, введите их в том же порядке</li>\r\n          </ol>\r\n        </div>\r\n        \r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentLevel / maxLevels) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Уровень {{ currentLevel }}/{{ maxLevels }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <div v-if=\"showNumbers\" class=\"memory-phase\">\r\n          <h3 class=\"phase-title\">Запомните эти числа</h3>\r\n          <div class=\"numbers-grid\" :class=\"getGridClass()\">\r\n            <div v-for=\"(number, index) in visibleNumbers\" :key=\"index\" class=\"number-item\">\r\n              {{ number }}\r\n            </div>\r\n          </div>\r\n          <div class=\"timer-display\">\r\n            <p>Оставшееся время: {{ remainingTime }} сек</p>\r\n          </div>\r\n        </div>\r\n        <div v-else class=\"recall-phase\">\r\n          <h3 class=\"phase-title\">Введите запомненные числа</h3>\r\n          <div class=\"input-grid\" :class=\"getGridClass()\">\r\n            <div v-for=\"(_, index) in currentLevelNumbers\" :key=\"'input-' + index\" class=\"input-container\">\r\n              <input\r\n                type=\"number\"\r\n                v-model=\"inputs[index]\"\r\n                placeholder=\"?\"\r\n                class=\"number-input\"\r\n                inputmode=\"numeric\"\r\n                pattern=\"[0-9]*\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button @click=\"checkAnswers\" class=\"action-button\">Проверить</button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Результаты уровня -->\r\n      <div v-if=\"showLevelResult\" class=\"level-result\">\r\n        <div class=\"level-result-content\">\r\n          <div class=\"result-icon\" :class=\"{ 'success': lastLevelSuccess }\">\r\n            <svg v-if=\"lastLevelSuccess\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n              <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n            </svg>\r\n            <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n              <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\r\n              <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\r\n            </svg>\r\n          </div>\r\n          \r\n          <h3 class=\"level-result-title\">\r\n            {{ lastLevelSuccess ? 'Правильно!' : 'Попробуй ещё раз!' }}\r\n          </h3>\r\n          <div class=\"numbers-comparison\">\r\n            <div class=\"original-numbers\">\r\n              <h4>Исходные числа:</h4>\r\n              <p>{{ currentLevelNumbers.join(', ') }}</p>\r\n            </div>\r\n            \r\n            <div class=\"your-answer\">\r\n              <h4>Ваш ответ:</h4>\r\n              <p>{{ formatInputs() }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <button \r\n            v-if=\"currentLevel < maxLevels && lastLevelSuccess\" \r\n            @click=\"nextLevel\" \r\n            class=\"action-button\"\r\n          >\r\n            Следующий уровень\r\n          </button>\r\n          <template v-else-if=\"currentLevel < maxLevels && !lastLevelSuccess && allowContinue\">\r\n          <button \r\n            @click=\"continueTest\" \r\n            class=\"action-button\"\r\n          >\r\n            Продолжить тест\r\n        </button>\r\n        <button \r\n            @click=\"retryLevel\" \r\n            class=\"retry-button\"\r\n            >\r\n              Повторить уровень\r\n        </button>\r\n        </template>\r\n        <button \r\n        v-else-if=\"currentLevel < maxLevels && !lastLevelSuccess\" \r\n        @click=\"retryLevel\" \r\n        class=\"retry-button\"\r\n        >\r\n          Повторить уровень\r\n      </button>\r\n        <button \r\n            v-else \r\n            @click=\"finishTest\" \r\n            class=\"action-button\"\r\n          >\r\n            Завершить тест\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с итоговыми результатами -->\r\n    <div v-if=\"gameOver\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': score >= (maxLevels * 0.7) }\">\r\n          <svg v-if=\"score >= (maxLevels * 0.7)\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ score }}</span>\r\n            <span class=\"score-total\">/{{ maxLevels }}</span>\r\n          </div>\r\n          <p class=\"score-label\">пройденных уровней</p>\r\n        </div>\r\n        \r\n        <div class=\"memory-span\">\r\n          <h3>Объем вашей памяти:</h3>\r\n          <p class=\"memory-span-value\">{{ getMemorySpan() }}</p>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"score >= maxLevels * 0.9\">Отличный результат! У вас исключительная память.</p>\r\n          <p v-else-if=\"score >= maxLevels * 0.7\">Хороший результат! Ваша память работает отлично.</p>\r\n          <p v-else-if=\"score >= maxLevels * 0.5\">Неплохой результат. Есть потенциал для улучшения.</p>\r\n          <p v-else>Память можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      showNumbers: true,\r\n      showLevelResult: false,\r\n      lastLevelSuccess: false,\r\n      gameOver: false,\r\n      currentLevel: 1,\r\n      maxLevels: 8,\r\n      score: 0,\r\n      currentLevelNumbers: [],\r\n      inputs: [],\r\n      remainingTime: 0,\r\n      timer: null,\r\n      attempts: 0,\r\n      allowContinue: false,\r\n    };\r\n  },\r\n  \r\n  computed: {\r\n    visibleNumbers() {\r\n      return this.currentLevelNumbers;\r\n    }\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.gameOver = false;\r\n      this.showLevelResult = false;\r\n      this.currentLevel = 1;\r\n      this.score = 0;\r\n      this.attempts = 0;\r\n      this.generateLevel();\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    generateLevel() {\r\n      // Определяем количество чисел в зависимости от уровня\r\n      // Начинаем с 3 чисел и постепенно увеличиваем\r\n      const numbersCount = Math.min(2 + this.currentLevel, 10);\r\n      \r\n      // Определяем диапазон чисел в зависимости от уровня\r\n      // Уровни 1-3: однозначные числа (1-9)\r\n      // Уровни 4-6: двузначные числа до 50\r\n      // Уровни 7+: двузначные числа до 99\r\n      let maxNumber = 9;\r\n      if (this.currentLevel >= 4 && this.currentLevel <= 6) {\r\n        maxNumber = 50;\r\n      } else if (this.currentLevel >= 7) {\r\n        maxNumber = 99;\r\n      }\r\n      \r\n      // Генерируем новые случайные числа\r\n      this.currentLevelNumbers = Array(numbersCount).fill(0).map(() => {\r\n        return Math.floor(Math.random() * maxNumber) + 1;\r\n      });\r\n      \r\n      // Сбрасываем ввод\r\n      this.inputs = Array(numbersCount).fill(null);\r\n      \r\n      // Показываем числа\r\n      this.showNumbers = true;\r\n      this.showLevelResult = false;\r\n      \r\n      // Запускаем таймер для запоминания\r\n      // Время увеличивается с количеством чисел\r\n      this.remainingTime = Math.min(5 + numbersCount, 15);\r\n      this.startTimer();\r\n    },\r\n    \r\n    startTimer() {\r\n      clearInterval(this.timer);\r\n      this.timer = setInterval(() => {\r\n        this.remainingTime--;\r\n        if (this.remainingTime <= 0) {\r\n          clearInterval(this.timer);\r\n          this.showNumbers = false;\r\n        }\r\n      }, 1000);\r\n    },\r\n    \r\n    checkAnswers() {\r\n      const correct = this.currentLevelNumbers.every((num, index) => {\r\n        return num === Number(this.inputs[index]);\r\n      });\r\n      let errorCount = 0;\r\n      for (let i = 0; i < this.currentLevelNumbers.length; i++) {\r\n        if (this.currentLevelNumbers[i] !== Number(this.inputs[i])) {\r\n          errorCount++;\r\n        }\r\n      }\r\n      this.lastLevelSuccess = correct;\r\n      \r\n      if (!correct && this.currentLevel >= 4 && errorCount <= 2) {\r\n        this.allowContinue = true;\r\n      } else {\r\n        this.allowContinue = false;\r\n      }\r\n      \r\n      this.showLevelResult = true;\r\n      if (correct) {\r\n        this.score = this.currentLevel;\r\n      }\r\n      this.attempts++;\r\n    },\r\n    \r\n    formatInputs() {\r\n      return this.inputs.map(input => input === null || input === '' ? '?' : input).join(', ');\r\n    },\r\n    \r\n    nextLevel() {\r\n      this.allowContinue = false; // Сбрасываем флаг\r\n      this.currentLevel++;\r\n      this.generateLevel();\r\n    },\r\n\r\n    continueTest() {\r\n      this.allowContinue = false; // Сбрасываем флаг\r\n      this.currentLevel++;\r\n      this.generateLevel();\r\n    },\r\n    \r\n    retryLevel() {\r\n      this.allowContinue = false;\r\n      this.generateLevel();\r\n    },\r\n    \r\n    finishTest() {\r\n      this.gameOver = true;\r\n      this.$emit('test-complete', this.score, this.maxLevels);\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    },\r\n    \r\n    getGridClass() {\r\n      // Определяем количество колонок в зависимости от количества чисел\r\n      const count = this.currentLevelNumbers.length;\r\n      if (count <= 4) return 'grid-cols-2';\r\n      if (count <= 9) return 'grid-cols-3';\r\n      return 'grid-cols-4';\r\n    },\r\n    \r\n    getMemorySpan() {\r\n      if (this.score === 0) return \"Менее 3 чисел\";\r\n      return `${this.score + 2} ${this.getNumberLabel(this.score + 2)}`;\r\n    },\r\n    \r\n    getNumberLabel(number) {\r\n      // Правильное склонение слова \"число\"\r\n      const lastDigit = number % 10;\r\n      const lastTwoDigits = number % 100;\r\n      \r\n      if (lastDigit === 1 && lastTwoDigits !== 11) {\r\n        return \"число\";\r\n      } else if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\r\n        return \"числа\";\r\n      } else {\r\n        return \"чисел\";\r\n      }\r\n    }\r\n  },\r\n  beforeUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.memory-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #e8f4f2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #14b8a6;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #14b8a6;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 1rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.instruction-box {\r\n  background-color: #e8f4f2;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  text-align: left;\r\n  border-left: 4px solid #14b8a6;\r\n}\r\n\r\n.instruction-box h3 {\r\n  color: #14b8a6;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 18px;\r\n}\r\n\r\n.instruction-box ol {\r\n  padding-left: 1.25rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.instruction-box li {\r\n  margin-bottom: 0.5rem;\r\n  color: #4b5563;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #14b8a6;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n  font-weight: 600;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.phase-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.numbers-grid, .input-grid {\r\n  display: grid;\r\n  gap: 12px;\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n\r\n.grid-cols-2 {\r\n  grid-template-columns: repeat(2, 1fr);\r\n}\r\n\r\n.grid-cols-3 {\r\n  grid-template-columns: repeat(3, 1fr);\r\n}\r\n\r\n.grid-cols-4 {\r\n  grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n.number-item {\r\n  background-color: #f3f9f8;\r\n  border: 1px solid #a7e1db;\r\n  color: #14b8a6;\r\n  padding: 15px;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.input-container {\r\n  width: 100%;\r\n}\r\n\r\n.number-input {\r\n  width: 100%;\r\n  padding: 14px 10px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 8px;\r\n  color: #1f2937;\r\n  background-color: white;\r\n  outline: none;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.number-input:focus {\r\n  border-color: #14b8a6;\r\n  box-shadow: 0 0 0 3px rgba(20, 184, 166, 0.2);\r\n}\r\n\r\n.timer-display {\r\n  margin-top: 1rem;\r\n  font-size: 16px;\r\n  color: #4b5563;\r\n  font-weight: 500;\r\n  background-color: #f3f9f8;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #a7e1db;\r\n}\r\n\r\n/* Стили для показа результатов по уровню */\r\n.level-result {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 100;\r\n}\r\n\r\n.level-result-content {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  max-width: 500px;\r\n  width: 90%;\r\n  padding: 2rem;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.result-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 64px;\r\n  height: 64px;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.result-icon.success {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.result-icon:not(.success) {\r\n  background-color: #fee2e2;\r\n  color: #ef4444;\r\n}\r\n\r\n.level-result-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  margin-bottom: 1.5rem;\r\n  color: #1f2937;\r\n}\r\n\r\n.numbers-comparison {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n  background-color: #f9fafb;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.original-numbers, .your-answer {\r\n  padding: 0.5rem;\r\n}\r\n\r\n.original-numbers h4, .your-answer h4 {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #6b7280;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.original-numbers p, .your-answer p {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #1f2937;\r\n}\r\n\r\n.retry-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #f3f4f6;\r\n  color: #1f2937;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.retry-button:hover {\r\n  background-color: #e5e7eb;\r\n  border-color: #9ca3af;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 100;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n  padding: 2rem;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f3f9f8;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #14b8a6;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.memory-span {\r\n  margin-bottom: 1.5rem;\r\n  padding: 1rem;\r\n  background-color: #f3f9f8;\r\n  border-radius: 8px;\r\n  border: 1px solid #a7e1db;\r\n}\r\n\r\n.memory-span h3 {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.memory-span-value {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #14b8a6;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили для основных кнопок */\r\n.action-button {\r\n  padding: 0.75rem 1.5rem; /* Увеличенные отступы */\r\n  background-color: #14b8a6; /* Цвет фона */\r\n  color: white; /* Цвет текста */\r\n  border: none; /* Убираем границу */\r\n  border-radius: 8px; /* Закругленные углы */\r\n  font-size: 16px; /* Размер текста */\r\n  font-weight: 500; /* Жирность текста */\r\n  cursor: pointer; /* Курсор при наведении */\r\n  transition: background-color 0.2s ease; /* Плавный переход */\r\n  margin-top: 1rem; /* Отступ между кнопками */\r\n  width: 100%; /* Ширина кнопки */\r\n  max-width: 200px; /* Максимальная ширина */\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #0d9488; /* Цвет при наведении */\r\n}\r\n\r\n.action-button:active {\r\n  background-color: #0c7a73; /* Цвет при нажатии */\r\n}\r\n\r\n/* Стили для кнопки повтора */\r\n.retry-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #f3f4f6; /* Светлый фон */\r\n  color: #1f2937; /* Темный текст */\r\n  border: 1px solid #d1d5db; /* Граница */\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n  max-width: 200px;\r\n}\r\n\r\n.retry-button:hover {\r\n  background-color: #e5e7eb; /* Цвет при наведении */\r\n  border-color: #9ca3af;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title, .level-result-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .phase-title, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .numbers-grid, .input-grid {\r\n    gap: 8px;\r\n  }\r\n  \r\n  .number-item {\r\n    padding: 10px;\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .number-input {\r\n    padding: 10px 8px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .memory-span-value {\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .instruction-box {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .instruction-box h3 {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .instruction-box ol {\r\n    padding-left: 1rem;\r\n  }\r\n  \r\n  .numbers-comparison {\r\n    padding: 0.75rem;\r\n  }\r\n  \r\n  .level-result-content {\r\n    padding: 1.5rem;\r\n  }\r\n}\r\n</style>","import { render } from \"./FourthTest.vue?vue&type=template&id=0743f9bd\"\nimport script from \"./FourthTest.vue?vue&type=script&lang=js\"\nexport * from \"./FourthTest.vue?vue&type=script&lang=js\"\n\nimport \"./FourthTest.vue?vue&type=style&index=0&id=0743f9bd&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"stroop-test\">\r\n    <!-- Экран с правилами -->\r\n    <div v-if=\"showRules\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест Струпа</h2>\r\n        <p>В этом тесте вам будут показаны названия цветов, написанные разными цветами. Ваша задача: выбрать цвет, <strong>которым написано слово</strong>, а не тот цвет, который обозначает само слово.</p>\r\n        \r\n        <div class=\"test-example\">\r\n          <h3>Пример:</h3>\r\n          <p class=\"example-text\" style=\"color: blue; font-size: 24px; font-weight: bold;\">Красный</p>\r\n          <p>В этом примере правильный ответ: <strong>Синий</strong>, так как слово написано синим цветом, хотя само слово обозначает \"красный\".</p>\r\n        </div>\r\n        \r\n        <p>Тест состоит из 15 заданий. Старайтесь отвечать быстро и точно.</p>\r\n        <button class=\"action-button\" @click=\"startTest\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else-if=\"currentQuestion < questions.length && !isTimeUp\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentQuestion / questions.length) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Вопрос {{ currentQuestion + 1 }} из {{ questions.length }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <p class=\"stroop-word\" :style=\"{ color: questions[currentQuestion].colorValue }\">\r\n          {{ questions[currentQuestion].word }}\r\n        </p>\r\n        \r\n        <h3 class=\"question-text\">Выберите ЦВЕТ, которым написано слово:</h3>\r\n        \r\n        <div class=\"stroop-options\">\r\n          <button \r\n            v-for=\"(colorName, index) in colors\" \r\n            :key=\"colorName\" \r\n            @click=\"submitAnswer(colorValues[index])\"\r\n            class=\"option-button\"\r\n          >\r\n            {{ colorName }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с результатами -->\r\n    <div v-else class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': score >= 70 }\">\r\n          <svg v-if=\"score >= 70\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста Струпа</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ score }}</span>\r\n            <span class=\"score-label-small\">%</span>\r\n          </div>\r\n          <p class=\"score-label\">правильных ответов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-stats\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Правильные ответы:</span>\r\n            <span class=\"stat-value\">{{ correctAnswers }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Всего вопросов:</span>\r\n            <span class=\"stat-value\">{{ questions.length }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"score >= 90\">Отличный результат! У вас исключительная способность игнорировать отвлекающие стимулы.</p>\r\n          <p v-else-if=\"score >= 70\">Хороший результат! Ваша концентрация внимания выше среднего.</p>\r\n          <p v-else-if=\"score >= 50\">Неплохой результат. Есть потенциал для улучшения концентрации внимания.</p>\r\n          <p v-else>Концентрацию внимания можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <div class=\"action-buttons\">\r\n          <button @click=\"retryTest\" class=\"action-button\">Пройти тест снова</button>\r\n          <button @click=\"showResultsTable = !showResultsTable\" class=\"secondary-button\">\r\n            {{ showResultsTable ? 'Скрыть детали' : 'Показать детали' }}\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- Таблица с результатами -->\r\n        <div v-if=\"showResultsTable\" class=\"results-table-container\">\r\n          <table class=\"results-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>№</th>\r\n                <th>Слово</th>\r\n                <th>Цвет слова</th>\r\n                <th>Ваш ответ</th>\r\n                <th>Результат</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(question, index) in questionsWithAnswers\" :key=\"index\">\r\n                <td>{{ index + 1 }}</td>\r\n                <td>{{ question.word }}</td>\r\n                <td>{{ question.colorName }}</td>\r\n                <td>{{ getColorNameByValue(question.userAnswer) }}</td>\r\n                <td>\r\n                  <span :class=\"{ 'correct': question.isCorrect, 'incorrect': !question.isCorrect }\">\r\n                    {{ question.isCorrect ? '✓' : '✗' }}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showRules: true,\r\n      currentQuestion: 0,\r\n      words: ['Красный', 'Зеленый', 'Синий', 'Желтый', 'Фиолетовый'],\r\n      colorValues: ['red', 'green', 'blue', 'yellow', 'purple'],\r\n      colors: ['Красный', 'Зеленый', 'Синий', 'Желтый', 'Фиолетовый'],\r\n      questions: [],\r\n      answers: [],\r\n      isTimeUp: false,\r\n      showResultsTable: false,\r\n      questionsWithAnswers: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.generateQuestions();\r\n  },\r\n  computed: {\r\n    correctAnswers() {\r\n      return this.answers.filter((answer, index) => answer === this.questions[index]?.colorValue).length;\r\n    },\r\n    score() {\r\n      return this.answers.length === 0 ? 0 : Math.round((this.correctAnswers / this.answers.length) * 100);\r\n    },\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.showRules = false;\r\n      this.currentQuestion = 0;\r\n      this.answers = [];\r\n      this.questionsWithAnswers = [];\r\n      this.isTimeUp = false;\r\n      this.showResultsTable = false;\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    generateQuestions() {\r\n      const questions = [];\r\n      for (let i = 0; i < 15; i++) {\r\n        const word = this.words[Math.floor(Math.random() * this.words.length)];\r\n        let colorIndex = Math.floor(Math.random() * this.colorValues.length);\r\n        let colorValue = this.colorValues[colorIndex];\r\n        \r\n        // Проверяем, чтобы цвет текста не совпадал с его значением\r\n        while (colorValue === this.getColorForWord(word)) {\r\n          colorIndex = Math.floor(Math.random() * this.colorValues.length);\r\n          colorValue = this.colorValues[colorIndex];\r\n        } \r\n        \r\n        questions.push({ \r\n          word, \r\n          colorValue,\r\n          colorName: this.colors[colorIndex] \r\n        });\r\n      }\r\n      this.questions = this.shuffleQuestions(questions);\r\n    },\r\n    \r\n    getColorForWord(word) {\r\n      const index = this.words.indexOf(word);\r\n      if (index !== -1) {\r\n        return this.colorValues[index];\r\n      }\r\n      return '';\r\n    },\r\n    \r\n    getColorNameByValue(colorValue) {\r\n      const index = this.colorValues.indexOf(colorValue);\r\n      if (index !== -1) {\r\n        return this.colors[index];\r\n      }\r\n      return 'Неизвестно';\r\n    },\r\n    \r\n    shuffleQuestions(questions) {\r\n      for (let i = questions.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [questions[i], questions[j]] = [questions[j], questions[i]];\r\n      }\r\n      return questions;\r\n    },\r\n    \r\n    submitAnswer(color) {\r\n      // Сохраняем ответ и информацию для таблицы результатов\r\n      this.answers.push(color);\r\n      \r\n      // Сохраняем детали для таблицы результатов\r\n      this.questionsWithAnswers.push({\r\n        word: this.questions[this.currentQuestion].word,\r\n        colorName: this.getColorNameByValue(this.questions[this.currentQuestion].colorValue),\r\n        userAnswer: color,\r\n        isCorrect: color === this.questions[this.currentQuestion].colorValue\r\n      });\r\n      \r\n      this.currentQuestion++;\r\n\r\n      if (this.currentQuestion >= this.questions.length) {\r\n        this.isTimeUp = true;\r\n        this.$emit('test-complete', this.correctAnswers, this.questions.length);\r\n      }\r\n    },\r\n    \r\n    retryTest() {\r\n      this.generateQuestions();\r\n      this.startTest();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.stroop-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 600px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #3b4ce2;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 1.5rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.test-example {\r\n  background-color: #f0f4ff;\r\n  border-radius: 0.5rem;\r\n  padding: 1rem 1.5rem;\r\n  margin: 1rem 0 1.5rem;\r\n  border-left: 4px solid #3b4ce2;\r\n  text-align: left;\r\n}\r\n\r\n.test-example h3 {\r\n  font-size: 18px;\r\n  margin-bottom: 0.75rem;\r\n  color: #1f2937;\r\n}\r\n\r\n.example-text {\r\n  margin: 1rem 0;\r\n  text-align: center;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #3b4ce2;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stroop-word {\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  margin: 2rem 0;\r\n  letter-spacing: 1px;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.stroop-options {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.option-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #f3f4f6;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  color: #1f2937;\r\n  min-width: 120px;\r\n}\r\n\r\n.option-button:hover {\r\n  background-color: #e5e7eb;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 700px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.score-label-small {\r\n  font-size: 16px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 1.5rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #2d3ebd;\r\n}\r\n\r\n.secondary-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: white;\r\n  color: #3b4ce2;\r\n  border: 1px solid #3b4ce2;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.secondary-button:hover {\r\n  background-color: #f0f4ff;\r\n}\r\n\r\n.action-button:active, .secondary-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Таблица результатов */\r\n.results-table-container {\r\n  margin-top: 1rem;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n.results-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 1rem;\r\n  font-size: 14px;\r\n}\r\n\r\n.results-table th, .results-table td {\r\n  padding: 0.75rem;\r\n  border: 1px solid #e5e7eb;\r\n  text-align: center;\r\n}\r\n\r\n.results-table th {\r\n  background-color: #f9fafb;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.results-table tr:nth-child(even) {\r\n  background-color: #f9fafb;\r\n}\r\n\r\n.correct {\r\n  color: #10b981;\r\n  font-weight: bold;\r\n}\r\n\r\n.incorrect {\r\n  color: #ef4444;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-label-small {\r\n    font-size: 14px;\r\n    top: 30px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .stroop-word {\r\n    font-size: 36px;\r\n    margin: 1.5rem 0;\r\n  }\r\n  \r\n  .option-button {\r\n    padding: 0.625rem 1rem;\r\n    font-size: 14px;\r\n    min-width: 100px;\r\n  }\r\n  \r\n  .action-buttons {\r\n    flex-direction: column;\r\n    gap: 0.75rem;\r\n  }\r\n  \r\n  .test-example {\r\n    padding: 0.75rem 1rem;\r\n  }\r\n  \r\n  .result-stats {\r\n    gap: 1rem;\r\n  }\r\n}\r\n</style>","import { render } from \"./FifthTest.vue?vue&type=template&id=77b24904\"\nimport script from \"./FifthTest.vue?vue&type=script&lang=js\"\nexport * from \"./FifthTest.vue?vue&type=script&lang=js\"\n\nimport \"./FifthTest.vue?vue&type=style&index=0&id=77b24904&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"logic-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"18\" cy=\"18\" r=\"3\"></circle>\r\n            <circle cx=\"6\" cy=\"6\" r=\"3\"></circle>\r\n            <path d=\"M13 6h3a2 2 0 0 1 2 2v7\"></path>\r\n            <path d=\"M11 18H8a2 2 0 0 1-2-2V9\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2>Советские логические загадки</h2>\r\n        <p>Проверьте свои аналитические способности, решая классические логические задачи. Вам необходимо внимательно изучить условия каждой задачи и найти правильное решение.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentTaskIndex / tasks.length) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Задача {{ currentTaskIndex + 1 }}/{{ tasks.length }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <h3 class=\"question-text\">{{ currentTask.question }}</h3>\r\n        \r\n        <div class=\"task-description\" v-html=\"formattedDescription\"></div>\r\n        \r\n        <div class=\"task-image-container\" v-if=\"currentTask.image\">\r\n          <img \r\n            :src=\"currentTask.image\" \r\n            alt=\"Изображение задачи\" \r\n            class=\"task-image clickable-image\" \r\n            @click=\"openImageModal(currentTask.image)\" \r\n          />\r\n        </div>\r\n        \r\n        <div class=\"task-controls\">\r\n          <button @click=\"showAnswer = !showAnswer\" class=\"control-button show-answer\">\r\n            {{ showAnswer ? 'Скрыть ответ' : 'Показать ответ' }}\r\n          </button>\r\n          <div class=\"navigation-buttons\">\r\n            <button v-if=\"currentTaskIndex > 0\" @click=\"prevTask\" class=\"control-button nav-button\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n              </svg>\r\n              Предыдущая\r\n            </button>\r\n            <button v-if=\"currentTaskIndex < tasks.length - 1\" @click=\"nextTask\" class=\"control-button nav-button\">\r\n              Следующая\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n              </svg>\r\n            </button>\r\n            <button v-else @click=\"finishTest\" class=\"control-button finish-button\">\r\n              Завершить тест\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-if=\"showAnswer\" class=\"answer-container\">\r\n          <h4 class=\"answer-title\">Ответ:</h4>\r\n          <p class=\"answer-text\">{{ currentTask.answer }}</p>\r\n          <div v-if=\"currentTask.answerImage\" class=\"answer-image-container\">\r\n            <img \r\n              :src=\"currentTask.answerImage\" \r\n              alt=\"Решение задачи\" \r\n              class=\"answer-image clickable-image\" \r\n              @click=\"openImageModal(currentTask.answerImage)\" \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Модальное окно для просмотра изображений -->\r\n    <div v-if=\"showImageModal\" class=\"image-modal\" @click=\"closeImageModal\">\r\n      <div class=\"image-modal-content\" @click.stop>\r\n        <img :src=\"currentModalImage\" alt=\"Увеличенное изображение\" class=\"modal-image\" />\r\n        <button class=\"modal-close-button\" @click=\"closeImageModal\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      currentTaskIndex: 0,\r\n      showAnswer: false,\r\n      showImageModal: false,\r\n      currentModalImage: null,\r\n      tasks: [\r\n        {\r\n          question: \"Где заяц?\",\r\n          description:\r\n            \"Ребята отправились в лес покататься на коньках и лыжах.\\n\\nНавстречу им выбежал заяц, и испугавшись, присел, а затем помчался по своим делам. Ребята было погнались за зайцем, но из виду его потеряли.\\n\\nА он, меж тем, до сих пор на картинке.\\n\\nПомогите детям найти зайца!\",\r\n          image: 'https://i.imgur.com/ycur0zO.png',\r\n          answer: \"Заяц затаился между мальчиком и девочкой.\",\r\n          answerImage: 'https://i.imgur.com/HGvj3eK.png',\r\n        },\r\n        {\r\n          question: \"Кто куда?\",\r\n          description:\r\n            \"На улице встретились приятели:\\n\\n– Степа, здравствуй! Ты куда направляешься? – говорит Петя.\\n\\n– Я иду в дом №23, – отвечает Степа. – А ты куда, Петя?\\n\\n– Я пошел к приятелю Ивану в дом №7!\\n\\nКто из мальчиков на картинке Степа, а кто Петя?\",\r\n          image: 'https://i.imgur.com/71n8Git.png',\r\n          answer: \"Обратите внимание на номер дома – №19. Соответственно отсчет на улице ведется слева направо. Выходит, мальчик Степа тот, что в кепке – его дорога в сторону дома с большим номером, чем 19. Пете, наоборот, нужно к дому с меньшим номером 7, значит, налево, и это мальчик с газетой.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"Чей котик?\",\r\n          description:\r\n            \"Популярная задачка для детей на внимание.\\n\\nНа картинке три девочки: Таня, Катя и Ира.\\n\\nКто из них хозяйка котика и почему?\",\r\n          image: 'https://i.imgur.com/WbOpFZQ.png',\r\n          answer: \"Хозяйка котика Ира, та, что с одним бантиком на косичке – она отдала второй своему питомцу. У остальных подружек бантики на месте, у каждой по два.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"Кого как зовут?\",\r\n          description:\r\n            \"На рисунке пять ребят.\\n\\nКоля стоит с краю, а если Нюра встанет рядом с Володей, два Пети окажутся рядом друг с другом.\\n\\nКого из ребят как зовут?\",\r\n          image: 'https://i.imgur.com/UApLPxh.png',\r\n          answer: \"Ребята по порядку: Коля, Володя, Петя, Нюра, Петя.\",\r\n          answerImage: 'https://i.imgur.com/Tria847.png',\r\n        },\r\n        {\r\n          question: \"Кто принесет больше воды?\",\r\n          description:\r\n            \"Два друга помогают поливать огород. Они носят воду в лейках с реки.\\n\\nКто из мальчиков принесет больше воды?\",\r\n          image: 'https://i.imgur.com/lWOpUBX.png',\r\n          answer: \"У одного мальчика лейка больше, но обратите внимание: у обеих леек носики находятся на одном уровне, а значит, выше него налить воду не удастся – вспомните закон о сообщающихся сосудах. Мальчики принесут воды поровну.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"В городе\",\r\n          description:\r\n            \"Эта задачка детям, которые живут в городах, наверняка будет по зубам.\\n\\nХудожник нарисовал городской пейзаж, но допустил пять ошибок. Найдите их!\",\r\n          image: 'https://i.imgur.com/0AzkiXe.png',\r\n          answer: \"У светофора только два огня, а должно быть три.\\n\\nУ троллейбуса только одна штанга, художник забыл нарисовать вторую.\\n\\nНа улице левостороннее движение, а в СССР правостороннее. О том, что это СССР, говорит русскоязычная афиша.\\n\\nНа табличке указан номер дома 0, но такого быть не может.\\n\\nНа афише 31 сентября, а такого не бывает – проверьте по календарю.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"На реке\",\r\n          description:\r\n            \"Внимательно рассмотрите картинку и ответьте на вопросы:\\n\\nВ каком направлении идет пароход – по течению или против?\\n\\nКакое время года запечатлено на картинке?\\n\\nКакое время дня изобразил художник?\\n\\nМелко или глубоко на реке в этом месте?\\n\\nБлизко или далеко пристань и на каком она берегу?\",\r\n          image: 'https://i.imgur.com/VW9aYNH.png',\r\n          answer: \"Плавучие бакены (деревянные треугольники на воде) направлены против течения, а значит, теплоход идет вверх по руслу.\\n\\nНа небе стая птиц летит углом, у которого одна сторона короче другой, значит, это журавли. По кронам деревьев можно понять, где юг – на его стороне всегда больше ветвей и листьев. Объединив эти факты, определяем, что птицы летят на юг, а значит, скоро зима, соответственно на картинке изображена осень.\\n\\nНа вершинах бакенов есть фонари, их ставят вечером, утром снимают. На берегу за теплоходом можно разглядеть движущееся в сторону деревни стадо. Значит, художник изобразил конец дня, вечер.\\n\\nНа палубе матрос шестом измеряет глубину фарватера, значит, река в этом месте уже неглубокая.\\n\\nПассажиры подготовились к выходу – они стоят со своим багажом, значит, скоро пристань. По тем же пассажирам можно определить, с какой стороны пристань – с той, с которой вы смотрите на рисунок. Вспоминаем, что теплоход идет вверх по течению. Чтобы понять, где правый и левый берег, надо встать лицом по направлению течения. Объединив этот факт с положением пассажиров, определяем, что пристань будет на правом берегу.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"Куда идет поезд?\",\r\n          description:\r\n            \"На картинке изображен участок железной дороги «Москва – Смоленск». На улице начало апреля. Поезд идет по направлению стрелки, концы которой показывают запад и восток. Определите, в какой город идет поезд – в Москву или в Смоленск?\",\r\n          image: 'https://i.imgur.com/73S8muZ.jpeg',\r\n          answer: \"На участке железной дороги два склона, на одном снег уже растаял, на другом нет. Значит, снег лежит на северном склоне. Смоленск находится западнее Москвы. Выходит, поезд идет на запад с востока, а значит, из Москвы в Смоленск.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"Загадка с туристами\",\r\n          description:\r\n            \"Рассмотрите картинку и ответьте на вопросы: \\n\\nСколько туристов проживает в лагере? \\n\\nКогда туристы приехали на поляну: недавно или сегодня? \\n\\nНа чем туристы добрались до поляны? \\n\\nДалеко ли расположен ближайший населенный пункт? \\n\\nНа картинке дует ветер с юга или с севера? \\n\\nНа изображении утро, день или вечер? \\n\\nКуда подевался Шура? \\n\\nТурист с каким именем вчера дежурил? \\n\\nОпределите, какое число и месяц в запечатленном дне?\",\r\n          image: 'https://i.imgur.com/GaERZ3w.png',\r\n          answer: \"В лагере в настоящий момент живут 4 человека: на скатерти 4 ложки и 4 тарелки, в списке дежурства 4 имени. \\n\\nРебята на поляне несколько дней – между палаткой и деревом паук успел сплести паутину. \\n\\nУ дерева справа стоят весла, значит, туристы прибыли сюда на лодке. \\n\\nСлева у скатерти гуляет курица, значит, она пришла из какого-то населенного пункта, соответственно он недалеко. \\n\\nНа палатке есть флажок, он развевается по направлению ветра. Еловые ветки всегда гуще с юга. Значит, ветер сейчас южный. \\n\\nЕсли юг слева, значит, тени падают на запад, соответственно солнце в моменте находится на востоке. Выходит, на картинке утро. \\n\\nВидите сачок над кустом? – это Шура ловит бабочек. \\n\\nОпределим по рюкзакам: Коля что-то ищет в рюкзаке с буквой «К», из того, что с буквой «В», виден штатив, значит, Вася фотографирует. Мы уже определили, что Шура ловит бабочек. Значит, сегодня дежурит Петя. Смотрим на график дежурств – перед Петей, вчера, дежурил Коля. \\n\\nЗапечатлено утро 8 августа. Число видим в графике дежурств, а август определяем по арбузу – именно в этом сезоне во времена СССР собирали урожай этих плодов.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"В советской квартире\",\r\n          description:\r\n            \"Рассматривая эту загадку, ответьте на шесть вопросов: \\n\\nВ какое время года происходит действие на рисунке? \\n\\nВ каком месяце происходит действие? \\n\\nХодит ли сейчас мальчик в школу или отдыхает на каникулах? \\n\\nПроведен ли в квартире водопровод? \\n\\nКроме отца и сына кто живет в квартире на картинке? \\n\\nКто по профессии папа мальчика?\",\r\n          image: 'https://i.imgur.com/TztVOO7.png',\r\n          answer: \"На картинке действие происходит зимой – у мальчика на ногах валенки, и истоплена печь – открыт душник. \\n\\nНа картинке декабрь – у календаря открыт последний лист, над ним закреплена пачка предыдущих листов. \\n\\nПервые семь дней в календаре зачеркнуты, значит, это первая половина месяца, а зимние каникулы начинаются позже. Выходит, мальчик ходит в школу. \\n\\nМальчик моет руки в подвесном рукомойнике, значит, водопровода в квартире нет. \\n\\nУ кресла лежат игрушки, среди них куклы, значит, в доме с большой вероятностью живет маленькая девочка. \\n\\nПапа мальчика – врач – у него из кармана выглядывает фонендоскоп, а на столе лежит врачебный молоточек.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"На переправе\",\r\n          description:\r\n            \"Взгляните на пейзаж и подумайте: \\n\\nКакое время года на рисунке – ранняя весна или поздняя осень? \\n\\nНа север или на юг летят птицы? \\n\\nОпределите, в какое время суток происходит действие? \\n\\nСудоходная ли эта река? \\n\\nКакое направление у течения: на север, юг, запад или восток? \\n\\nГлубокая ли река у места, где сейчас стоит лодка? \\n\\nЕсть ли мост недалеко от этого места? \\n\\nДалеко ли железная дорога?\",\r\n          image: 'https://i.imgur.com/cVx1ra7.png',\r\n          answer: \"В поле идет посев – лошадь запряжена в сеялку, а на деревьях нет листьев, значит, сейчас весна. При осеннем посеве на деревьях еще есть листва. \\n\\nВесной птицы летят с юга в сторону севера. \\n\\nТень от людей падает на северо-запад, значит, сейчас ранее утро. \\n\\nБакены на реке говорят о том, что здесь ходят суда. \\n\\nСудя по тому, как вода огибает бакен, река течет с севера на юг. \\n\\nРядом с лодкой рыбачит мальчик, поплавок на его удочке далеко от крючка, выходит, у берега довольно глубоко. \\n\\nХорошо организованная переправа указывает на то, что моста рядом нет. \\n\\nРядом с переправой стоит железнодорожник – железная дорога, скорее всего, рядом.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"Ночная дорога\",\r\n          description:\r\n            \"Художник допустил семь ошибок на рисунке. Попробуйте найти все.\",\r\n          image: 'https://i.imgur.com/v5hxE0O.png',\r\n          answer: \"Тень от ЛЭП не такая, какой должна быть. \\n\\nНа ЛЭП художник забыл нарисовать изоляторы. \\n\\nСозвездие Большая Медведица изображено неправильно – зеркально. \\n\\nМежду Большой Медведицей и Полярной звездой не может находиться Луна. \\n\\nВ зоне ЛЭП деревья расти не могут – это запрещено и их постоянно убирают. \\n\\nУказатель стоит на с той стороны – он должен быть справа при правостороннем движении, а действие происходит в СССР – на картинке автомобиль ГАЗ – 13 «Чайка». \\n\\nГрузовик едет по следу от колес «Чайки», но в другую сторону, хотя дорога, очевидно, рассчитана на две полосы.\",\r\n          answerImage: null,\r\n        },\r\n        {\r\n          question: \"С каким счётом закончился матч?\",\r\n          description:\r\n            \"Восемь болельщиков переживают каждый гол. Всего забито восемь голов. Определите, с каким счетом закончился матч?\",\r\n          image: 'https://i.imgur.com/42E3VTh.png',\r\n          answer: \"Отследите реакцию болельщиков, и вы поймете, кто за какую команду болел. Персонажи на местах 1, 5, 6, 7 болели за одну команду, остальные за другую – об этом говорит синхронность чувств людей. Получается, первые радовались больше, их команда победила со счетом 5:3.\",\r\n          answerImage: 'https://i.imgur.com/sQasLnF.png',\r\n        },\r\n        {\r\n          question: \"Что хочет сказать жестами мальчик?\",\r\n          description:\r\n            \"Язык жестов советские дети, да и взрослые тоже, использовали довольно часто. Эта задачка как раз на расшифровку посланий – попробуйте догадаться, что хочет сказать мальчик. Подсказка: определите часто повторяющиеся движения, сопоставьте их с распространенными звуками, а затем подберите смысл под оставшиеся движения.\",\r\n          image: 'https://i.imgur.com/rCGi9kv.png',\r\n          answer: \"Жесты под номерами 2, 8, 12, 15, очевидно, самые популярные. По логике это самые часто встречающиеся буквы А и О. Повторяются и буквы 5, 11 и 14; 9 и 13. Дальше нужно подбирать смысл. Один из наиболее вероятных ответов:\",\r\n          answerImage: 'https://i.imgur.com/DVKZjrS.png',\r\n        },\r\n        {\r\n          question: \"Кто сильнее?\",\r\n          description:\r\n            \"Четыре мальчика, по два с каждом стороны, стараются растащить палки, перешнурованные веревкой. Один конец веревки привязан к одной палке, свободный конец держит девочка и тянет его к себе. Чем закончится состязание?\",\r\n          image: 'https://i.imgur.com/mEPSLHd.png',\r\n          answer: \"Конструкция из перешнурованных между собой палок – это устойчивый полиспаст. В данном случае у девочки 16-кратное превосходство в силе – если она приложит небольшое усилие, с легкостью притянет палки друг к дружке, у мальчиков не получится их разъединить.\",\r\n          answerImage: null,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    currentTask() {\r\n      return this.tasks[this.currentTaskIndex];\r\n    },\r\n    formattedDescription() {\r\n      return this.currentTask.description\r\n        .split(\"\\n\\n\")\r\n        .map((paragraph) => `<p>${paragraph}</p>`)\r\n        .join(\"\");\r\n    },\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.currentTaskIndex = 0;\r\n      this.showAnswer = false;\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    nextTask() {\r\n      if (this.currentTaskIndex < this.tasks.length - 1) {\r\n        this.currentTaskIndex++;\r\n        this.showAnswer = false;\r\n      }\r\n    },\r\n    \r\n    prevTask() {\r\n      if (this.currentTaskIndex > 0) {\r\n        this.currentTaskIndex--;\r\n        this.showAnswer = false;\r\n      }\r\n    },\r\n    \r\n    finishTest() {\r\n      this.$emit('test-complete', this.tasks.length);\r\n    },\r\n    \r\n    openImageModal(image) {\r\n      if (image) {\r\n        this.currentModalImage = image;\r\n        this.showImageModal = true;\r\n      }\r\n    },\r\n    \r\n    closeImageModal() {\r\n      this.showImageModal = false;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logic-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #e0f2fe;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #0ea5e9;\r\n}\r\n\r\n.task-image-container {\r\n  margin-bottom: 1.5rem;\r\n  background-color: #f7f7f7;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.task-image {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 4px;\r\n}\r\n\r\n.clickable-image {\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.clickable-image:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.task-controls {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  width: 100%;\r\n  max-width: 600px;\r\n}\r\n\r\n.control-button {\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.show-answer {\r\n  background-color: #f0f9ff;\r\n  color: #0ea5e9;\r\n  border: 1px solid #bae6fd;\r\n  width: 100%;\r\n}\r\n\r\n.show-answer:hover {\r\n  background-color: #e0f2fe;\r\n}\r\n\r\n.navigation-buttons {\r\n  display: flex;\r\n  gap: 1rem;\r\n  width: 100%;\r\n}\r\n\r\n.nav-button {\r\n  flex: 1;\r\n  background-color: #f3f4f6;\r\n  color: #4b5563;\r\n  border: 1px solid #e5e7eb;\r\n}\r\n\r\n.nav-button:hover {\r\n  background-color: #e5e7eb;\r\n}\r\n\r\n.finish-button {\r\n  flex: 1;\r\n  background-color: #0ea5e9;\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.finish-button:hover {\r\n  background-color: #0284c7;\r\n}\r\n\r\n.answer-container {\r\n  margin-top: 1.5rem;\r\n  background-color: #f0f9ff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  border: 1px solid #bae6fd;\r\n  text-align: left;\r\n}\r\n\r\n.answer-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #0ea5e9;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.answer-text {\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n  color: #1f2937;\r\n  white-space: pre-line;\r\n}\r\n\r\n.answer-image-container {\r\n  margin-top: 1.5rem;\r\n  background-color: #f7f7f7;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.answer-image {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #0ea5e9;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #0284c7;\r\n}\r\n\r\n/* Модальное окно для просмотра изображений */\r\n.image-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.image-modal-content {\r\n  position: relative;\r\n  max-width: 90%;\r\n  max-height: 90%;\r\n}\r\n\r\n.modal-image {\r\n  max-width: 100%;\r\n  max-height: 90vh;\r\n  border-radius: 8px;\r\n}\r\n\r\n.modal-close-button {\r\n  position: absolute;\r\n  top: -40px;\r\n  right: 0;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: white;\r\n  cursor: pointer;\r\n  padding: 8px;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .question-text {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .task-description p, .answer-text {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .intro-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .navigation-buttons {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .control-button {\r\n    font-size: 14px;\r\n    padding: 0.625rem 1rem;\r\n  }\r\n  .intro-screen h2 {\r\n    color: #0ea5e9;\r\n    font-size: 28px;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #0ea5e9;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.question-text {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #0ea5e9;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.task-description {\r\n  margin-bottom: 1.5rem;\r\n  background-color: #f0f9ff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  text-align: left;\r\n  border: 1px solid #bae6fd;\r\n}\r\n\r\n.task-description p {\r\n  margin-bottom: 1rem;\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n  color: #1f2937;\r\n}\r\n\r\n.task-description p:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.task-image-container {\r\n  margin-bottom: 1.5rem;\r\n  background-color: #f7f7f7;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n}\r\n</style>","import { render } from \"./SovietLogicTest.vue?vue&type=template&id=548d0ca4&scoped=true\"\nimport script from \"./SovietLogicTest.vue?vue&type=script&lang=js\"\nexport * from \"./SovietLogicTest.vue?vue&type=script&lang=js\"\n\nimport \"./SovietLogicTest.vue?vue&type=style&index=0&id=548d0ca4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-548d0ca4\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"spatial-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на пространственное мышление</h2>\r\n        <p>Проверьте свою способность мысленно визуализировать и манипулировать графическими объектами. Вам будет представлен ряд задач, связанных с вращением, сборкой и трансформацией фигур.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else>\r\n      <div v-if=\"currentQuestionIndex < questions.length && !testFinished\" class=\"question-screen\">\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-indicator\" :style=\"{ width: `${(currentQuestionIndex / questions.length) * 100}%` }\"></div>\r\n        </div>\r\n        \r\n        <div class=\"question-counter\">\r\n          Вопрос {{ currentQuestionIndex + 1 }}/{{ questions.length }}\r\n        </div>\r\n\r\n        <div class=\"question-container\">\r\n          <h3 class=\"question-text\">{{ questions[currentQuestionIndex].questionText }}</h3>\r\n          \r\n          <div class=\"question-image-container\">\r\n            <img :src=\"questions[currentQuestionIndex].image\" alt=\"Задание\" class=\"question-image\" />\r\n          </div>\r\n          \r\n          <div class=\"answer-options\">\r\n            <button \r\n              v-for=\"(answer, index) in questions[currentQuestionIndex].answers\" \r\n              :key=\"index\"\r\n              @click=\"selectAnswer(index)\" \r\n              class=\"option-button\"\r\n            >\r\n              {{ answer.text }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Экран с результатами -->\r\n      <div v-if=\"testFinished\" class=\"results-screen\">\r\n        <div class=\"results-content\">\r\n          <div class=\"results-icon\" :class=\"{ 'high-score': correctAnswers >= questions.length * 0.7 }\">\r\n            <svg v-if=\"correctAnswers >= questions.length * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n              <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n            </svg>\r\n            <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n              <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n            </svg>\r\n          </div>\r\n          \r\n          <h2 class=\"results-title\">Результаты теста</h2>\r\n          \r\n          <div class=\"score-display\">\r\n            <div class=\"score-circle\">\r\n              <span class=\"score-value\">{{ correctAnswers }}</span>\r\n              <span class=\"score-total\">/{{ questions.length }}</span>\r\n            </div>\r\n            <p class=\"score-label\">правильных ответов</p>\r\n          </div>\r\n          \r\n          <div class=\"result-message\">\r\n            <p v-if=\"correctAnswers >= questions.length * 0.9\">Отличный результат! У вас превосходное пространственное мышление.</p>\r\n            <p v-else-if=\"correctAnswers >= questions.length * 0.7\">Хороший результат! Ваше пространственное мышление выше среднего.</p>\r\n            <p v-else-if=\"correctAnswers >= questions.length * 0.5\">Неплохой результат. Есть потенциал для улучшения.</p>\r\n            <p v-else>Пространственное мышление можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n          </div>\r\n          \r\n          <div v-if=\"mistakes.length\" class=\"mistakes-container\">\r\n            <h4 class=\"mistakes-title\">Ошибки в ответах:</h4>\r\n            <ul class=\"mistakes-list\">\r\n              <li v-for=\"(mistake, index) in mistakes\" :key=\"index\" class=\"mistake-item\">\r\n                <strong>Вопрос {{ mistake.questionIndex + 1 }}:</strong> \r\n                Вы выбрали \"{{ mistake.selectedAnswer }}\", правильный ответ - \"{{ mistake.correctAnswer }}\"\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      currentQuestionIndex: 0,\r\n      correctAnswers: 0,\r\n      mistakes: [],\r\n      testFinished: false,\r\n      selectedAnswers: {},\r\n      questions: [\r\n        {\r\n          questionText: \"При правильном соединении верхние части головоломки создадут одну из следующих фигур (1-5). Обратите внимание, что стороны, которые обозначены одинаковыми буквами (А, В, С), должны соприкасаться между собой. Выберите правильный ответ.\",\r\n          image: 'https://i.imgur.com/87ZioVU.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: true },\r\n            { text: \"Ответ 2\", correct: false },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: false },\r\n            { text: \"Ответ 5\", correct: false }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"При правильном соединении верхние части головоломки создадут одну из следующих фигур (1-5). Обратите внимание, что стороны, которые обозначены одинаковыми буквами (А, B, С) должны соприкасаться между собой. Выберите правильный ответ.\",\r\n          image: 'https://i.imgur.com/8iwkYCi.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: false },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: false },\r\n            { text: \"Ответ 5\", correct: true }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"Какой из четырех возможных вариантов представляет собой куб в сложенном виде?\",\r\n          image: 'https://i.imgur.com/OffiyET.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: false },\r\n            { text: \"Ответ 3\", correct: true },\r\n            { text: \"Ответ 4\", correct: false }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"Какой из четырех возможных вариантов представляет верхний куб, показанный с другого ракурса? Каждая грань куба уникальна и не повторяется.\",\r\n          image: 'https://i.imgur.com/cNQ8KeM.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: true },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: false }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"Вверху представлена фигура. Из следующих 5 вариантов выберите один, изображающий ту же фигуру.\",\r\n          image: 'https://i.imgur.com/f8YXPFo.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: false },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: false },\r\n            { text: \"Ответ 5\", correct: true }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"Укажите правильную комбинацию фигур после вращения верхней модели (обе точки должны располагаться в тех же углах).\",\r\n          image: 'https://i.imgur.com/bxyxhiK.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: true },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: false },\r\n            { text: \"Ответ 5\", correct: false }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"Какое изображение (1-4) является зеркальным отражением верхней фигуры?\",\r\n          image: 'https://i.imgur.com/jQKYhTb.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: true },\r\n            { text: \"Ответ 2\", correct: false },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: false }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"При правильном соединении верхние части головоломки создадут одну из следующих фигур (А- Е). Обратите внимание, что стороны, которые обозначены одинаковыми буквами (х, y, z), должны соприкасаться между собой. Выберите правильный ответ.\",\r\n          image: 'https://i.imgur.com/Ow2CPN0.jpeg',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: true },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: false },\r\n            { text: \"Ответ 5\", correct: false }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"Какая из следующих фигур находится внутри квадрата?\",\r\n          image: 'https://i.imgur.com/9jfrflF.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: false },\r\n            { text: \"Ответ 3\", correct: false },\r\n            { text: \"Ответ 4\", correct: true },\r\n            { text: \"Ответ 5\", correct: false }\r\n          ]\r\n        },\r\n        {\r\n          questionText: \"Какая фигура (1-5) получится при сложении данного шаблона бумаги? Выберите правильный ответ.\",\r\n          image: 'https://i.imgur.com/PWciq7V.png',\r\n          answers: [\r\n            { text: \"Ответ 1\", correct: false },\r\n            { text: \"Ответ 2\", correct: false },\r\n            { text: \"Ответ 3\", correct: true },\r\n            { text: \"Ответ 4\", correct: false },\r\n            { text: \"Ответ 5\", correct: false }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.currentQuestionIndex = 0;\r\n      this.correctAnswers = 0;\r\n      this.mistakes = [];\r\n      this.testFinished = false;\r\n      this.selectedAnswers = {};\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    selectAnswer(index) {\r\n      const question = this.questions[this.currentQuestionIndex];\r\n      const isCorrect = question.answers[index].correct;\r\n      \r\n      // Если ответ правильный, увеличиваем счетчик\r\n      if (isCorrect) {\r\n        this.correctAnswers++;\r\n      } else {\r\n        // Сохраняем информацию об ошибке\r\n        this.mistakes.push({\r\n          questionIndex: this.currentQuestionIndex,\r\n          selectedAnswer: question.answers[index].text,\r\n          correctAnswer: question.answers.find(ans => ans.correct).text\r\n        });\r\n      }\r\n      \r\n      // Переходим к следующему вопросу\r\n      this.nextQuestion();\r\n    },\r\n    \r\n    nextQuestion() {\r\n      this.currentQuestionIndex++;\r\n      if (this.currentQuestionIndex >= this.questions.length) {\r\n        this.finishTest();\r\n      }\r\n    },\r\n    \r\n    finishTest() {\r\n      this.testFinished = true;\r\n      this.$emit('test-complete', this.correctAnswers, this.questions.length);\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.spatial-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #ebe9fe;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #4f46e5;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #4f46e5;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #4f46e5;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.question-image-container {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-bottom: 1.5rem;\r\n  background-color: #f3f4f7;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.question-image {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 4px;\r\n}\r\n\r\n.answer-options {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n  gap: 1rem;\r\n  width: 100%;\r\n  max-width: 600px;\r\n}\r\n\r\n.option-button {\r\n  padding: 0.875rem 1rem;\r\n  background-color: #f3f4f7;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #1f2937;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  text-align: center;\r\n}\r\n\r\n.option-button:hover {\r\n  background-color: #ebe9fe;\r\n  border-color: #4f46e5;\r\n  color: #4f46e5;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 600px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #ebe9fe;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #4f46e5;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 1.5rem;\r\n  padding: 1rem;\r\n  background-color: #f3f4f7;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.mistakes-container {\r\n  margin-bottom: 1.5rem;\r\n  width: 100%;\r\n  text-align: left;\r\n}\r\n\r\n.mistakes-title {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.mistakes-list {\r\n  background-color: #f3f4f7;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  list-style-type: none;\r\n}\r\n\r\n.mistake-item {\r\n  margin-bottom: 0.75rem;\r\n  font-size: 14px;\r\n  color: #4b5563;\r\n  padding-left: 1.5rem;\r\n  position: relative;\r\n}\r\n\r\n.mistake-item:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.mistake-item::before {\r\n  content: \"•\";\r\n  position: absolute;\r\n  left: 0.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #4f46e5;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #4338ca;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .answer-options {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>","import { render } from \"./SpatialThinkingTest.vue?vue&type=template&id=ffd9aa14&scoped=true\"\nimport script from \"./SpatialThinkingTest.vue?vue&type=script&lang=js\"\nexport * from \"./SpatialThinkingTest.vue?vue&type=script&lang=js\"\n\nimport \"./SpatialThinkingTest.vue?vue&type=style&index=0&id=ffd9aa14&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ffd9aa14\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"reaction-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M13 2L3 14h9l-1 8 10-16h-9l1-4z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на время реакции</h2>\r\n        <p>Проверьте скорость вашей реакции. Когда красный экран сменится на зеленый, нажмите как можно быстрее. Постарайтесь не нажимать преждевременно!</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(attempts / maxAttempts) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Попытка {{ attempts }}/{{ maxAttempts }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <div \r\n          class=\"reaction-box\" \r\n          :class=\"stateClass\" \r\n          @click=\"handleClick\"\r\n        >\r\n          <p v-if=\"state === 'waiting'\">Нажмите, чтобы начать</p>\r\n          <p v-if=\"state === 'ready'\">Ждите зелёного...</p>\r\n          <p v-if=\"state === 'click'\">Нажмите!</p>\r\n          <p v-if=\"state === 'tooSoon'\">Слишком рано!</p>\r\n          <p v-if=\"state === 'result'\">Ваше время: <span class=\"result-time\">{{ reactionTime }} мс</span></p>\r\n        </div>\r\n        \r\n        <div v-if=\"feedback\" class=\"feedback-message\" :class=\"getFeedbackClass()\">\r\n          {{ feedback }}\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Статистика попыток -->\r\n      <div v-if=\"attempts > 0\" class=\"stats-container\">\r\n        <h4 class=\"stats-title\">Статистика:</h4>\r\n        <div class=\"stats-grid\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Попытки:</span>\r\n            <span class=\"stat-value\">{{ attempts }}/{{ maxAttempts }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Лучшее время:</span>\r\n            <span class=\"stat-value\">{{ bestTime }} мс</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Среднее время:</span>\r\n            <span class=\"stat-value\">{{ averageTime }} мс</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Экран с результатами -->\r\n      <div v-if=\"showResults\" class=\"results-screen\">\r\n        <div class=\"results-content\">\r\n          <div class=\"results-icon\" :class=\"{ 'high-score': averageTime < 300 }\">\r\n            <svg v-if=\"averageTime < 300\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M13 2L3 14h9l-1 8 10-16h-9l1-4z\"></path>\r\n            </svg>\r\n            <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n              <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n            </svg>\r\n          </div>\r\n          \r\n          <h2 class=\"results-title\">Результаты теста</h2>\r\n          \r\n          <div class=\"score-display\">\r\n            <div class=\"score-circle\">\r\n              <span class=\"score-value\">{{ averageTime }}</span>\r\n              <span class=\"score-unit\">мс</span>\r\n            </div>\r\n            <p class=\"score-label\">среднее время реакции</p>\r\n          </div>\r\n          \r\n          <div class=\"result-stats\">\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-label\">Лучшее время:</span>\r\n              <span class=\"stat-value\">{{ bestTime }} мс</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"result-message\">\r\n            <p v-if=\"averageTime < 200\">Невероятная реакция! У вас скорость реакции профессионального спортсмена.</p>\r\n            <p v-else-if=\"averageTime < 250\">Великолепная реакция! Ваша скорость реакции значительно выше среднего.</p>\r\n            <p v-else-if=\"averageTime < 300\">Отличная реакция! Ваше время реакции выше среднего.</p>\r\n            <p v-else-if=\"averageTime < 350\">Хорошая реакция. Ваше время реакции на уровне среднего человека.</p>\r\n            <p v-else>Скорость реакции можно улучшить тренировками. Регулярные упражнения помогут улучшить результаты.</p>\r\n          </div>\r\n          \r\n          <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      state: 'waiting',\r\n      startTime: 0,\r\n      reactionTime: null,\r\n      timeout: null,\r\n      attempts: 0,\r\n      maxAttempts: 5,\r\n      timeHistory: [],\r\n      feedback: '',\r\n      showResults: false\r\n    };\r\n  },\r\n  computed: {\r\n    stateClass() {\r\n      return {\r\n        'waiting': this.state === 'waiting',\r\n        'ready': this.state === 'ready',\r\n        'click': this.state === 'click',\r\n        'tooSoon': this.state === 'tooSoon',\r\n        'result': this.state === 'result',\r\n      };\r\n    },\r\n    bestTime() {\r\n      if (this.timeHistory.length === 0) return 0;\r\n      return Math.min(...this.timeHistory);\r\n    },\r\n    averageTime() {\r\n      if (this.timeHistory.length === 0) return 0;\r\n      const sum = this.timeHistory.reduce((acc, val) => acc + val, 0);\r\n      return Math.round(sum / this.timeHistory.length);\r\n    }\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.state = 'waiting';\r\n      this.reactionTime = null;\r\n      this.attempts = 0;\r\n      this.timeHistory = [];\r\n      this.feedback = '';\r\n      this.showResults = false;\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    handleClick() {\r\n      // Если тест не начат, игнорируем клик\r\n      if (!this.testStarted) return;\r\n      \r\n      switch (this.state) {\r\n        case 'waiting': {\r\n          // Начинаем тест\r\n          this.startNextAttempt();\r\n          break;\r\n        }\r\n        \r\n        case 'ready': {\r\n          // Слишком рано нажал\r\n          clearTimeout(this.timeout);\r\n          this.state = 'tooSoon';\r\n          this.feedback = 'Вы нажали слишком рано! Дождитесь, пока квадрат станет зеленым.';\r\n          \r\n          // Через 2 секунды возвращаемся в исходное состояние\r\n          setTimeout(() => {\r\n            this.state = 'waiting';\r\n            this.feedback = '';\r\n          }, 2000);\r\n          break;\r\n        }\r\n        \r\n        case 'click': {\r\n          // Измеряем время реакции\r\n          const reactionTime = Math.round(performance.now() - this.startTime);\r\n          this.reactionTime = reactionTime;\r\n          this.timeHistory.push(reactionTime);\r\n          this.attempts++;\r\n          this.state = 'result';\r\n          \r\n          // Добавляем отзыв о результате\r\n          if (reactionTime < 200) {\r\n            this.feedback = 'Невероятно быстро!';\r\n          } else if (reactionTime < 300) {\r\n            this.feedback = 'Очень хорошее время!';\r\n          } else if (reactionTime < 400) {\r\n            this.feedback = 'Хорошее время реакции.';\r\n          } else {\r\n            this.feedback = 'Неплохо, но можно быстрее.';\r\n          }\r\n          \r\n          // Если это последняя попытка, показываем результаты\r\n          if (this.attempts >= this.maxAttempts) {\r\n            setTimeout(() => {\r\n              this.showResults = true;\r\n              this.$emit('test-complete', this.calculateScore());\r\n            }, 2000);\r\n          } else {\r\n            // Иначе через 2 секунды начинаем следующую попытку\r\n            setTimeout(() => {\r\n              this.state = 'waiting';\r\n              this.feedback = '';\r\n            }, 2000);\r\n          }\r\n          break;\r\n        }\r\n        \r\n        case 'result':\r\n        case 'tooSoon': {\r\n          // Игнорируем клики в этих состояниях\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    \r\n    startNextAttempt() {\r\n      this.state = 'ready';\r\n      this.feedback = '';\r\n      \r\n      // Случайная задержка от 2 до 5 секунд\r\n      const randomDelay = Math.floor(Math.random() * 3000) + 2000;\r\n      \r\n      this.timeout = setTimeout(() => {\r\n        this.state = 'click';\r\n        this.startTime = performance.now();\r\n      }, randomDelay);\r\n    },\r\n    \r\n    getFeedbackClass() {\r\n      if (this.state === 'tooSoon') return 'error-feedback';\r\n      if (this.reactionTime < 200) return 'excellent-feedback';\r\n      if (this.reactionTime < 300) return 'good-feedback';\r\n      if (this.reactionTime < 400) return 'average-feedback';\r\n      return 'normal-feedback';\r\n    },\r\n    \r\n    calculateScore() {\r\n      // Преобразуем среднее время реакции в баллы по шкале от 1 до 10\r\n      if (this.averageTime < 200) return 10;\r\n      if (this.averageTime < 250) return 9;\r\n      if (this.averageTime < 300) return 8;\r\n      if (this.averageTime < 350) return 7;\r\n      if (this.averageTime < 400) return 6;\r\n      if (this.averageTime < 450) return 5;\r\n      if (this.averageTime < 500) return 4;\r\n      if (this.averageTime < 550) return 3;\r\n      if (this.averageTime < 600) return 2;\r\n      return 1;\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    }\r\n  },\r\n  \r\n  beforeUnmount() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reaction-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fde8eb;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #ec4899;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #ec4899;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана с тестом */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #ec4899;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.reaction-box {\r\n  width: 300px;\r\n  height: 300px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.1s ease;\r\n  user-select: none;\r\n}\r\n\r\n.reaction-box p {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 1rem;\r\n}\r\n\r\n.reaction-box.waiting {\r\n  background-color: #9ca3af;\r\n}\r\n\r\n.reaction-box.ready {\r\n  background-color: #ef4444;\r\n}\r\n\r\n.reaction-box.click {\r\n  background-color: #10b981;\r\n}\r\n\r\n.reaction-box.tooSoon {\r\n  background-color: #f59e0b;\r\n}\r\n\r\n.reaction-box.result {\r\n  background-color: #3b82f6;\r\n}\r\n\r\n.result-time {\r\n  font-size: 1.25em;\r\n  font-weight: 700;\r\n}\r\n\r\n.feedback-message {\r\n  margin-top: 0.5rem;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n  text-align: center;\r\n}\r\n\r\n.error-feedback {\r\n  background-color: #fee2e2;\r\n  color: #b91c1c;\r\n}\r\n\r\n.excellent-feedback {\r\n  background-color: #dcfce7;\r\n  color: #15803d;\r\n}\r\n\r\n.good-feedback {\r\n  background-color: #e0f2fe;\r\n  color: #0369a1;\r\n}\r\n\r\n.average-feedback {\r\n  background-color: #fef3c7;\r\n  color: #92400e;\r\n}\r\n\r\n.normal-feedback {\r\n  background-color: #f3f4f6;\r\n  color: #4b5563;\r\n}\r\n\r\n/* Статистика попыток */\r\n.stats-container {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin: 0 auto 1.5rem;\r\n  padding: 0 1.5rem;\r\n}\r\n\r\n.stats-title {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.stats-grid {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #f9fafb;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 12px;\r\n  color: #6b7280;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n}\r\n\r\n.results-content {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n  max-width: 500px;\r\n  text-align: center;\r\n  width: 90%;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fef9c3;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ca8a04;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #fde8eb;\r\n  color: #ec4899;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #fde8eb;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  color: #ec4899;\r\n}\r\n\r\n.score-unit {\r\n  font-size: 16px;\r\n  color: #ec4899;\r\n  opacity: 0.8;\r\n  position: absolute;\r\n  top: 65px;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #ec4899;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #db2777;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .score-unit {\r\n    font-size: 14px;\r\n    top: 55px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .reaction-box {\r\n    width: 250px;\r\n    height: 250px;\r\n  }\r\n  \r\n  .reaction-box p {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .feedback-message {\r\n    font-size: 14px;\r\n    padding: 0.625rem 1rem;\r\n  }\r\n  \r\n  .stats-grid {\r\n    padding: 0.75rem;\r\n  }\r\n  \r\n  .stat-item {\r\n    padding: 0 0.375rem;\r\n  }\r\n  \r\n  .stat-label {\r\n    font-size: 10px;\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>","import { render } from \"./ReactionTimeTest.vue?vue&type=template&id=24a38626&scoped=true\"\nimport script from \"./ReactionTimeTest.vue?vue&type=script&lang=js\"\nexport * from \"./ReactionTimeTest.vue?vue&type=script&lang=js\"\n\nimport \"./ReactionTimeTest.vue?vue&type=style&index=0&id=24a38626&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-24a38626\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"memory-test\">\r\n    <!-- Начальный экран с правилами -->\r\n    <div v-if=\"showRules\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n          <rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\"></rect>\r\n          <path d=\"M8 2v4\"></path>\r\n          <path d=\"M16 2v4\"></path>\r\n          <circle cx=\"12\" cy=\"11\" r=\"3\"></circle>\r\n          <path d=\"M12 14v4\"></path>\r\n        </svg>\r\n        </div>\r\n        <h2>Тест N-Back: Тренировка рабочей памяти</h2>\r\n        \r\n        <div class=\"rules-content\">\r\n          <p>Этот тест измеряет вашу <strong>рабочую память</strong> и способность концентрироваться.</p>\r\n          \r\n          <h3>Как играть:</h3>\r\n          <ol>\r\n            <li>Вы увидите последовательность цифр, появляющихся одна за другой.</li>\r\n            <li>Ваша задача — определить, совпадает ли <strong>текущая цифра</strong> с <strong>первой цифрой</strong> в последовательности.</li>\r\n            <li>Если цифры совпадают — нажмите <strong>\"Да\"</strong>.</li>\r\n            <li>Если цифры не совпадают — нажмите <strong>\"Нет\"</strong>.</li>\r\n          </ol>\r\n          \r\n          <div class=\"example\">\r\n            <h4>Пример:</h4>\r\n            <div class=\"example-sequence\">\r\n              <span class=\"example-digit\">4</span>\r\n              <span class=\"example-digit\">7</span>\r\n              <span class=\"example-digit\">4</span>\r\n            </div>\r\n            <p>В этом примере правильный ответ: <strong>\"Да\"</strong>, так как первая и последняя цифры совпадают (обе 4).</p>\r\n          </div>\r\n          \r\n          <div class=\"tips\">\r\n            <h4>Советы:</h4>\r\n            <ul>\r\n              <li>У вас есть 3 жизни. За каждый неправильный ответ вы теряете одну жизнь.</li>\r\n              <li>За правильные ответы вы получаете очки.</li>\r\n              <li>Игра состоит из 20 раундов или заканчивается, когда вы потеряете все жизни.</li>\r\n              <li>Чем дольше вы играете, тем сложнее будет запоминать цифры.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        \r\n        <button class=\"action-button\" @click=\"startGame\">Начать игру</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Основной экран игры -->\r\n    <div v-else class=\"game-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(round / 20) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Раунд {{ round }}/20\r\n      </div>\r\n      \r\n      <div class=\"game-container\">\r\n        <div class=\"sequence-container\">\r\n          <div \r\n            v-for=\"(num, index) in sequence\" \r\n            :key=\"index\" \r\n            class=\"digit-box\"\r\n            :class=\"getOpacityClass(index)\"\r\n          >\r\n            {{ num }}\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"controls\">\r\n          <button @click=\"answer(false)\" class=\"no-button\">Нет</button>\r\n          <button @click=\"answer(true)\" class=\"yes-button\">Да</button>\r\n        </div>\r\n        \r\n        <div class=\"stats\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Жизни</span>\r\n            <span class=\"stat-value\">{{ lives }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Счет</span>\r\n            <span class=\"stat-value\">{{ score }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Точность</span>\r\n            <span class=\"stat-value\">{{ accuracy }}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Результаты в конце игры (без всплывающего окна) -->\r\n      <div v-if=\"gameOver\" class=\"game-over-results\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': accuracy >= 80 }\">\r\n          <svg v-if=\"accuracy >= 80\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h3 class=\"results-title\">Игра завершена</h3>\r\n        \r\n        <div class=\"result-stats\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Правильно</span>\r\n            <span class=\"stat-value\">{{ correctAnswers }} из {{ Math.min(20, round - 1) }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Точность</span>\r\n            <span class=\"stat-value\">{{ accuracy }}%</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Очки</span>\r\n            <span class=\"stat-value\">{{ score }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"accuracy >= 90\">Потрясающе! У вас отличная рабочая память и концентрация.</p>\r\n          <p v-else-if=\"accuracy >= 70\">Хороший результат! Ваша рабочая память лучше, чем у большинства людей.</p>\r\n          <p v-else-if=\"accuracy >= 50\">Неплохой результат. Вы можете улучшить свою рабочую память с практикой.</p>\r\n          <p v-else>Рабочую память можно тренировать! Регулярные упражнения помогут улучшить результат.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartGame\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showRules: true, // Показываем правила по умолчанию\r\n      sequence: [],\r\n      lives: 3,\r\n      score: 0,\r\n      round: 1,\r\n      correctAnswers: 0,\r\n      transparencyLevels: [0, 0, 0],\r\n      gameOver: false,\r\n      streak: 0,\r\n      isBlinking: false,\r\n      leftCounter: 0,\r\n      centerCounter: 0\r\n    };\r\n  },\r\n  computed: {\r\n    accuracy() {\r\n      // Исправляем ошибку расчета процента\r\n      if (this.round <= 1) return 100;\r\n      // Используем Math.min, чтобы убедиться, что не делим на число больше, чем количество сыгранных раундов\r\n      return Math.round((this.correctAnswers / Math.min(this.round - 1, 20)) * 100);\r\n    }\r\n  },\r\n  mounted() {\r\n    // Инициализируем последовательность, но не начинаем игру сразу\r\n    this.sequence = [\r\n      this.getRandomDigit(false),\r\n      this.getRandomDigit(false),\r\n      this.getRandomDigit(true, 0.8)\r\n    ];\r\n  },\r\n  methods: {\r\n    startGame() {\r\n      this.showRules = false;\r\n      // Эмитим событие test-start когда игра действительно начинается\r\n      this.$emit('test-start');\r\n    },\r\n    getRandomDigit(forceMatch = false, probabilityMatch = 0.8) {\r\n      if (forceMatch && this.sequence.length > 0 && Math.random() < probabilityMatch) {\r\n        return this.sequence[0];\r\n      }\r\n      return Math.floor(Math.random() * 10);\r\n    },\r\n    getOpacityClass(index) {\r\n      const level = this.transparencyLevels[index];\r\n      return `opacity-${Math.round(level * 5)}`;\r\n    },\r\n    answer(isYes) {\r\n      if (this.gameOver) {\r\n        return;\r\n      }\r\n      \r\n      const correct = (this.sequence[0] === this.sequence[2]) === isYes;\r\n      this.leftCounter++;\r\n      this.centerCounter++;\r\n      \r\n      if (correct) {\r\n        this.correctAnswers++;\r\n        this.score += 100;\r\n        this.streak++;\r\n      } else {\r\n        this.lives--;\r\n        this.streak = 0;\r\n        this.leftCounter = 0;\r\n        this.centerCounter = 0;\r\n        this.transparencyLevels[0] = 0;\r\n        this.transparencyLevels[1] = 0;\r\n      }\r\n      \r\n      if (this.leftCounter >= 3) {\r\n        this.transparencyLevels[0] = 1;\r\n      } else {\r\n        this.transparencyLevels[0] = 0;\r\n      }\r\n      \r\n      if (this.centerCounter >= 3) {\r\n        this.transparencyLevels[1] = 1;\r\n      } else {\r\n        this.transparencyLevels[1] = 0;\r\n      }\r\n      \r\n      if (this.lives <= 0 || this.round >= 20) {\r\n        this.gameOver = true;\r\n        \r\n        // 1. Определяем максимально возможное количество правильных ответов\r\n        const totalPossibleAnswers = 10;\r\n        \r\n        // 2. Рассчитываем коэффициент прохождения раундов\r\n        const completedRounds = Math.min(20, this.round - 1);\r\n        const completionRatio = completedRounds / 20;\r\n        \r\n        // 3. Учитываем потраченные жизни (снижаем результат)\r\n        const lostLives = 3 - this.lives;\r\n        const livesLostPenalty = lostLives * 0.2; // 20% штрафа за каждую потерянную жизнь\r\n        \r\n        // 4. Рассчитываем итоговый коэффициент выполнения\r\n        const finalCompletionRatio = Math.max(0, completionRatio - livesLostPenalty);\r\n        \r\n        // 5. Переводим в количество правильных ответов из 10\r\n        const correctAnswers = Math.round(finalCompletionRatio * totalPossibleAnswers);\r\n        \r\n        // 6. Передаем в TestsList количество правильных ответов и общее количество вопросов\r\n        this.$emit('test-complete', correctAnswers, totalPossibleAnswers);\r\n        return;\r\n      }\r\n      \r\n      if (this.streak >= 3) {\r\n        this.blinkRightDigit();\r\n      } else {\r\n        this.shiftSequence();\r\n      }\r\n    },\r\n    blinkRightDigit() {\r\n      this.isBlinking = true;\r\n      setTimeout(() => {\r\n        this.isBlinking = false;\r\n        this.shiftSequence();\r\n      }, 300);\r\n    },\r\n    shiftSequence() {\r\n      this.sequence = [\r\n        this.sequence[1],\r\n        this.sequence[2],\r\n        this.getRandomDigit(true, 0.8)\r\n      ];\r\n      this.transparencyLevels = [\r\n        this.transparencyLevels[0],\r\n        0,\r\n        0.4\r\n      ];\r\n      this.round++;\r\n    },\r\n    restartGame() {\r\n      this.sequence = [\r\n        this.getRandomDigit(false),\r\n        this.getRandomDigit(false),\r\n        this.getRandomDigit(true, 0.8)\r\n      ];\r\n      this.lives = 3;\r\n      this.score = 0;\r\n      this.round = 1;\r\n      this.correctAnswers = 0;\r\n      this.transparencyLevels = [0, 0, 0];\r\n      this.gameOver = false;\r\n      this.streak = 0;\r\n      this.isBlinking = false;\r\n      this.leftCounter = 0;\r\n      this.centerCounter = 0;\r\n      this.showRules = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.memory-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #ddf4f0;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #14b8a6; /* Сине-зеленый цвет для тестов на память */\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #14b8a6;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.rules-content {\r\n  text-align: left;\r\n  margin: 20px 0;\r\n}\r\n\r\n.example {\r\n  background-color: #effaf8;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin: 20px 0;\r\n  border-left: 4px solid #14b8a6;\r\n}\r\n\r\n.example-sequence {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 15px 0;\r\n  gap: 20px;\r\n}\r\n\r\n.example-digit {\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #14b8a6;\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n}\r\n\r\n.tips {\r\n  background-color: #fffbea;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin: 20px 0;\r\n  border-left: 4px solid #eab308;\r\n}\r\n\r\n/* Стили игрового экрана */\r\n.game-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #14b8a6;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.game-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.sequence-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  margin: 30px 0;\r\n}\r\n\r\n.digit-box {\r\n  width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #14b8a6;\r\n  color: white;\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(20, 184, 166, 0.2);\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin: 30px 0;\r\n}\r\n\r\n.controls button {\r\n  padding: 12px 30px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.no-button {\r\n  background-color: #f1f5f9;\r\n  color: #64748b;\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.yes-button {\r\n  background-color: #14b8a6;\r\n  color: white;\r\n}\r\n\r\n.no-button:hover {\r\n  background-color: #e2e8f0;\r\n  color: #475569;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.yes-button:hover {\r\n  background-color: #0d9488;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.stats {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin: 30px 0;\r\n  background-color: #f8fafc;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #64748b;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n/* Финальные результаты */\r\n.game-over-results {\r\n  background-color: #f0f9ff;\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  margin-top: 30px;\r\n  text-align: center;\r\n  border: 2px solid #14b8a6;\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.results-title {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #14b8a6;\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #effaf8;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #14b8a6;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #0d9488;\r\n}\r\n\r\n/* Стили для прозрачности */\r\n.opacity-0 { opacity: 1; }\r\n.opacity-1 { opacity: 0.8; }\r\n.opacity-2 { opacity: 0.6; }\r\n.opacity-3 { opacity: 0.4; }\r\n.opacity-4 { opacity: 0.2; }\r\n.opacity-5 { opacity: 0; }\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 28px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .digit-box {\r\n    width: 50px;\r\n    height: 50px;\r\n    font-size: 2rem;\r\n  }\r\n  \r\n  .sequence-container {\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .controls button {\r\n    padding: 10px 20px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .stat-label {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 16px;\r\n  }\r\n}\r\n</style>","import { render } from \"./NBackGame.vue?vue&type=template&id=38b97479&scoped=true\"\nimport script from \"./NBackGame.vue?vue&type=script&lang=js\"\nexport * from \"./NBackGame.vue?vue&type=script&lang=js\"\n\nimport \"./NBackGame.vue?vue&type=style&index=0&id=38b97479&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-38b97479\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"time-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на восприятие времени</h2>\r\n        <p>Проверьте свою способность оценивать временные интервалы. Вам нужно будет отмерить заданные промежутки времени, ориентируясь на свое внутреннее чувство.</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(records.length / maxAttempts) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Попытка {{ records.length + 1 }}/{{ maxAttempts }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <div class=\"time-selector\" v-if=\"!isTiming && !measuredTime\">\r\n          <h3 class=\"question-text\">Выберите временной интервал:</h3>\r\n          <div class=\"interval-buttons\">\r\n            <button\r\n              v-for=\"sec in intervals\"\r\n              :key=\"sec\"\r\n              @click=\"startInterval(sec)\"\r\n              class=\"interval-button\"\r\n            >\r\n              {{ sec }} секунд\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div \r\n          class=\"time-box\" \r\n          :class=\"{ 'waiting': !isTiming && !measuredTime, 'timing': isTiming, 'completed': measuredTime }\"\r\n          @click=\"handleClick\"\r\n        >\r\n          <div v-if=\"!isTiming && !measuredTime\" class=\"time-status\">\r\n            Выберите интервал и нажмите, чтобы начать\r\n          </div>\r\n          <div v-else-if=\"isTiming\" class=\"time-status\">\r\n            <p>Отсчитываем {{ chosenSec }} секунд</p>\r\n            <p class=\"time-instruction\">Нажмите, когда считаете, что время прошло</p>\r\n          </div>\r\n          <div v-else class=\"time-status\">\r\n            <p>Ваш результат: <span class=\"time-result\">{{ measuredTime.toFixed(2) }}</span> сек</p>\r\n            <p>Отклонение: <span class=\"time-deviation\" :class=\"getDeviationClass(measuredTime, chosenSec)\">\r\n              {{ getDeviation(measuredTime, chosenSec) }}\r\n            </span></p>\r\n            <button @click=\"resetTimer\" class=\"action-button\">Следующая попытка</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Результаты попыток -->\r\n      <div v-if=\"records.length > 0\" class=\"records-container\">\r\n        <h4 class=\"records-title\">Ваши результаты:</h4>\r\n        <div class=\"records-list\">\r\n          <div v-for=\"(record, idx) in records\" :key=\"idx\" class=\"record-item\">\r\n            <div class=\"record-info\">\r\n              <span class=\"record-label\">Задано:</span>\r\n              <span class=\"record-value\">{{ record.planned }} сек</span>\r\n            </div>\r\n            <div class=\"record-info\">\r\n              <span class=\"record-label\">Результат:</span>\r\n              <span class=\"record-value\">{{ record.measured.toFixed(2) }} сек</span>\r\n            </div>\r\n            <div class=\"record-info\">\r\n              <span class=\"record-label\">Отклонение:</span>\r\n              <span class=\"record-value\" :class=\"getDeviationClass(record.measured, record.planned)\">\r\n                {{ getDeviation(record.measured, record.planned) }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Финальные результаты -->\r\n      <div v-if=\"showFinalResults\" class=\"final-results\">\r\n        <div class=\"results-content\">\r\n          <div class=\"results-icon\" :class=\"{ 'high-score': averageError < 1 }\">\r\n            <svg v-if=\"averageError < 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n              <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n            </svg>\r\n            <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n              <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n            </svg>\r\n          </div>\r\n          \r\n          <h2 class=\"results-title\">Результаты теста</h2>\r\n          \r\n          <div class=\"score-display\">\r\n            <div class=\"score-circle\">\r\n              <span class=\"score-value\">{{ averageError.toFixed(2) }}</span>\r\n              <span class=\"score-unit\">сек</span>\r\n            </div>\r\n            <p class=\"score-label\">среднее отклонение</p>\r\n          </div>\r\n          \r\n          <div class=\"result-stats\">\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-label\">Лучший результат:</span>\r\n              <span class=\"stat-value\">{{ bestResult.toFixed(2) }} сек</span>\r\n            </div>\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-label\">Худший результат:</span>\r\n              <span class=\"stat-value\">{{ worstResult.toFixed(2) }} сек</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"result-message\">\r\n            <p v-if=\"averageError < 0.5\">Отличный результат! У вас исключительное чувство времени.</p>\r\n            <p v-else-if=\"averageError < 1\">Хороший результат! Ваше восприятие времени точнее, чем у большинства людей.</p>\r\n            <p v-else-if=\"averageError < 2\">Неплохой результат. У вас хорошее чувство времени.</p>\r\n            <p v-else>Восприятие времени можно тренировать! Регулярные упражнения помогут улучшить точность.</p>\r\n          </div>\r\n          \r\n          <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      intervals: [3, 5, 7, 10],\r\n      chosenSec: null,\r\n      startTime: null,\r\n      isTiming: false,\r\n      measuredTime: null,\r\n      records: [],\r\n      maxAttempts: 5,\r\n      showFinalResults: false\r\n    };\r\n  },\r\n  computed: {\r\n    averageError() {\r\n      if (this.records.length === 0) return 0;\r\n      const totalError = this.records.reduce((acc, rec) => acc + Math.abs(rec.planned - rec.measured), 0);\r\n      return totalError / this.records.length;\r\n    },\r\n    bestResult() {\r\n      if (this.records.length === 0) return 0;\r\n      return Math.min(...this.records.map(rec => Math.abs(rec.planned - rec.measured)));\r\n    },\r\n    worstResult() {\r\n      if (this.records.length === 0) return 0;\r\n      return Math.max(...this.records.map(rec => Math.abs(rec.planned - rec.measured)));\r\n    }\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.records = [];\r\n      this.showFinalResults = false;\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    startInterval(sec) {\r\n      this.chosenSec = sec;\r\n    },\r\n    \r\n    handleClick() {\r\n      if (this.measuredTime !== null || !this.chosenSec) {\r\n        return; // Если уже есть измерение или не выбран интервал\r\n      }\r\n      \r\n      if (!this.isTiming) {\r\n        // Начинаем отсчет\r\n        this.startTime = performance.now();\r\n        this.isTiming = true;\r\n      } else {\r\n        // Завершаем отсчет и фиксируем результат\r\n        const elapsed = (performance.now() - this.startTime) / 1000;\r\n        this.measuredTime = elapsed;\r\n        this.isTiming = false;\r\n        \r\n        // Сохраняем результат попытки\r\n        this.records.push({ \r\n          planned: this.chosenSec, \r\n          measured: elapsed \r\n        });\r\n        \r\n        // Если это была последняя попытка, показываем финальные результаты\r\n        if (this.records.length >= this.maxAttempts) {\r\n          setTimeout(() => {\r\n            this.showFinalResults = true;\r\n            this.$emit('test-complete', this.calculateScore());\r\n          }, 2000);\r\n        }\r\n      }\r\n    },\r\n    \r\n    resetTimer() {\r\n      this.chosenSec = null;\r\n      this.startTime = null;\r\n      this.isTiming = false;\r\n      this.measuredTime = null;\r\n    },\r\n    \r\n    getDeviation(measured, planned) {\r\n      const diff = (measured - planned).toFixed(2);\r\n      return diff > 0 ? `+${diff}` : `${diff}`;\r\n    },\r\n    \r\n    getDeviationClass(measured, planned) {\r\n      const diff = Math.abs(measured - planned);\r\n      if (diff < 0.5) return 'excellent';\r\n      if (diff < 1) return 'good';\r\n      if (diff < 2) return 'average';\r\n      return 'poor';\r\n    },\r\n    \r\n    calculateScore() {\r\n      // Расчет оценки: обратно пропорционально ошибке\r\n      // Если среднее отклонение 0.5 сек или меньше - 10 баллов\r\n      // Если 2 секунды и больше - 1 балл\r\n      return Math.max(1, Math.min(10, Math.round(10 - (this.averageError / 0.2))));\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.time-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f1f5f9;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #64748b;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #64748b;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #64748b;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.time-selector {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.interval-buttons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.75rem;\r\n  justify-content: center;\r\n}\r\n\r\n.interval-button {\r\n  padding: 0.75rem 1.25rem;\r\n  background-color: #f1f5f9;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #64748b;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.interval-button:hover {\r\n  background-color: #e2e8f0;\r\n  color: #475569;\r\n}\r\n\r\n.time-box {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  height: 200px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.time-box.waiting {\r\n  background-color: #f8fafc;\r\n  border: 2px dashed #cbd5e1;\r\n}\r\n\r\n.time-box.timing {\r\n  background-color: #fef2f2;\r\n  border: 2px solid #fee2e2;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.time-box.completed {\r\n  background-color: #f0f9ff;\r\n  border: 2px solid #bae6fd;\r\n  cursor: default;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.2);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);\r\n  }\r\n}\r\n\r\n.time-status {\r\n  text-align: center;\r\n  padding: 1.5rem;\r\n  width: 100%;\r\n}\r\n\r\n.time-instruction {\r\n  font-size: 14px;\r\n  color: #ef4444;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.time-result {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #0ea5e9;\r\n}\r\n\r\n.time-deviation {\r\n  font-weight: 600;\r\n}\r\n\r\n.time-deviation.excellent {\r\n  color: #10b981;\r\n}\r\n\r\n.time-deviation.good {\r\n  color: #0ea5e9;\r\n}\r\n\r\n.time-deviation.average {\r\n  color: #f59e0b;\r\n}\r\n\r\n.time-deviation.poor {\r\n  color: #ef4444;\r\n}\r\n\r\n/* Стили для списка результатов */\r\n.records-container {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin: 0 auto 1.5rem;\r\n}\r\n\r\n.records-title {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.records-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.record-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #f8fafc;\r\n  padding: 0.75rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.record-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.record-label {\r\n  font-size: 12px;\r\n  color: #64748b;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.record-value {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n/* Стили финальных результатов */\r\n.final-results {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n}\r\n\r\n.results-content {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n  max-width: 500px;\r\n  text-align: center;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f1f5f9;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  color: #64748b;\r\n}\r\n\r\n.score-unit {\r\n  font-size: 16px;\r\n  color: #94a3b8;\r\n  position: absolute;\r\n  bottom: 30px;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #64748b;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f1f5f9;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #64748b;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #475569;\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 28px;\r\n  }\r\n  \r\n  .score-unit {\r\n    font-size: 14px;\r\n    bottom: 25px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .time-box {\r\n    height: 150px;\r\n  }\r\n  \r\n  .interval-buttons {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .interval-button {\r\n    flex: 1;\r\n    min-width: 80px;\r\n    font-size: 14px;\r\n    padding: 0.625rem 1rem;\r\n  }\r\n  \r\n  .record-item {\r\n    padding: 0.625rem;\r\n  }\r\n  \r\n  .record-label {\r\n    font-size: 10px;\r\n  }\r\n  \r\n  .record-value {\r\n    font-size: 12px;\r\n  }\r\n}\r\n</style>","import { render } from \"./TimePerception.vue?vue&type=template&id=2fd50d32&scoped=true\"\nimport script from \"./TimePerception.vue?vue&type=script&lang=js\"\nexport * from \"./TimePerception.vue?vue&type=script&lang=js\"\n\nimport \"./TimePerception.vue?vue&type=style&index=0&id=2fd50d32&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2fd50d32\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"color-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"4\" r=\"2\"></circle>\r\n            <circle cx=\"5\" cy=\"12\" r=\"2\"></circle>\r\n            <circle cx=\"19\" cy=\"12\" r=\"2\"></circle>\r\n            <circle cx=\"8\" cy=\"20\" r=\"2\"></circle>\r\n            <circle cx=\"16\" cy=\"20\" r=\"2\"></circle>\r\n            <path d=\"M12 6v4\"></path>\r\n            <path d=\"M7 12h10\"></path>\r\n            <path d=\"M9 18l-1-3\"></path>\r\n            <path d=\"M15 18l1-3\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на различие цветов</h2>\r\n        <p>Проверьте свою способность различать тонкие оттенки цветов. Найдите квадрат, который отличается от остальных.</p>\r\n        \r\n        <div class=\"instruction-box\">\r\n          <h3>Как проходить тест:</h3>\r\n          <ol>\r\n            <li>Среди квадратов найдите тот, который отличается по цвету от остальных</li>\r\n            <li>Нажмите на отличающийся квадрат</li>\r\n            <li>С каждым уровнем различия в оттенках становятся менее заметными</li>\r\n            <li>Будьте внимательны, цвета могут быть очень близкими!</li>\r\n          </ol>\r\n        </div>\r\n        \r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с игрой -->\r\n    <div v-else-if=\"!testCompleted\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentLevel / maxLevels) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Уровень {{ currentLevel }}/{{ maxLevels }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <h3 class=\"question-text\">Выберите квадрат, который отличается от остальных:</h3>\r\n        \r\n        <div \r\n            class=\"color-grid\" \r\n            :class=\"[getGridSizeClass(), { 'disabled': showFeedback }]\"\r\n          >\r\n          <div \r\n            v-for=\"(color, index) in gridColors\" \r\n            :key=\"index\" \r\n            :style=\"{ backgroundColor: color }\"\r\n            :class=\"{ \r\n              'grid-item': true,\r\n              'correct-item': showFeedback && index === correctIndex,\r\n              'wrong-item': showFeedback && lastWrongIndex === index \r\n            }\"\r\n            @click=\"!showFeedback && checkAnswer(index)\">\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-if=\"showFeedback\" class=\"feedback-message\">\r\n          <div v-if=\"lastAnswerCorrect\" class=\"success-message\">\r\n            <p>✅ Правильно!</p>\r\n            <button @click=\"nextLevel\" class=\"action-button\">Продолжить</button>\r\n          </div>\r\n          <div v-else class=\"error-message\">\r\n            <p>❌ Неверно! Попробуйте снова.</p>\r\n            <button @click=\"tryAgain\" class=\"action-button\">Понятно</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stats-bar\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Верно:</span>\r\n            <span class=\"stat-value correct\">{{ correctAnswers }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Ошибки:</span>\r\n            <span class=\"stat-value incorrect\">{{ errorCount }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"skip-level\">\r\n          <button v-if=\"skipsRemaining > 0\" @click=\"skipLevel\" class=\"skip-button\">\r\n            Пропустить уровень ({{ skipsRemaining }} осталось)\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран результатов -->\r\n    <div v-if=\"testCompleted\" class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': score >= maxLevels * 0.7 }\">\r\n          <svg v-if=\"score >= maxLevels * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M12 2v4M12 18v4M4.93 4.93l2.83 2.83M16.24 16.24l2.83 2.83M2 12h4M18 12h4M4.93 19.07l2.83-2.83M16.24 7.76l2.83-2.83\"></path>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ score }}</span>\r\n            <span class=\"score-total\">/{{ maxLevels }}</span>\r\n          </div>\r\n          <p class=\"score-label\">пройденных уровней</p>\r\n        </div>\r\n        \r\n        <div class=\"result-stats\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Правильные ответы:</span>\r\n            <span class=\"stat-value\">{{ correctAnswers }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Ошибки:</span>\r\n            <span class=\"stat-value\">{{ errorCount }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Точность:</span>\r\n            <span class=\"stat-value\">{{ accuracy }}%</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"score >= maxLevels * 0.9\">Отличный результат! У вас исключительное цветовое восприятие.</p>\r\n          <p v-else-if=\"score >= maxLevels * 0.7\">Хороший результат! Вы хорошо различаете оттенки.</p>\r\n          <p v-else-if=\"score >= maxLevels * 0.5\">Неплохой результат. Есть потенциал для улучшения.</p>\r\n          <p v-else>Цветовое восприятие можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ColorTest',\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      testCompleted: false,\r\n      currentLevel: 1,\r\n      maxLevels: 10,\r\n      score: 0,\r\n      gridColors: [],\r\n      correctIndex: null,\r\n      errorCount: 0,\r\n      correctAnswers: 0,\r\n      totalAttempts: 0,\r\n      showFeedback: false,\r\n      lastAnswerCorrect: false,\r\n      lastWrongIndex: null,\r\n      skipsRemaining: 2  // Пользователь может пропустить до 2 уровней\r\n    };\r\n  },\r\n  computed: {\r\n    accuracy() {\r\n      if (this.totalAttempts === 0) return 0;\r\n      // Ограничиваем точность до 100% (не более)\r\n      return Math.min(100, Math.round((this.correctAnswers / this.totalAttempts) * 100));\r\n    }\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.testCompleted = false;\r\n      this.currentLevel = 1;\r\n      this.score = 0;\r\n      this.errorCount = 0;\r\n      this.correctAnswers = 0;\r\n      this.totalAttempts = 0;\r\n      this.showFeedback = false;\r\n      this.skipsRemaining = 2;\r\n      this.generateGrid();\r\n      this.$emit('test-start');\r\n    },\r\n    \r\n    getGridSizeClass() {\r\n      // Динамически определяем размер сетки в зависимости от уровня\r\n      // Начинаем с 2x2, затем 3x3, затем 4x4\r\n      if (this.currentLevel <= 3) return 'grid-small';\r\n      if (this.currentLevel <= 6) return 'grid-medium';\r\n      return 'grid-large';\r\n    },\r\n    \r\n    getGridSize() {\r\n      // Возвращает общее количество ячеек в сетке\r\n      if (this.currentLevel <= 3) return 4; // 2x2\r\n      if (this.currentLevel <= 6) return 9; // 3x3\r\n      return 16; // 4x4\r\n    },\r\n    \r\n    generateGrid() {\r\n      // Базовая логика генерации цветов\r\n      const baseColor = this.randomColor();\r\n      let differentColor;\r\n      \r\n      // Используем разные дельты для разных уровней и проверяем, что цвета отличаются\r\n      let maxAttempts = 5;  // Ограничиваем количество попыток для избежания бесконечного цикла\r\n      let attempts = 0;\r\n      let validColorFound = false;\r\n      \r\n      while (!validColorFound && attempts < maxAttempts) {\r\n        attempts++;\r\n        differentColor = this.generateSimilarColor(baseColor, this.currentLevel);\r\n        // Проверяем, достаточно ли отличается цвет\r\n        const colorDifference = this.calculateColorDifference(baseColor, differentColor);\r\n        // Минимальная разница должна уменьшаться с каждым уровнем, но не должна быть нулевой\r\n        const minDifference = Math.max(5, 30 - (this.currentLevel * 2.5));\r\n        \r\n        if (colorDifference >= minDifference) {\r\n          validColorFound = true;  // Если цвета достаточно разные, выходим из цикла\r\n        }\r\n      }\r\n      \r\n      // Если не удалось найти подходящий цвет, используем последний сгенерированный\r\n      if (!validColorFound && attempts > 0) {\r\n        // differentColor уже содержит последний сгенерированный цвет\r\n      }\r\n      \r\n      // Размер сетки увеличивается с уровнем сложности\r\n      const gridSize = this.getGridSize();\r\n      \r\n      this.gridColors = Array(gridSize).fill(baseColor);\r\n      this.correctIndex = Math.floor(Math.random() * gridSize);\r\n      this.gridColors[this.correctIndex] = differentColor;\r\n    },\r\n    \r\n    calculateColorDifference(color1, color2) {\r\n      // Извлекаем RGB компоненты\r\n      const r1 = parseInt(color1.slice(1, 3), 16);\r\n      const g1 = parseInt(color1.slice(3, 5), 16);\r\n      const b1 = parseInt(color1.slice(5, 7), 16);\r\n      \r\n      const r2 = parseInt(color2.slice(1, 3), 16);\r\n      const g2 = parseInt(color2.slice(3, 5), 16);\r\n      const b2 = parseInt(color2.slice(5, 7), 16);\r\n      \r\n      // Вычисляем среднее различие по каналам\r\n      return Math.abs(r1 - r2) + Math.abs(g1 - g2) + Math.abs(b1 - b2);\r\n    },\r\n    \r\n    generateSimilarColor(baseColor, level) {\r\n      // Убираем \"#\" из baseColor и преобразуем его в массив RGB\r\n      let r = parseInt(baseColor.slice(1, 3), 16);\r\n      let g = parseInt(baseColor.slice(3, 5), 16);\r\n      let b = parseInt(baseColor.slice(5, 7), 16);\r\n\r\n      // Чем выше уровень, тем меньше разница в цвете\r\n      // Начинаем с разницы 30 на первом уровне и уменьшаем до минимума 8\r\n      const delta = Math.max(8, 30 - (level * 2));\r\n      \r\n      // Выбираем случайный канал(ы) для изменения, чтобы избежать одновременного изменения всех каналов\r\n      const channels = Math.floor(Math.random() * 3) + 1; // 1, 2 или 3 канала\r\n      \r\n      if (channels === 1 || channels === 3) {\r\n        // Изменяем красный канал\r\n        r = Math.min(255, Math.max(0, r + (Math.random() > 0.5 ? delta : -delta)));\r\n      }\r\n      \r\n      if (channels === 2 || channels === 3) {\r\n        // Изменяем зеленый канал\r\n        g = Math.min(255, Math.max(0, g + (Math.random() > 0.5 ? delta : -delta)));\r\n      }\r\n      \r\n      if (channels === 1 || channels === 2) {\r\n        // Изменяем синий канал\r\n        b = Math.min(255, Math.max(0, b + (Math.random() > 0.5 ? delta : -delta)));\r\n      }\r\n\r\n      // Преобразуем обратно в шестнадцатеричный цвет\r\n      return `#${r.toString(16).padStart(2, \"0\")}${g\r\n        .toString(16)\r\n        .padStart(2, \"0\")}${b.toString(16).padStart(2, \"0\")}`;\r\n    },\r\n    \r\n    checkAnswer(index) {\r\n      this.totalAttempts++;\r\n      this.showFeedback = true;\r\n      \r\n      if (index === this.correctIndex) {\r\n        // Правильный ответ\r\n        this.lastAnswerCorrect = true;\r\n        this.correctAnswers++;\r\n        this.score = this.currentLevel;\r\n      } else {\r\n        // Неправильный ответ\r\n        this.lastAnswerCorrect = false;\r\n        this.errorCount++;\r\n        this.lastWrongIndex = index;\r\n      }\r\n    },\r\n    \r\n    tryAgain() {\r\n      this.showFeedback = false;\r\n      this.lastWrongIndex = null;\r\n      // Не меняем сетку, даем еще одну попытку\r\n    },\r\n    \r\n    nextLevel() {\r\n      if (this.currentLevel < this.maxLevels) {\r\n        this.currentLevel++;\r\n        this.showFeedback = false;\r\n        this.generateGrid();\r\n      } else {\r\n        this.endTest();\r\n      }\r\n    },\r\n    \r\n    skipLevel() {\r\n      if (this.skipsRemaining > 0) {\r\n        this.skipsRemaining--;\r\n        \r\n        if (this.currentLevel < this.maxLevels) {\r\n          this.currentLevel++;\r\n          this.showFeedback = false;\r\n          this.generateGrid();\r\n        } else {\r\n          this.endTest();\r\n        }\r\n      }\r\n    },\r\n    \r\n    endTest() {\r\n      this.testCompleted = true;\r\n      this.$emit('test-complete', this.score, this.maxLevels);\r\n    },\r\n    \r\n    restartTest() {\r\n      this.startTest();\r\n    },\r\n    \r\n    randomColor() {\r\n      // Генерируем случайный цвет, но избегаем очень темных и очень светлых оттенков\r\n      const minValue = 50;  // Минимальное значение для каждого канала (не слишком темный)\r\n      const maxValue = 200; // Максимальное значение для каждого канала (не слишком светлый)\r\n      \r\n      const r = minValue + Math.floor(Math.random() * (maxValue - minValue));\r\n      const g = minValue + Math.floor(Math.random() * (maxValue - minValue));\r\n      const b = minValue + Math.floor(Math.random() * (maxValue - minValue));\r\n      \r\n      return `#${r.toString(16).padStart(2, \"0\")}${g.toString(16).padStart(2, \"0\")}${b.toString(16).padStart(2, \"0\")}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.color-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f7e2fa;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #d946ef;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #d946ef;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 1rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.instruction-box {\r\n  background-color: #f7e2fa;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  text-align: left;\r\n  border-left: 4px solid #d946ef;\r\n}\r\n\r\n.instruction-box h3 {\r\n  color: #d946ef;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 18px;\r\n}\r\n\r\n.instruction-box ol {\r\n  padding-left: 1.25rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.instruction-box li {\r\n  margin-bottom: 0.5rem;\r\n  color: #4b5563;\r\n}\r\n\r\n/* Стили экрана вопроса */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #d946ef;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.color-grid {\r\n  display: grid;\r\n  gap: 10px;\r\n  max-width: 450px;\r\n  margin: 0 auto 1.5rem;\r\n}\r\n\r\n.grid-small {\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(2, 1fr);\r\n}\r\n\r\n.grid-medium {\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n}\r\n\r\n.grid-large {\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(4, 1fr);\r\n}\r\n\r\n.color-grid.disabled {\r\n  pointer-events: none;\r\n}\r\n\r\n.grid-item {\r\n  width: 90px;\r\n  height: 90px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n}\r\n\r\n.grid-item:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.grid-item.correct-item {\r\n  box-shadow: 0 0 0 3px #10b981, 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  animation: pulse-green 1s infinite;\r\n}\r\n\r\n.grid-item.wrong-item {\r\n  box-shadow: 0 0 0 3px #ef4444, 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  animation: pulse-red 1s infinite;\r\n}\r\n\r\n@keyframes pulse-green {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(16, 185, 129, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0);\r\n  }\r\n}\r\n\r\n@keyframes pulse-red {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);\r\n  }\r\n}\r\n\r\n.feedback-message {\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n  width: 100%;\r\n  max-width: 450px;\r\n}\r\n\r\n.success-message {\r\n  background-color: #dcfce7;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  color: #10b981;\r\n}\r\n\r\n.error-message {\r\n  background-color: #fee2e2;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  color: #ef4444;\r\n}\r\n\r\n.stats-bar {\r\n  display: flex;\r\n  gap: 2rem;\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 12px;\r\n  color: #6b7280;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.stat-value.correct {\r\n  color: #10b981;\r\n}\r\n\r\n.stat-value.incorrect {\r\n  color: #ef4444;\r\n}\r\n\r\n.skip-level {\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.skip-button {\r\n  background-color: #f9fafb;\r\n  color: #6b7280;\r\n  border: 1px solid #e5e7eb;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.skip-button:hover {\r\n  background-color: #e5e7eb;\r\n  color: #4b5563;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f7e2fa;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #d946ef;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #d946ef;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #c026d3;\r\n}\r\n\r\n.action-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .grid-item {\r\n    width: 50px;  /* Уменьшение ширины квадрата */\r\n    height: 50px; /* Уменьшение высоты квадрата */\r\n  }\r\n  \r\n  .color-grid {\r\n    gap: 5px; /* Уменьшение отступов между квадратами */\r\n  }\r\n  \r\n  .grid-small {\r\n    grid-template-columns: repeat(2, 1fr); /* 2 колонки для маленькой сетки */\r\n    grid-template-rows: repeat(2, 1fr);\r\n  }\r\n\r\n  .grid-medium {\r\n    grid-template-columns: repeat(3, 1fr); /* 3 колонки для средней сетки */\r\n    grid-template-rows: repeat(3, 1fr);\r\n  }\r\n\r\n  .grid-large {\r\n    grid-template-columns: repeat(4, 1fr); /* 4 колонки для большой сетки */\r\n    grid-template-rows: repeat(4, 1fr);\r\n  }\r\n}\r\n</style>","import { render } from \"./ColorTest.vue?vue&type=template&id=6e0303b6\"\nimport script from \"./ColorTest.vue?vue&type=script&lang=js\"\nexport * from \"./ColorTest.vue?vue&type=script&lang=js\"\n\nimport \"./ColorTest.vue?vue&type=style&index=0&id=6e0303b6&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"puzzle-test\">\r\n    <!-- Начальный экран -->\r\n    <div v-if=\"!testStarted\" class=\"intro-screen\">\r\n      <div class=\"intro-content\">\r\n        <div class=\"intro-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2>Тест на пространственное мышление</h2>\r\n        <p>Проверьте свою способность визуально организовывать и собирать изображения из отдельных фрагментов</p>\r\n        <button @click=\"startTest\" class=\"action-button\">Начать тест</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран с тестом -->\r\n    <div v-else-if=\"!isFinished\" class=\"question-screen\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-indicator\" :style=\"{ width: `${(currentLevel / levels.length) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Уровень {{ currentLevel }}/{{ levels.length }}\r\n      </div>\r\n\r\n      <div class=\"question-container\">\r\n        <h3 class=\"question-text\">Соберите изображение, перетаскивая фрагменты</h3>\r\n        \r\n        <div class=\"puzzle-grid\" \r\n        :style=\"{ gridTemplateColumns: `repeat(${gridX}, 1fr)`, gridTemplateRows: `repeat(${gridY}, 1fr)` }\">\r\n          <div\r\n            v-for=\"(piece, index) in shuffledPieces\"\r\n            :key=\"index\"\r\n            class=\"puzzle-piece\"\r\n            :style=\"{ backgroundImage: `url(${currentImage})`, backgroundPosition: piece.position }\"\r\n            @dragstart=\"dragStart(index)\"\r\n            @dragover.prevent\r\n            @drop=\"drop(index)\"\r\n            @click=\"handlePieceClick(index)\" \r\n            draggable=\"true\"\r\n          ></div>\r\n        </div>\r\n        \r\n        <div class=\"puzzle-actions\">\r\n          <button @click=\"shufflePuzzle\" class=\"secondary-button\">Перемешать</button>\r\n          <button @click=\"checkPuzzle\" class=\"action-button\">Проверить</button>\r\n        </div>\r\n        \r\n        <div class=\"feedback-message\" v-if=\"errorMessage || isSolved\">\r\n          <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n          <div v-if=\"isSolved\" class=\"success-message\">\r\n            <p>✅ Правильно! Пазл собран верно.</p>\r\n            <button v-if=\"currentLevel < levels.length\" @click=\"nextLevel\" class=\"action-button\">Следующий уровень</button>\r\n            <button v-else @click=\"finishTest\" class=\"action-button\">Завершить тест</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Экран результатов -->\r\n    <div v-else class=\"results-screen\">\r\n      <div class=\"results-content\">\r\n        <div class=\"results-icon\" :class=\"{ 'high-score': score >= levels.length * 0.7 }\">\r\n          <svg v-if=\"score >= levels.length * 0.7\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M12 2v4M12 18v4M4.93 4.93l2.83 2.83M16.24 16.24l2.83 2.83M2 12h4M18 12h4M4.93 19.07l2.83-2.83M16.24 7.76l2.83-2.83\"></path>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M8 15h8M10 9h.01M14 9h.01\"></path>\r\n          </svg>\r\n        </div>\r\n        \r\n        <h2 class=\"results-title\">Результаты теста</h2>\r\n        \r\n        <div class=\"score-display\">\r\n          <div class=\"score-circle\">\r\n            <span class=\"score-value\">{{ score }}</span>\r\n            <span class=\"score-total\">/{{ levels.length }}</span>\r\n          </div>\r\n          <p class=\"score-label\">собранных пазлов</p>\r\n        </div>\r\n        \r\n        <div class=\"result-stats\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Попытки:</span>\r\n            <span class=\"stat-value\">{{ attempts }}</span>\r\n          </div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-label\">Точность:</span>\r\n            <span class=\"stat-value\">{{ accuracy }}%</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"result-message\">\r\n          <p v-if=\"score >= levels.length * 0.9\">Отличный результат! У вас великолепное пространственное мышление.</p>\r\n          <p v-else-if=\"score >= levels.length * 0.7\">Хороший результат! Ваше пространственное мышление хорошо развито.</p>\r\n          <p v-else-if=\"score >= levels.length * 0.5\">Неплохой результат. Есть потенциал для улучшения.</p>\r\n          <p v-else>Пространственное мышление можно тренировать! Регулярные упражнения помогут улучшить результаты.</p>\r\n        </div>\r\n        \r\n        <button @click=\"restartTest\" class=\"action-button\">Пройти тест снова</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PuzzleGame\",\r\n  data() {\r\n    return {\r\n      testStarted: false,\r\n      levels: [ [2, 2], [3, 2], [3, 3], [4, 3], [4, 4] ], // Размер сетки на каждом уровне\r\n      currentLevel: 1,\r\n      gridX: 2,\r\n      gridY: 2,\r\n      pieces: [],\r\n      shuffledPieces: [],\r\n      originalPieces: [], // Сохраняем оригинальный порядок пазлов\r\n      draggedIndex: null,\r\n      score: 0,\r\n      attempts: 0,\r\n      isSolved: false,\r\n      isFinished: false,\r\n      errorMessage: \"\",\r\n      levelImages: [\r\n        'https://i.imgur.com/S7e0ZVG.jpeg',\r\n        'https://i.imgur.com/mDMhTAU.jpeg',\r\n        'https://i.imgur.com/BTIbfAS.jpeg',\r\n        'https://i.imgur.com/WpuHQxI.jpeg',\r\n        'https://i.imgur.com/vFhmOxb.jpeg'\r\n      ],\r\n      firstSelectedIndex: null,\r\n    };\r\n  },\r\n  computed: {\r\n    currentImage() {\r\n      return this.levelImages[this.currentLevel - 1];\r\n    },\r\n    accuracy() {\r\n      return this.attempts > 0 ? ((this.score / this.attempts) * 100).toFixed(1) : 0;\r\n    },\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.testStarted = true;\r\n      this.currentLevel = 1;\r\n      this.score = 0;\r\n      this.attempts = 0;\r\n      this.isFinished = false;\r\n      this.generatePuzzle();\r\n      this.$emit('test-start');\r\n    },\r\n    restartTest() {\r\n      this.startTest();\r\n    },\r\n    \r\n    generatePuzzle() {\r\n      // Логика генерации пазла\r\n      const [x, y] = this.levels[this.currentLevel - 1];\r\n      this.gridX = x;\r\n      this.gridY = y;\r\n\r\n      this.pieces = [];\r\n      // Рассчитываем размер шага для позиционирования фона\r\n      const totalCells = x * y;\r\n      const backgroundSize = 300; // Размер фона в пикселях\r\n      const cellWidth = backgroundSize / x;\r\n      const cellHeight = backgroundSize / y;\r\n\r\n      for (let i = 0; i < totalCells; i++) {\r\n        const row = Math.floor(i / x);\r\n        const col = i % x;\r\n        \r\n        this.pieces.push({\r\n          id: i,\r\n          position: `-${col * cellWidth}px -${row * cellHeight}px`,\r\n          correctIndex: i\r\n        });\r\n      }\r\n\r\n      // Сохраняем оригинальный порядок\r\n      this.originalPieces = JSON.parse(JSON.stringify(this.pieces));\r\n      \r\n      // Перемешиваем пазлы\r\n      this.shufflePuzzle();\r\n      this.isSolved = false;\r\n      this.errorMessage = \"\";\r\n    },\r\n\r\n    // Функция для перемешивания пазлов\r\n    shufflePuzzle() {\r\n      // Создаем новый массив с перемешанными элементами\r\n      // Используем метод для обеспечения хорошего перемешивания\r\n      const array = JSON.parse(JSON.stringify(this.pieces));\r\n      \r\n      // Проверяем, что пазл действительно перемешан\r\n      let isShuffled = false;\r\n      \r\n      while (!isShuffled) {\r\n        // Алгоритм перемешивания Фишера-Йейтса\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        \r\n        // Проверяем, что порядок отличается от правильного\r\n        let different = false;\r\n        for (let i = 0; i < array.length; i++) {\r\n          if (array[i].id !== i) {\r\n            different = true;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        isShuffled = different;\r\n      }\r\n      \r\n      this.shuffledPieces = array;\r\n    },\r\n\r\n    handlePieceClick(index) {\r\n      if (this.firstSelectedIndex === null) {\r\n        this.firstSelectedIndex = index;\r\n      } else {\r\n        [this.shuffledPieces[this.firstSelectedIndex], this.shuffledPieces[index]] =\r\n        [this.shuffledPieces[index], this.shuffledPieces[this.firstSelectedIndex]];\r\n        this.firstSelectedIndex = null;\r\n      }\r\n    },\r\n\r\n    dragStart(index) {\r\n      this.draggedIndex = index;\r\n    },\r\n\r\n    drop(index) {\r\n      if (this.draggedIndex !== null) {\r\n        // Меняем местами элементы\r\n        [this.shuffledPieces[index], this.shuffledPieces[this.draggedIndex]] =\r\n          [this.shuffledPieces[this.draggedIndex], this.shuffledPieces[index]];\r\n        this.draggedIndex = null;\r\n      }\r\n    },\r\n\r\n    // Проверка правильности собранного пазла\r\n    checkPuzzle() {\r\n      this.attempts++;\r\n      this.errorMessage = \"\";\r\n      \r\n      // Сравниваем текущее расположение с правильным\r\n      let isCorrect = true;\r\n      \r\n      for (let i = 0; i < this.shuffledPieces.length; i++) {\r\n        // Проверяем, находится ли элемент на своей позиции путем сравнения id с correctIndex\r\n        if (this.shuffledPieces[i].id !== this.originalPieces[i].id) {\r\n          isCorrect = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (isCorrect) {\r\n        this.isSolved = true;\r\n        this.score++;\r\n      } else {\r\n        this.errorMessage = \"❌ Пазл собран неправильно, попробуйте еще раз!\";\r\n      }\r\n    },\r\n\r\n    finishTest() {\r\n      this.isFinished = true;\r\n      this.$emit('test-complete', this.score, this.levels.length);\r\n    },\r\n\r\n    nextLevel() {\r\n      if (this.currentLevel < this.levels.length) {\r\n        this.currentLevel++;\r\n        this.generatePuzzle();\r\n        this.isSolved = false;\r\n      } else {\r\n        this.finishTest();\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.puzzle-test {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n/* Стили начального экрана */\r\n.intro-screen {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  background-color: white;\r\n}\r\n\r\n.intro-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.intro-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 1rem;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.intro-screen h2 {\r\n  color: #3b4ce2;\r\n  font-size: 28px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.intro-screen p {\r\n  color: #4b5563;\r\n  margin-bottom: 2rem;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Стили экрана с вопросом */\r\n.question-screen {\r\n  position: relative;\r\n  padding: 0;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 6px;\r\n  background-color: #e5e7eb;\r\n  width: 100%;\r\n}\r\n\r\n.progress-indicator {\r\n  height: 100%;\r\n  background-color: #3b4ce2;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n.question-container {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.puzzle-grid {\r\n  display: grid;\r\n  width: 300px;\r\n  height: 300px;\r\n  margin: 0 auto 1.5rem;\r\n  border: 2px solid #d1d5db;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.puzzle-piece {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: 300px 300px;\r\n  cursor: grab;\r\n  border: 1px solid #e5e7eb;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.puzzle-piece:hover {\r\n  transform: scale(0.98);\r\n}\r\n\r\n.puzzle-piece:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.puzzle-actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.feedback-message {\r\n  margin-top: 1rem;\r\n  padding: 0.75rem;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\n.success-message {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n  padding: 0.75rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.error-message {\r\n  background-color: #fee2e2;\r\n  color: #ef4444;\r\n  padding: 0.75rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n/* Стили экрана результатов */\r\n.results-screen {\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n}\r\n\r\n.results-content {\r\n  max-width: 500px;\r\n}\r\n\r\n.results-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #fee2e2;\r\n  border-radius: 50%;\r\n  margin-bottom: 1.5rem;\r\n  color: #ef4444;\r\n}\r\n\r\n.results-icon.high-score {\r\n  background-color: #dcfce7;\r\n  color: #10b981;\r\n}\r\n\r\n.results-title {\r\n  color: #1f2937;\r\n  font-size: 24px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-color: #f0f4ff;\r\n  border-radius: 50%;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: #3b4ce2;\r\n}\r\n\r\n.score-total {\r\n  font-size: 20px;\r\n  color: #6b7280;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 30px;\r\n}\r\n\r\n.score-label {\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  margin: 0;\r\n}\r\n\r\n.result-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.result-message {\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 8px;\r\n}\r\n\r\n.result-message p {\r\n  margin: 0;\r\n  color: #4b5563;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.action-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #3b4ce2;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #2d3ebd;\r\n}\r\n\r\n.secondary-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: white;\r\n  color: #3b4ce2;\r\n  border: 1px solid #3b4ce2;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.secondary-button:hover {\r\n  background-color: #f0f4ff;\r\n}\r\n\r\n.action-button:active, .secondary-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Адаптивность для мобильных устройств */\r\n@media (max-width: 640px) {\r\n  .intro-screen h2, .results-title {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .intro-screen p, .question-text, .result-message p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .score-total {\r\n    font-size: 18px;\r\n    right: 25px;\r\n  }\r\n  \r\n  .intro-icon, .results-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n  \r\n  .puzzle-grid {\r\n    width: 260px;\r\n    height: 260px;\r\n    background-size: 260px 260px;\r\n  }\r\n  \r\n  .puzzle-actions {\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n}\r\n</style>","import { render } from \"./PuzzleGame.vue?vue&type=template&id=14d02dc6&scoped=true\"\nimport script from \"./PuzzleGame.vue?vue&type=script&lang=js\"\nexport * from \"./PuzzleGame.vue?vue&type=script&lang=js\"\n\nimport \"./PuzzleGame.vue?vue&type=style&index=0&id=14d02dc6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-14d02dc6\"]])\n\nexport default __exports__","import { render } from \"./App1.vue?vue&type=template&id=28e9850b\"\nimport script from \"./App1.vue?vue&type=script&lang=js\"\nexport * from \"./App1.vue?vue&type=script&lang=js\"\n\nimport \"./App1.vue?vue&type=style&index=0&id=28e9850b&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"tests-container\">\r\n        <h1 class=\"tests-main-title\">Мои тесты</h1>\r\n  \r\n      <!-- Главное меню -->\r\n      <div v-if=\"!currentTest\" class=\"tests-menu\">\r\n        <div class=\"tests-menu-grid\">\r\n          <div\r\n            v-for=\"(test, key) in tests\"\r\n            :key=\"key\"\r\n            class=\"tests-menu-item\"\r\n            :class=\"{ 'completed-test': isTestCompleted(key) }\"\r\n            @click=\"selectTest(key)\"\r\n          >\r\n            <div class=\"tests-menu-item-icon\" :class=\"getIconClass(key)\">\r\n              <i class=\"icon\" v-html=\"getTestIcon(key)\"></i>\r\n            </div>\r\n            <div class=\"tests-menu-item-info\">\r\n              <div class=\"tests-menu-item-title\">\r\n                {{ test }}\r\n                <span v-if=\"isTestCompleted(key)\" class=\"completed-badge\" :title=\"`Пройдено: ${getCompletedCount(key)} раз`\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"completed-icon\">\r\n                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                    <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                  </svg>\r\n                  <span class=\"attempts-count\">{{ getCompletedCount(key) }}</span>\r\n                </span>\r\n              </div>\r\n              \r\n              <div class=\"test-meta-info\">\r\n                <span class=\"tests-menu-item-category\">{{ getCategoryName(getTestCategory(key)) }}</span>\r\n                <span class=\"difficulty-badge\" :class=\"getDifficultyClass(key)\">{{ getDifficultyLabel(key) }}</span>\r\n              </div>\r\n              \r\n              <!-- Показываем лучший результат для пройденных тестов -->\r\n              <div v-if=\"isTestCompleted(key)\" class=\"best-result\">\r\n                <div class=\"best-result-label\">Лучший результат:</div>\r\n                <div class=\"progress-bar-container\">\r\n                  <div class=\"progress-bar\">\r\n                    <div class=\"progress-fill\" :style=\"{ width: `${getBestAccuracy(key)}%` }\" :class=\"getAccuracyClass(getBestAccuracy(key))\"></div>\r\n                  </div>\r\n                  <span class=\"progress-value\">{{ getBestAccuracy(key) }}%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Контейнер теста -->\r\n      <div v-else class=\"test-active-container\">\r\n        <div class=\"test-header\">\r\n          <button @click=\"backToMenu\" class=\"back-button\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\r\n              <polyline points=\"12 19 5 12 12 5\"></polyline>\r\n            </svg>\r\n            Назад к списку\r\n          </button>\r\n          <h2 class=\"test-title\">{{ tests[currentTest] }}</h2>\r\n          <Timer ref=\"timer\" class=\"test-timer\" />\r\n        </div>\r\n        \r\n        <div class=\"test-content\">\r\n          <component\r\n            :is=\"currentTest\"\r\n            @test-complete=\"onTestComplete\"\r\n            @test-start=\"onTestStart\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Timer from '../components/Tests/Test1/ThisTimer.vue';\r\n  import AttentionTest from '../components/Tests/Test1/AttentionTest.vue';\r\n  import ReactionTest from '../components/Tests/Test1/ReactionTest.vue';\r\n  import MemoryTest from '../components/Tests/Test1/MemoryTest.vue';\r\n  import TextSelectionTest from '../components/Tests/Test1/TextSelectionTest.vue';\r\n  import SumDigitsTest from '../components/Tests/Test1/SumDigitsTest.vue';\r\n  import SecondTest from '../components/Tests/Test2/SecondTest.vue';\r\n  import ThirdTest from '../components/Tests/Test2/ThirdTest.vue';\r\n  import FourthTest from '../components/Tests/Test2/FourthTest.vue';\r\n  import FifthTest from '../components/Tests/Test2/FifthTest.vue';\r\n  import SovietLogicTest from '../components/Tests/Test3/SovietLogicTest.vue';\r\n  import SpatialSkillTest from '../components/Tests/Test3/SpatialThinkingTest.vue';\r\n  import QuickResponseTest from '../components/Tests/Test3/ReactionTimeTest.vue';\r\n  import NBackMemory from '../components/Tests/Test3/NBackGame.vue';\r\n  import TimeEvaluator from '../components/Tests/Test3/TimePerception.vue';\r\n  import ColorTest from '../components/Tests/Test4/ColorTest.vue';\r\n  import PuzzleGame from '../components/Tests/Test4/PuzzleGame.vue';\r\n  \r\n  export default {\r\n    name: 'TestsListPage',\r\n    components: {\r\n      Timer,\r\n      AttentionTest,\r\n      ReactionTest,\r\n      MemoryTest,\r\n      TextSelectionTest,\r\n      SumDigitsTest,\r\n      SecondTest,\r\n      ThirdTest,\r\n      FourthTest,\r\n      FifthTest,\r\n      SovietLogicTest,\r\n      SpatialSkillTest,\r\n      QuickResponseTest,\r\n      NBackMemory,\r\n      TimeEvaluator,\r\n      ColorTest,\r\n      PuzzleGame\r\n    },\r\n    data() {\r\n      return {\r\n        currentTest: null,\r\n        tests: {\r\n          SumDigitsTest: 'Устный счет',\r\n          AttentionTest: 'Внимание',\r\n          ReactionTest: 'Реакция',\r\n          MemoryTest: 'Память',\r\n          TextSelectionTest: 'Выбор текста',\r\n          SecondTest: 'Внимание 2',\r\n          ThirdTest: 'Концентрация',\r\n          FourthTest: 'Память 2',\r\n          FifthTest: 'Тест струппа',\r\n          SovietLogicTest: 'Логические загадки',\r\n          SpatialSkillTest: 'Пространственное мышление 2',\r\n          QuickResponseTest: 'Реакция 2',\r\n          NBackMemory: 'Память 3',\r\n          TimeEvaluator: 'Оценка времени',\r\n          ColorTest: 'Различие цветов',\r\n          PuzzleGame: 'Сборка пазлов'\r\n        },\r\n        // Категории тестов для определения иконок\r\n        testCategories: {\r\n          'math': ['SumDigitsTest'],\r\n          'attention': ['AttentionTest', 'SecondTest', 'ThirdTest', 'FifthTest'],\r\n          'reaction': ['ReactionTest', 'QuickResponseTest'],\r\n          'memory': ['MemoryTest', 'FourthTest', 'NBackMemory'],\r\n          'verbal': ['TextSelectionTest'],\r\n          'spatial': ['SpatialSkillTest', 'PuzzleGame'],\r\n          'logic': ['SovietLogicTest'],\r\n          'time': ['TimeEvaluator'],\r\n          'perception': ['ColorTest']\r\n        },\r\n        // Уровни сложности для тестов\r\n        testDifficulties: {\r\n          'easy': ['AttentionTest', 'ReactionTest'],\r\n          'medium': ['SumDigitsTest', 'MemoryTest', 'TextSelectionTest', 'SecondTest', 'ThirdTest', 'FifthTest', 'QuickResponseTest', 'TimeEvaluator', 'ColorTest', 'PuzzleGame'],\r\n          'hard': ['FourthTest', 'SovietLogicTest', 'SpatialSkillTest', 'NBackMemory']\r\n        },\r\n        // SVG иконки для каждой категории\r\n        categoryIcons: {\r\n          'math': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M4 7l4-2.5 4 2.5 4-2.5 4 2.5\"></path><path d=\"M4 12l4-2.5 4 2.5 4-2.5 4 2.5\"></path><path d=\"M4 17l4-2.5 4 2.5 4-2.5 4 2.5\"></path></svg>',\r\n          'attention': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\r\n          'reaction': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M13 2L3 14h9l-1 8 10-16h-9l1-4z\"></path></svg>',\r\n          'memory': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\"></rect><path d=\"M8 2v4\"></path><path d=\"M16 2v4\"></path><circle cx=\"12\" cy=\"11\" r=\"3\"></circle><path d=\"M12 14v4\"></path></svg>',\r\n          'verbal': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line><line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line><polyline points=\"10 9 9 9 8 9\"></polyline></svg>',\r\n          'spatial': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path></svg>',\r\n          'logic': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M13 6h3a2 2 0 0 1 2 2v7\"></path><path d=\"M11 18H8a2 2 0 0 1-2-2V9\"></path></svg>',\r\n          'time': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline></svg>',\r\n          'perception': '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"4\" r=\"2\"></circle><circle cx=\"5\" cy=\"12\" r=\"2\"></circle><circle cx=\"19\" cy=\"12\" r=\"2\"></circle><circle cx=\"8\" cy=\"20\" r=\"2\"></circle><circle cx=\"16\" cy=\"20\" r=\"2\"></circle><path d=\"M12 6v4\"></path><path d=\"M7 12h10\"></path><path d=\"M9 18l-1-3\"></path><path d=\"M15 18l1-3\"></path></svg>'\r\n        },\r\n        // Названия категорий\r\n        categoryNames: {\r\n          'math': 'Математика',\r\n          'attention': 'Внимание',\r\n          'reaction': 'Реакция',\r\n          'memory': 'Память',\r\n          'verbal': 'Вербальные',\r\n          'spatial': 'Пространственные',\r\n          'logic': 'Логика',\r\n          'time': 'Восприятие времени',\r\n          'perception': 'Восприятие'\r\n        }\r\n      };\r\n    },\r\n    computed: {\r\n      isAuthenticated() {\r\n        return this.$store.state.token !== null;\r\n      },\r\n      testResults() {\r\n        return this.$store.state.testResults || [];\r\n      }\r\n    },\r\n    methods: {\r\n      selectTest(testName) {\r\n        this.currentTest = testName;\r\n      },\r\n      backToMenu() {\r\n        this.currentTest = null;\r\n      },\r\n      onTestComplete(score, total_test = 10) {\r\n        this.$refs.timer.stopTimer();\r\n        const totalTime = this.$refs.timer.timeElapsed;\r\n        \r\n        // Сохраняем результат теста\r\n        this.saveTestResult(score, total_test, totalTime);\r\n        \r\n        // Показываем результат\r\n        this.showTestResult(score, total_test, totalTime);\r\n      },\r\n      onTestStart() {\r\n        this.$refs.timer.resetTimer();\r\n        this.$refs.timer.startTimer();\r\n      },\r\n      // Проверка, проходил ли пользователь тест\r\n      isTestCompleted(testKey) {\r\n        const testName = this.tests[testKey];\r\n        return this.testResults.some(result => result.test.test_name === testName);\r\n      },\r\n      // Получение количества попыток прохождения теста\r\n      getCompletedCount(testKey) {\r\n        const testName = this.tests[testKey];\r\n        const results = this.testResults.filter(result => result.test.test_name === testName);\r\n        return results.length;\r\n      },\r\n      // Получение лучшего результата точности теста\r\n      getBestAccuracy(testKey) {\r\n        const testName = this.tests[testKey];\r\n        const results = this.testResults.filter(result => result.test.test_name === testName);\r\n        if (results.length === 0) return 0;\r\n        \r\n        const accuracies = results.map(result => result.accuracy);\r\n        return Math.max(...accuracies);\r\n      },\r\n      // Получение класса для индикатора точности\r\n      getAccuracyClass(accuracy) {\r\n        if (accuracy >= 80) return 'high-accuracy';\r\n        if (accuracy >= 50) return 'medium-accuracy';\r\n        return 'low-accuracy';\r\n      },\r\n      // Определение категории теста\r\n      getTestCategory(testName) {\r\n        for (const [category, tests] of Object.entries(this.testCategories)) {\r\n          if (tests.includes(testName)) {\r\n            return category;\r\n          }\r\n        }\r\n        return 'attention'; // По умолчанию, если категория не найдена\r\n      },\r\n      // Получение SVG-иконки для теста\r\n      getTestIcon(testName) {\r\n        const category = this.getTestCategory(testName);\r\n        return this.categoryIcons[category];\r\n      },\r\n      // Получение класса для контейнера иконки в зависимости от категории\r\n      getIconClass(testName) {\r\n        const category = this.getTestCategory(testName);\r\n        return `icon-${category}`;\r\n      },\r\n      // Получение названия категории\r\n      getCategoryName(categoryKey) {\r\n        return this.categoryNames[categoryKey] || 'Другое';\r\n      },\r\n      // Определение сложности теста\r\n      getTestDifficulty(testName) {\r\n        for (const [difficulty, tests] of Object.entries(this.testDifficulties)) {\r\n          if (tests.includes(testName)) {\r\n            return difficulty;\r\n          }\r\n        }\r\n        return 'medium'; // Средняя сложность по умолчанию\r\n      },\r\n      // Получение метки сложности\r\n      getDifficultyLabel(testName) {\r\n        const difficulty = this.getTestDifficulty(testName);\r\n        switch(difficulty) {\r\n          case 'easy': return 'Легкий';\r\n          case 'medium': return 'Средний';\r\n          case 'hard': return 'Сложный';\r\n          default: return 'Средний';\r\n        }\r\n      },\r\n      // Получение класса для индикатора сложности\r\n      getDifficultyClass(testName) {\r\n        const difficulty = this.getTestDifficulty(testName);\r\n        return `difficulty-${difficulty}`;\r\n      },\r\n      async saveTestResult(score, total, time) {\r\n        try {\r\n          const testName = this.tests[this.currentTest];\r\n          const seconds = Math.floor(time / 1000);\r\n          const percentage = Math.round((score / total) * 100);\r\n          \r\n          // Определяем номер попытки\r\n          let tryNumber = 1;\r\n          \r\n          // Получаем текущие результаты для этого теста\r\n          const existingResults = this.$store.state.testResults.filter(\r\n            result => result.test.test_name === testName\r\n          );\r\n          \r\n          // Если есть предыдущие попытки, увеличиваем номер\r\n          if (existingResults.length > 0) {\r\n            // Находим максимальный номер попытки\r\n            const maxTryNumber = Math.max(...existingResults.map(r => r.try_number || 1));\r\n            tryNumber = maxTryNumber + 1;\r\n          }\r\n          \r\n          // Создаем объект с результатами\r\n          const testResult = {\r\n            test: {\r\n              test_id: Object.keys(this.tests).indexOf(this.currentTest) + 1,\r\n              test_name: testName\r\n            },\r\n            try_number: tryNumber,\r\n            number_all_answers: total,\r\n            number_correct_answers: score,\r\n            accuracy: percentage,\r\n            completion_time_seconds: seconds,\r\n            complete_time: new Date().toISOString()\r\n          };\r\n          \r\n          // Сохраняем результат в хранилище Vuex\r\n          this.$store.commit('addTestResult', testResult);\r\n          \r\n          console.log('Сохранение результатов теста:', testResult);\r\n        } catch (error) {\r\n          console.error('Ошибка при сохранении результатов:', error);\r\n        }\r\n      },\r\n      showTestResult(score, total, time) {\r\n        const seconds = Math.floor(time / 1000);\r\n        const percentage = Math.round((score / total) * 100);\r\n        \r\n        let resultMessage = '';\r\n        if (percentage >= 90) {\r\n          resultMessage = 'Отличный результат!';\r\n        } else if (percentage >= 70) {\r\n          resultMessage = 'Хороший результат!';\r\n        } else if (percentage >= 50) {\r\n          resultMessage = 'Неплохой результат.';\r\n        } else {\r\n          resultMessage = 'Есть куда расти.';\r\n        }\r\n        \r\n        alert(`${resultMessage}\\nВы завершили тест \"${this.tests[this.currentTest]}\" за ${seconds} секунд.\\nВаш результат: ${score} из ${total} (${percentage}%).`);\r\n        \r\n        this.backToMenu();\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\");\r\n  \r\n  .tests-container {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n    font-family: 'Inter', sans-serif;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .tests-main-title {\r\n    font-size: 2.25rem;\r\n    color: #111827;\r\n    text-align: center;\r\n    margin-bottom: 3rem;\r\n    font-weight: 700;\r\n  }\r\n  \r\n  .tests-menu {\r\n    margin-bottom: 3rem;\r\n  }\r\n  \r\n  .tests-menu-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .tests-menu-item {\r\n    background-color: #fff;\r\n    border-radius: 0.75rem;\r\n    box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.05);\r\n    padding: 1.5rem;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    border: 1px solid #f3f4f6;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  /* Стилизация для пройденных тестов */\r\n  .completed-test {\r\n  background-color: #f8fafc;\r\n  border-color: #cbd5e1;\r\n}\r\n\r\n.tests-menu-item:hover {\r\n  transform: translateY(-0.25rem);\r\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\r\n  background-color: #f9fafb;\r\n  border-color: #e5e7eb;\r\n}\r\n  \r\n  .tests-menu-item-icon {\r\n    width: 3.5rem;\r\n    height: 3.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 0.75rem;\r\n    color: white;\r\n    margin-right: 1.25rem;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .tests-menu-item-info {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .tests-menu-item-title {\r\n    font-size: 1.125rem;\r\n    font-weight: 600;\r\n    color: #111827;\r\n    margin-bottom: 0.375rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .completed-badge {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #047857;\r\n    margin-left: 0.5rem;\r\n  }\r\n  \r\n  .completed-icon {\r\n    color: #10b981;\r\n    margin-right: 0.25rem;\r\n  }\r\n  \r\n  .attempts-count {\r\n    font-size: 0.75rem;\r\n    background-color: #d1fae5;\r\n    color: #047857;\r\n    padding: 0.125rem 0.375rem;\r\n    border-radius: 1rem;\r\n    margin-left: 0.25rem;\r\n  }\r\n  \r\n  .test-meta-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 0.75rem;\r\n    width: 100%;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .tests-menu-item-category {\r\n    font-size: 0.875rem;\r\n    color: #6b7280;\r\n    max-width: 60%;\r\n  }\r\n  \r\n  .difficulty-badge {\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 1rem;\r\n    min-width: 4.5rem;\r\n    max-width: 6rem;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n  \r\n  .difficulty-easy {\r\n    background-color: #d1fae5;\r\n    color: #065f46;\r\n  }\r\n  \r\n  .difficulty-medium {\r\n    background-color: #e0f2fe;\r\n    color: #0369a1;\r\n  }\r\n  \r\n  .difficulty-hard {\r\n    background-color: #fef3c7;\r\n    color: #92400e;\r\n  }\r\n  \r\n  /* Стили для отображения лучшего результата */\r\n  .best-result {\r\n    margin-top: 0.5rem;\r\n    width: 100%;\r\n  }\r\n  \r\n  .best-result-label {\r\n    font-size: 0.75rem;\r\n    color: #6b7280;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  \r\n  .progress-bar-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .progress-bar {\r\n    flex-grow: 1;\r\n    height: 0.5rem;\r\n    background-color: #e5e7eb;\r\n    border-radius: 0.25rem;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .progress-fill {\r\n    height: 100%;\r\n    border-radius: 0.25rem;\r\n    transition: width 0.5s ease;\r\n  }\r\n  \r\n  .high-accuracy {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .medium-accuracy {\r\n    background-color: #0ea5e9;\r\n  }\r\n  \r\n  .low-accuracy {\r\n    background-color: #f59e0b;\r\n  }\r\n  \r\n  .progress-value {\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    color: #374151;\r\n    min-width: 2.5rem;\r\n    text-align: right;\r\n  }\r\n  \r\n  .icon {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  \r\n  /* Стили для активного теста */\r\n  .test-active-container {\r\n    background-color: #fff;\r\n    border-radius: 1rem;\r\n    padding: 2rem;\r\n    box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.05);\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .test-header {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .back-button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    background: none;\r\n    border: none;\r\n    color: #4b5563;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.5rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .back-button:hover {\r\n    background-color: #f3f4f6;\r\n    color: #3b4ce2;\r\n  }\r\n  \r\n  .test-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    color: #111827;\r\n    margin: 0 auto 0 1rem;\r\n  }\r\n  \r\n  .test-content {\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .test-timer {\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    color: #4b5563;\r\n    background-color: #f3f4f6;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.5rem;\r\n  }\r\n  \r\n  /* Цвета для категорий */\r\n  .icon-math {\r\n    background-color: #6366f1; /* Индиго */\r\n  }\r\n  \r\n  .icon-attention {\r\n    background-color: #8b5cf6; /* Пурпурный */\r\n  }\r\n  \r\n  .icon-reaction {\r\n    background-color: #ec4899; /* Розовый */\r\n  }\r\n  \r\n  .icon-memory {\r\n    background-color: #14b8a6; /* Сине-зеленый */\r\n  }\r\n  \r\n  .icon-verbal {\r\n    background-color: #f59e0b; /* Янтарный */\r\n  }\r\n  \r\n  .icon-spatial {\r\n    background-color: #4f46e5; /* Темно-индиго */\r\n  }\r\n  \r\n  .icon-logic {\r\n    background-color: #0ea5e9; /* Голубой */\r\n  }\r\n  \r\n  .icon-time {\r\n    background-color: #64748b; /* Серый */\r\n  }\r\n  \r\n  .icon-perception {\r\n    background-color: #d946ef; /* Фуксия */\r\n  }\r\n  \r\n  /* Адаптивный дизайн */\r\n  @media (max-width: 768px) {\r\n    .tests-container {\r\n      padding: 1rem;\r\n    }\r\n    \r\n    .tests-main-title {\r\n      font-size: 1.75rem;\r\n      margin-bottom: 2rem;\r\n    }\r\n    \r\n    .tests-menu-grid {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    \r\n    .test-active-container {\r\n      padding: 1rem;\r\n    }\r\n    \r\n    .test-header {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .test-title {\r\n      margin: 1rem 0;\r\n    }\r\n    \r\n    .tests-menu-item-icon {\r\n      width: 3rem;\r\n      height: 3rem;\r\n      margin-right: 0.75rem;\r\n    }\r\n    \r\n    .tests-menu-item-title {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  </style>","import { render } from \"./TestsList.vue?vue&type=template&id=171c87fa\"\nimport script from \"./TestsList.vue?vue&type=script&lang=js\"\nexport * from \"./TestsList.vue?vue&type=script&lang=js\"\n\nimport \"./TestsList.vue?vue&type=style&index=0&id=171c87fa&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\r\nimport Login from '../components/Auth/Login.vue';\r\nimport Register from '../components/Auth/Register.vue';\r\nimport Results from '../components/Results.vue';\r\nimport store from '../store';\r\nimport App1 from '../components/Tests/App1.vue';\r\nimport TestsList from '../components/TestsList.vue';\r\n//import App from '@/App.vue';\r\n\r\n\r\n\r\nconst routes = [\r\n  { path: '/login', component: Login },\r\n  { path: '/register', component: Register },\r\n  { path: '/', component: App1, meta: { requiresAuth: true } },\r\n  { path: '/results', component: Results, meta: { requiresAuth: true } },\r\n  { \r\n    path: '/tests', \r\n    component: TestsList, \r\n    meta: { requiresAuth: true } \r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = store.state.token !== null;\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\r\n    next({ path: '/register' });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport store from './store';\r\nimport router from './router';\r\n\r\nconst app = createApp(App);\r\napp.use(store);\r\napp.use(router); \r\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_vue_app\"] = self[\"webpackChunkmy_vue_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6120); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","key","class","_createElementBlock","_hoisted_1","_ctx","$route","path","_hoisted_2","_createElementVNode","_hoisted_3","onClick","_cache","$event","$data","mobileMenuOpen","_normalizeClass","_createVNode","_component_router_link","to","exact","default","_withCtx","_createTextVNode","_","$options","isAuthenticated","args","logout","_createCommentVNode","_hoisted_4","isTestActive","_component_router_view","name","data","computed","this","$store","state","token","query","active","methods","commit","$router","push","watch","__exports__","render","createStore","user","localStorage","getItem","testResults","JSON","parse","mutations","setUser","setToken","setItem","removeItem","axios","defaults","headers","common","addTestResult","result","existingIndex","findIndex","r","test","test_name","try_number","complete_time","Date","toISOString","stringify","response","post","Authorization","error","console","actions","register","userData","log","login","credentials","username","password","access","Error","dispatch","fetchUser","get","onSubmit","_withModifiers","for","type","placeholder","required","autocomplete","_hoisted_5","showPassword","_hoisted_6","_hoisted_7","_hoisted_8","rememberMe","href","_hoisted_9","_toDisplayString","disabled","isLoggingIn","_hoisted_11","_hoisted_12","_hoisted_10","_hoisted_13","mounted","rememberedUsername","loginData","detail","errorMessages","Object","entries","map","value","join","status","request","handleSubmit","age","min","max","residence","education","_createStaticVNode","specialty","_hoisted_14","_hoisted_15","height","_hoisted_16","weight","_hoisted_17","_hoisted_18","dominant_hand","_hoisted_19","_hoisted_20","_hoisted_21","smoking","_hoisted_22","alcohol","_hoisted_23","sport","_hoisted_24","insomnia","_hoisted_25","gamer","_hoisted_26","_hoisted_27","diseases","rows","_hoisted_28","_hoisted_29","current_mood","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","passwordConfirm","passwordError","_hoisted_34","isFormValid","_hoisted_35","_hoisted_36","email","parseInt","password2","alert","loading","fetchResults","results","length","xmlns","width","viewBox","fill","stroke","cx","cy","x1","y1","x2","y2","searchQuery","_Fragment","_renderList","filterPeriods","period","currentPeriod","setFilterPeriod","label","points","d","uniqueTestsCount","averageAccuracy","lastTestDate","paginatedResults","index","formatDate","getAccuracyClass","accuracy","style","_normalizeStyle","number_correct_answers","number_all_answers","totalPages","currentPage","displayedPages","page","itemsPerPage","filteredResults","filtered","toLowerCase","filter","includes","now","startDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","sort","a","b","start","end","slice","Math","ceil","pages","maxVisiblePages","i","startPage","floor","endPage","sum","reduce","total","toFixed","uniqueTestNames","Set","size","setTimeout","dateString","date","Intl","DateTimeFormat","day","month","year","hour","minute","format","e","created","currentCategory","currentTest","backToCategories","innerHTML","categoryIcons","categories","title","description","getCategoryTests","selectTest","difficulty","getDifficultyLabel","backToCategory","getTestName","_component_Timer","ref","_createBlock","_resolveDynamicComponent","onTestComplete","onTestStart","category","selectCategory","formattedTime","timeElapsed","timer","seconds","minutes","startTimer","resetTimer","setInterval","stopTimer","clearInterval","beforeUnmount","testStarted","currentTask","totalTasks","testCompleted","progress","taskWords","word","color","text","options","option","checkAnswer","formatOption","startTest","score","restartTest","words","colors","correctAnswer","$emit","generateTask","wordsCount","answer","randomColorText","random","randomColorIndex","randomColor","generateOptions","variant","changeCount","positionsToChange","pos","add","newColor","randomIndex","isDuplicate","some","opt","firstHalf","secondHalf","selectedOption","currentAttempt","totalAttempts","handleClick","isGreen","isWaiting","lastReactionTime","tooSoonMessage","averageReactionTime","bestReactionTime","reactionTimes","timeoutId","startTime","round","startNextAttempt","randomDelay","performance","clearTimeout","reactionTime","currentQuestion","totalQuestions","src","currentImage","alt","currentQuestionText","currentOptions","questions","image","showResults","selectedWords","totalWords","textChars","char","selectChar","isHighlighted","finishTest","missedWords","highlightedIndices","split","generateTextWithWords","totalLength","randomLetters","Array","getRandomLetter","wordPositions","positioned","attempts","startPos","canPlace","charAt","letters","checkWordCompletion","forEach","startIndex","indexOf","allSelected","every","resultsVisible","row","formatRow","userAnswers","number","submitAnswers","correctAnswers","generateRows","from","count","correctSum","digit","isTestFinished","currentPair","string1","string2","isSame","areEqual","currentQuestionData","question","answers","correct","nextQuestion","currentLevel","maxLevels","showNumbers","getGridClass","visibleNumbers","remainingTime","currentLevelNumbers","inputs","inputmode","pattern","checkAnswers","showLevelResult","lastLevelSuccess","formatInputs","nextLevel","allowContinue","continueTest","retryLevel","gameOver","getMemorySpan","generateLevel","numbersCount","maxNumber","num","Number","errorCount","input","getNumberLabel","lastDigit","lastTwoDigits","showRules","isTimeUp","colorValue","colorName","submitAnswer","colorValues","retryTest","showResultsTable","questionsWithAnswers","getColorNameByValue","userAnswer","isCorrect","generateQuestions","colorIndex","getColorForWord","shuffleQuestions","j","currentTaskIndex","tasks","formattedDescription","openImageModal","showAnswer","prevTask","nextTask","answerImage","showImageModal","closeImageModal","currentModalImage","paragraph","currentQuestionIndex","testFinished","questionText","selectAnswer","mistakes","mistake","questionIndex","selectedAnswer","selectedAnswers","find","ans","maxAttempts","stateClass","feedback","getFeedbackClass","bestTime","averageTime","_hoisted_37","timeout","timeHistory","acc","val","calculateScore","startGame","sequence","getOpacityClass","lives","restartGame","transparencyLevels","streak","isBlinking","leftCounter","centerCounter","getRandomDigit","forceMatch","probabilityMatch","level","isYes","totalPossibleAnswers","completedRounds","completionRatio","lostLives","livesLostPenalty","finalCompletionRatio","blinkRightDigit","shiftSequence","records","isTiming","measuredTime","intervals","sec","startInterval","chosenSec","getDeviationClass","getDeviation","record","idx","planned","measured","showFinalResults","averageError","bestResult","worstResult","_hoisted_38","totalError","rec","abs","elapsed","diff","getGridSizeClass","showFeedback","gridColors","backgroundColor","correctIndex","lastWrongIndex","lastAnswerCorrect","tryAgain","skipsRemaining","skipLevel","generateGrid","getGridSize","baseColor","differentColor","validColorFound","generateSimilarColor","colorDifference","calculateColorDifference","minDifference","gridSize","color1","color2","r1","g1","b1","r2","g2","b2","g","delta","channels","toString","padStart","endTest","minValue","maxValue","isFinished","levels","gridTemplateColumns","gridX","gridTemplateRows","gridY","shuffledPieces","piece","backgroundImage","backgroundPosition","position","onDragstart","dragStart","onDragover","onDrop","drop","handlePieceClick","draggable","shufflePuzzle","checkPuzzle","errorMessage","isSolved","pieces","originalPieces","draggedIndex","levelImages","firstSelectedIndex","generatePuzzle","x","y","totalCells","backgroundSize","cellWidth","cellHeight","col","array","isShuffled","different","components","Timer","AttentionTest","ReactionTest","MemoryTest","TextSelectionTest","SumDigitsTest","SecondTest","ThirdTest","FourthTest","FifthTest","SovietLogicTest","SpatialSkillTest","QuickResponseTest","NBackMemory","TimeEvaluator","ColorTest","PuzzleGame","math","attention","reaction","memory","verbal","spatial","logic","time","perception","allTests","categoryKey","testKey","t","$refs","total_test","totalTime","saveTestResult","showTestResult","testName","percentage","tryNumber","existingResults","maxTryNumber","testResult","test_id","completion_time_seconds","resultMessage","backToMenu","tests","isTestCompleted","getIconClass","getTestIcon","getCompletedCount","getCategoryName","getTestCategory","getDifficultyClass","getBestAccuracy","testCategories","testDifficulties","categoryNames","accuracies","getTestDifficulty","keys","routes","component","Login","Register","App1","meta","requiresAuth","Results","TestsList","router","createRouter","history","createWebHistory","beforeEach","next","store","matched","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}